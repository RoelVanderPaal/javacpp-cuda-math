//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-19324574
// Cuda compilation tools, release 7.0, V7.0.27
// Based on LLVM 3.4svn
//

.version 4.2
.target sm_20
.address_size 32

	// .globl	math_acosf
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry math_acosf(
	.param .u32 math_acosf_param_0,
	.param .u32 math_acosf_param_1,
	.param .u32 math_acosf_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<27>;
	.reg .s32 	%r<13>;


	ld.param.u32 	%r4, [math_acosf_param_0];
	ld.param.u32 	%r2, [math_acosf_param_1];
	ld.param.u32 	%r3, [math_acosf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB0_2;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, 0f3F000000;
	sqrt.rn.f32 	%f6, %f5;
	setp.gt.f32	%p2, %f2, 0f3F11EB85;
	selp.f32	%f7, %f6, %f2, %p2;
	mul.f32 	%f8, %f7, %f7;
	mov.f32 	%f9, 0f3C94D2E9;
	mov.f32 	%f10, 0f3D53F941;
	fma.rn.f32 	%f11, %f10, %f8, %f9;
	mov.f32 	%f12, 0f3D3F841F;
	fma.rn.f32 	%f13, %f11, %f8, %f12;
	mov.f32 	%f14, 0f3D994929;
	fma.rn.f32 	%f15, %f13, %f8, %f14;
	mov.f32 	%f16, 0f3E2AAB94;
	fma.rn.f32 	%f17, %f15, %f8, %f16;
	mul.f32 	%f18, %f8, %f17;
	fma.rn.f32 	%f19, %f18, %f7, %f7;
	add.f32 	%f20, %f19, %f19;
	mov.f32 	%f21, 0f3FC90FDB;
	sub.f32 	%f22, %f21, %f19;
	selp.f32	%f23, %f20, %f22, %p2;
	setp.lt.f32	%p3, %f1, 0f00000000;
	mov.f32 	%f24, 0f40490FDB;
	sub.f32 	%f25, %f24, %f23;
	selp.f32	%f26, %f25, %f23, %p3;
	cvta.to.global.u32 	%r11, %r2;
	add.s32 	%r12, %r11, %r9;
	st.global.f32 	[%r12], %f26;

BB0_2:
	ret;
}

	// .globl	math_acoshf
.visible .entry math_acoshf(
	.param .u32 math_acoshf_param_0,
	.param .u32 math_acoshf_param_1,
	.param .u32 math_acoshf_param_2
)
{
	.reg .pred 	%p<16>;
	.reg .f32 	%f<85>;
	.reg .s32 	%r<23>;


	ld.param.u32 	%r4, [math_acoshf_param_0];
	ld.param.u32 	%r2, [math_acoshf_param_1];
	ld.param.u32 	%r3, [math_acoshf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB1_12;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	add.f32 	%f2, %f1, 0fBF800000;
	mov.b32 	 %r11, %f2;
	setp.gt.u32	%p2, %r11, 1258291200;
	@%p2 bra 	BB1_7;
	bra.uni 	BB1_2;

BB1_7:
	setp.gt.f32	%p11, %f2, 0f00000000;
	setp.lt.f32	%p12, %f2, 0f7F800000;
	and.pred  	%p13, %p11, %p12;
	@%p13 bra 	BB1_9;
	bra.uni 	BB1_8;

BB1_9:
	setp.lt.f32	%p14, %f2, 0f00800000;
	mul.f32 	%f58, %f2, 0f4B800000;
	selp.f32	%f59, %f58, %f2, %p14;
	selp.f32	%f60, 0fC3170000, 0fC2FE0000, %p14;
	mov.b32 	 %r16, %f59;
	and.b32  	%r17, %r16, 8388607;
	or.b32  	%r18, %r17, 1065353216;
	mov.b32 	 %f61, %r18;
	shr.u32 	%r19, %r16, 23;
	cvt.rn.f32.u32	%f62, %r19;
	add.f32 	%f63, %f60, %f62;
	setp.gt.f32	%p15, %f61, 0f3FAE147B;
	mul.f32 	%f64, %f61, 0f3F000000;
	add.f32 	%f65, %f63, 0f3F800000;
	selp.f32	%f66, %f64, %f61, %p15;
	selp.f32	%f67, %f65, %f63, %p15;
	add.f32 	%f57, %f66, 0f3F800000;
	add.f32 	%f68, %f66, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f56,%f57;
	// inline asm
	mul.f32 	%f69, %f68, %f68;
	neg.f32 	%f70, %f69;
	mul.rn.f32 	%f71, %f56, %f70;
	add.rn.f32 	%f72, %f68, %f71;
	mul.f32 	%f73, %f72, %f72;
	mov.f32 	%f74, 0f3C4C6A36;
	mov.f32 	%f75, 0f3B1E94E6;
	fma.rn.f32 	%f76, %f75, %f73, %f74;
	mov.f32 	%f77, 0f3DAAAB1A;
	fma.rn.f32 	%f78, %f76, %f73, %f77;
	mul.f32 	%f79, %f73, %f78;
	fma.rn.f32 	%f80, %f79, %f72, %f71;
	add.f32 	%f81, %f68, %f80;
	mov.f32 	%f82, 0f3F317218;
	fma.rn.f32 	%f83, %f67, %f82, %f81;
	bra.uni 	BB1_10;

BB1_2:
	mul.rz.f32 	%f13, %f1, %f2;
	add.rn.f32 	%f14, %f13, %f2;
	sqrt.rn.f32 	%f15, %f14;
	add.f32 	%f3, %f2, %f15;
	setp.le.f32	%p3, %f3, 0f3F266666;
	setp.ge.f32	%p4, %f3, 0fBEC9BA5E;
	and.pred  	%p5, %p4, %p3;
	@%p5 bra 	BB1_6;
	bra.uni 	BB1_3;

BB1_6:
	add.f32 	%f43, %f3, 0f40000000;
	div.approx.f32 	%f44, %f3, %f43;
	neg.f32 	%f45, %f3;
	mul.rn.f32 	%f46, %f45, %f44;
	add.rn.f32 	%f47, %f3, %f46;
	mul.f32 	%f48, %f47, %f47;
	mov.f32 	%f49, 0f3C4C4BE0;
	mov.f32 	%f50, 0f3B2063C3;
	fma.rn.f32 	%f51, %f50, %f48, %f49;
	mov.f32 	%f52, 0f3DAAAB50;
	fma.rn.f32 	%f53, %f51, %f48, %f52;
	mul.f32 	%f54, %f48, %f53;
	fma.rn.f32 	%f55, %f54, %f47, %f46;
	add.f32 	%f84, %f3, %f55;
	bra.uni 	BB1_11;

BB1_8:
	lg2.approx.f32 	%f83, %f2;

BB1_10:
	add.f32 	%f84, %f83, 0f3F317218;
	bra.uni 	BB1_11;

BB1_3:
	add.f32 	%f4, %f3, 0f3F800000;
	setp.gt.f32	%p6, %f4, 0f00000000;
	setp.lt.f32	%p7, %f4, 0f7F800000;
	and.pred  	%p8, %p6, %p7;
	@%p8 bra 	BB1_5;
	bra.uni 	BB1_4;

BB1_5:
	setp.lt.f32	%p9, %f4, 0f00800000;
	mul.f32 	%f18, %f4, 0f4B800000;
	selp.f32	%f19, %f18, %f4, %p9;
	selp.f32	%f20, 0fC3170000, 0fC2FE0000, %p9;
	mov.b32 	 %r12, %f19;
	and.b32  	%r13, %r12, 8388607;
	or.b32  	%r14, %r13, 1065353216;
	mov.b32 	 %f21, %r14;
	shr.u32 	%r15, %r12, 23;
	cvt.rn.f32.u32	%f22, %r15;
	add.f32 	%f23, %f20, %f22;
	setp.gt.f32	%p10, %f21, 0f3FAE147B;
	mul.f32 	%f24, %f21, 0f3F000000;
	add.f32 	%f25, %f23, 0f3F800000;
	selp.f32	%f26, %f24, %f21, %p10;
	selp.f32	%f27, %f25, %f23, %p10;
	add.f32 	%f17, %f26, 0f3F800000;
	add.f32 	%f28, %f26, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f16,%f17;
	// inline asm
	mul.f32 	%f29, %f28, %f28;
	neg.f32 	%f30, %f29;
	mul.rn.f32 	%f31, %f16, %f30;
	add.rn.f32 	%f32, %f28, %f31;
	mul.f32 	%f33, %f32, %f32;
	mov.f32 	%f34, 0f3C4C6A36;
	mov.f32 	%f35, 0f3B1E94E6;
	fma.rn.f32 	%f36, %f35, %f33, %f34;
	mov.f32 	%f37, 0f3DAAAB1A;
	fma.rn.f32 	%f38, %f36, %f33, %f37;
	mul.f32 	%f39, %f33, %f38;
	fma.rn.f32 	%f40, %f39, %f32, %f31;
	add.f32 	%f41, %f28, %f40;
	mov.f32 	%f42, 0f3F317218;
	fma.rn.f32 	%f84, %f27, %f42, %f41;
	bra.uni 	BB1_11;

BB1_4:
	lg2.approx.f32 	%f84, %f4;

BB1_11:
	cvta.to.global.u32 	%r20, %r2;
	add.s32 	%r22, %r20, %r9;
	st.global.f32 	[%r22], %f84;

BB1_12:
	ret;
}

	// .globl	math_asinf
.visible .entry math_asinf(
	.param .u32 math_asinf_param_0,
	.param .u32 math_asinf_param_1,
	.param .u32 math_asinf_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<26>;
	.reg .s32 	%r<17>;


	ld.param.u32 	%r4, [math_asinf_param_0];
	ld.param.u32 	%r2, [math_asinf_param_1];
	ld.param.u32 	%r3, [math_asinf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB2_2;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, 0f3F000000;
	sqrt.rn.f32 	%f6, %f5;
	setp.gt.f32	%p2, %f2, 0f3F11EB85;
	selp.f32	%f7, %f6, %f2, %p2;
	mul.f32 	%f8, %f7, %f7;
	mov.f32 	%f9, 0f3C94D2E9;
	mov.f32 	%f10, 0f3D53F941;
	fma.rn.f32 	%f11, %f10, %f8, %f9;
	mov.f32 	%f12, 0f3D3F841F;
	fma.rn.f32 	%f13, %f11, %f8, %f12;
	mov.f32 	%f14, 0f3D994929;
	fma.rn.f32 	%f15, %f13, %f8, %f14;
	mov.f32 	%f16, 0f3E2AAB94;
	fma.rn.f32 	%f17, %f15, %f8, %f16;
	mul.f32 	%f18, %f8, %f17;
	fma.rn.f32 	%f19, %f18, %f7, %f7;
	mov.f32 	%f20, 0f3FC90FDB;
	mov.f32 	%f21, 0fC0000000;
	fma.rn.f32 	%f22, %f21, %f19, %f20;
	selp.f32	%f23, %f22, %f19, %p2;
	setp.gtu.f32	%p3, %f23, 0f7F800000;
	mov.b32 	 %r11, %f23;
	mov.b32 	 %r12, %f1;
	and.b32  	%r13, %r12, -2147483648;
	or.b32  	%r14, %r11, %r13;
	mov.b32 	 %f24, %r14;
	selp.f32	%f25, %f23, %f24, %p3;
	cvta.to.global.u32 	%r15, %r2;
	add.s32 	%r16, %r15, %r9;
	st.global.f32 	[%r16], %f25;

BB2_2:
	ret;
}

	// .globl	math_asinhf
.visible .entry math_asinhf(
	.param .u32 math_asinhf_param_0,
	.param .u32 math_asinhf_param_1,
	.param .u32 math_asinhf_param_2
)
{
	.reg .pred 	%p<12>;
	.reg .f32 	%f<62>;
	.reg .s32 	%r<22>;


	ld.param.u32 	%r4, [math_asinhf_param_0];
	ld.param.u32 	%r2, [math_asinhf_param_1];
	ld.param.u32 	%r3, [math_asinhf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB3_9;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	abs.f32 	%f2, %f1;
	setp.gt.f32	%p2, %f2, 0f7E800000;
	@%p2 bra 	BB3_7;
	bra.uni 	BB3_2;

BB3_7:
	lg2.approx.f32 	%f56, %f2;
	mul.f32 	%f57, %f56, 0f3F317218;
	mov.f32 	%f58, 0f3F317218;
	add.rn.f32 	%f61, %f58, %f57;
	bra.uni 	BB3_8;

BB3_2:
	rcp.rn.f32 	%f12, %f2;
	mov.f32 	%f13, 0f3F800000;
	fma.rn.f32 	%f14, %f12, %f12, %f13;
	sqrt.rn.f32 	%f15, %f14;
	add.f32 	%f11, %f12, %f15;
	// inline asm
	rcp.approx.ftz.f32 %f10,%f11;
	// inline asm
	fma.rn.f32 	%f3, %f2, %f10, %f2;
	setp.le.f32	%p3, %f3, 0f3F266666;
	setp.ge.f32	%p4, %f3, 0fBEC9BA5E;
	and.pred  	%p5, %p4, %p3;
	@%p5 bra 	BB3_6;
	bra.uni 	BB3_3;

BB3_6:
	add.f32 	%f43, %f3, 0f40000000;
	div.approx.f32 	%f44, %f3, %f43;
	neg.f32 	%f45, %f3;
	mul.rn.f32 	%f46, %f45, %f44;
	add.rn.f32 	%f47, %f3, %f46;
	mul.f32 	%f48, %f47, %f47;
	mov.f32 	%f49, 0f3C4C4BE0;
	mov.f32 	%f50, 0f3B2063C3;
	fma.rn.f32 	%f51, %f50, %f48, %f49;
	mov.f32 	%f52, 0f3DAAAB50;
	fma.rn.f32 	%f53, %f51, %f48, %f52;
	mul.f32 	%f54, %f48, %f53;
	fma.rn.f32 	%f55, %f54, %f47, %f46;
	add.f32 	%f61, %f3, %f55;
	bra.uni 	BB3_8;

BB3_3:
	add.f32 	%f4, %f3, 0f3F800000;
	setp.gt.f32	%p6, %f4, 0f00000000;
	setp.lt.f32	%p7, %f4, 0f7F800000;
	and.pred  	%p8, %p6, %p7;
	@%p8 bra 	BB3_5;
	bra.uni 	BB3_4;

BB3_5:
	setp.lt.f32	%p9, %f4, 0f00800000;
	mul.f32 	%f18, %f4, 0f4B800000;
	selp.f32	%f19, %f18, %f4, %p9;
	selp.f32	%f20, 0fC3170000, 0fC2FE0000, %p9;
	mov.b32 	 %r11, %f19;
	and.b32  	%r12, %r11, 8388607;
	or.b32  	%r13, %r12, 1065353216;
	mov.b32 	 %f21, %r13;
	shr.u32 	%r14, %r11, 23;
	cvt.rn.f32.u32	%f22, %r14;
	add.f32 	%f23, %f20, %f22;
	setp.gt.f32	%p10, %f21, 0f3FAE147B;
	mul.f32 	%f24, %f21, 0f3F000000;
	add.f32 	%f25, %f23, 0f3F800000;
	selp.f32	%f26, %f24, %f21, %p10;
	selp.f32	%f27, %f25, %f23, %p10;
	add.f32 	%f17, %f26, 0f3F800000;
	add.f32 	%f28, %f26, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f16,%f17;
	// inline asm
	mul.f32 	%f29, %f28, %f28;
	neg.f32 	%f30, %f29;
	mul.rn.f32 	%f31, %f16, %f30;
	add.rn.f32 	%f32, %f28, %f31;
	mul.f32 	%f33, %f32, %f32;
	mov.f32 	%f34, 0f3C4C6A36;
	mov.f32 	%f35, 0f3B1E94E6;
	fma.rn.f32 	%f36, %f35, %f33, %f34;
	mov.f32 	%f37, 0f3DAAAB1A;
	fma.rn.f32 	%f38, %f36, %f33, %f37;
	mul.f32 	%f39, %f33, %f38;
	fma.rn.f32 	%f40, %f39, %f32, %f31;
	add.f32 	%f41, %f28, %f40;
	mov.f32 	%f42, 0f3F317218;
	fma.rn.f32 	%f61, %f27, %f42, %f41;
	bra.uni 	BB3_8;

BB3_4:
	lg2.approx.f32 	%f61, %f4;

BB3_8:
	cvta.to.global.u32 	%r15, %r2;
	mov.b32 	 %r16, %f1;
	and.b32  	%r17, %r16, -2147483648;
	mov.b32 	 %r18, %f61;
	or.b32  	%r19, %r18, %r17;
	mov.b32 	 %f59, %r19;
	setp.gtu.f32	%p11, %f2, 0f7F800000;
	selp.f32	%f60, %f61, %f59, %p11;
	add.s32 	%r21, %r15, %r9;
	st.global.f32 	[%r21], %f60;

BB3_9:
	ret;
}

	// .globl	math_atanf
.visible .entry math_atanf(
	.param .u32 math_atanf_param_0,
	.param .u32 math_atanf_param_1,
	.param .u32 math_atanf_param_2
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<26>;
	.reg .s32 	%r<18>;


	ld.param.u32 	%r4, [math_atanf_param_0];
	ld.param.u32 	%r2, [math_atanf_param_1];
	ld.param.u32 	%r3, [math_atanf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB4_4;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	abs.f32 	%f2, %f1;
	setp.leu.f32	%p2, %f2, 0f3F800000;
	mov.f32 	%f25, %f2;
	@%p2 bra 	BB4_3;

	rcp.rn.f32 	%f3, %f2;
	mov.f32 	%f25, %f3;

BB4_3:
	mov.f32 	%f4, %f25;
	cvta.to.global.u32 	%r11, %r2;
	mul.rn.f32 	%f5, %f4, %f4;
	mov.f32 	%f6, 0fC0B59883;
	mov.f32 	%f7, 0fBF52C7EA;
	fma.rn.f32 	%f8, %f5, %f7, %f6;
	mov.f32 	%f9, 0fC0D21907;
	fma.rn.f32 	%f10, %f8, %f5, %f9;
	mul.f32 	%f11, %f5, %f10;
	mul.f32 	%f12, %f4, %f11;
	add.f32 	%f13, %f5, 0f41355DC0;
	mov.f32 	%f14, 0f41E6BD60;
	fma.rn.f32 	%f15, %f13, %f5, %f14;
	mov.f32 	%f16, 0f419D92C8;
	fma.rn.f32 	%f17, %f15, %f5, %f16;
	rcp.rn.f32 	%f18, %f17;
	fma.rn.f32 	%f19, %f12, %f18, %f4;
	mov.f32 	%f20, 0f3FC90FDB;
	sub.f32 	%f21, %f20, %f19;
	setp.gt.f32	%p3, %f2, 0f3F800000;
	selp.f32	%f22, %f21, %f19, %p3;
	mov.b32 	 %r12, %f22;
	mov.b32 	 %r13, %f1;
	and.b32  	%r14, %r13, -2147483648;
	or.b32  	%r15, %r12, %r14;
	mov.b32 	 %f23, %r15;
	setp.gtu.f32	%p4, %f2, 0f7F800000;
	selp.f32	%f24, %f22, %f23, %p4;
	add.s32 	%r17, %r11, %r9;
	st.global.f32 	[%r17], %f24;

BB4_4:
	ret;
}

	// .globl	math_atanhf
.visible .entry math_atanhf(
	.param .u32 math_atanhf_param_0,
	.param .u32 math_atanhf_param_1,
	.param .u32 math_atanhf_param_2
)
{
	.reg .pred 	%p<12>;
	.reg .f32 	%f<59>;
	.reg .s32 	%r<22>;


	ld.param.u32 	%r4, [math_atanhf_param_0];
	ld.param.u32 	%r2, [math_atanhf_param_1];
	ld.param.u32 	%r3, [math_atanhf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB5_7;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	abs.f32 	%f10, %f1;
	mov.f32 	%f11, 0f3F800000;
	sub.f32 	%f9, %f11, %f10;
	// inline asm
	rcp.approx.ftz.f32 %f8,%f9;
	// inline asm
	add.f32 	%f12, %f8, %f8;
	mul.f32 	%f13, %f10, %f12;
	setp.gt.f32	%p2, %f10, 0f7E800000;
	selp.f32	%f2, 0fC0000000, %f13, %p2;
	setp.le.f32	%p3, %f2, 0f3F266666;
	setp.ge.f32	%p4, %f2, 0fBEC9BA5E;
	and.pred  	%p5, %p4, %p3;
	@%p5 bra 	BB5_5;
	bra.uni 	BB5_2;

BB5_5:
	add.f32 	%f41, %f2, 0f40000000;
	div.approx.f32 	%f42, %f2, %f41;
	neg.f32 	%f43, %f2;
	mul.rn.f32 	%f44, %f43, %f42;
	add.rn.f32 	%f45, %f2, %f44;
	mul.f32 	%f46, %f45, %f45;
	mov.f32 	%f47, 0f3C4C4BE0;
	mov.f32 	%f48, 0f3B2063C3;
	fma.rn.f32 	%f49, %f48, %f46, %f47;
	mov.f32 	%f50, 0f3DAAAB50;
	fma.rn.f32 	%f51, %f49, %f46, %f50;
	mul.f32 	%f52, %f46, %f51;
	fma.rn.f32 	%f53, %f52, %f45, %f44;
	add.f32 	%f58, %f2, %f53;
	bra.uni 	BB5_6;

BB5_2:
	add.f32 	%f3, %f2, 0f3F800000;
	setp.gt.f32	%p6, %f3, 0f00000000;
	setp.lt.f32	%p7, %f3, 0f7F800000;
	and.pred  	%p8, %p6, %p7;
	@%p8 bra 	BB5_4;
	bra.uni 	BB5_3;

BB5_4:
	setp.lt.f32	%p9, %f3, 0f00800000;
	mul.f32 	%f16, %f3, 0f4B800000;
	selp.f32	%f17, %f16, %f3, %p9;
	selp.f32	%f18, 0fC3170000, 0fC2FE0000, %p9;
	mov.b32 	 %r11, %f17;
	and.b32  	%r12, %r11, 8388607;
	or.b32  	%r13, %r12, 1065353216;
	mov.b32 	 %f19, %r13;
	shr.u32 	%r14, %r11, 23;
	cvt.rn.f32.u32	%f20, %r14;
	add.f32 	%f21, %f18, %f20;
	setp.gt.f32	%p10, %f19, 0f3FAE147B;
	mul.f32 	%f22, %f19, 0f3F000000;
	add.f32 	%f23, %f21, 0f3F800000;
	selp.f32	%f24, %f22, %f19, %p10;
	selp.f32	%f25, %f23, %f21, %p10;
	add.f32 	%f15, %f24, 0f3F800000;
	add.f32 	%f26, %f24, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f14,%f15;
	// inline asm
	mul.f32 	%f27, %f26, %f26;
	neg.f32 	%f28, %f27;
	mul.rn.f32 	%f29, %f14, %f28;
	add.rn.f32 	%f30, %f26, %f29;
	mul.f32 	%f31, %f30, %f30;
	mov.f32 	%f32, 0f3C4C6A36;
	mov.f32 	%f33, 0f3B1E94E6;
	fma.rn.f32 	%f34, %f33, %f31, %f32;
	mov.f32 	%f35, 0f3DAAAB1A;
	fma.rn.f32 	%f36, %f34, %f31, %f35;
	mul.f32 	%f37, %f31, %f36;
	fma.rn.f32 	%f38, %f37, %f30, %f29;
	add.f32 	%f39, %f26, %f38;
	mov.f32 	%f40, 0f3F317218;
	fma.rn.f32 	%f58, %f25, %f40, %f39;
	bra.uni 	BB5_6;

BB5_3:
	lg2.approx.f32 	%f58, %f3;

BB5_6:
	cvta.to.global.u32 	%r15, %r2;
	mul.f32 	%f54, %f58, 0f3F000000;
	abs.f32 	%f55, %f54;
	setp.gtu.f32	%p11, %f55, 0f7F800000;
	mov.b32 	 %r16, %f54;
	mov.b32 	 %r17, %f1;
	and.b32  	%r18, %r17, -2147483648;
	or.b32  	%r19, %r16, %r18;
	mov.b32 	 %f56, %r19;
	selp.f32	%f57, %f54, %f56, %p11;
	add.s32 	%r21, %r15, %r9;
	st.global.f32 	[%r21], %f57;

BB5_7:
	ret;
}

	// .globl	math_cbrtf
.visible .entry math_cbrtf(
	.param .u32 math_cbrtf_param_0,
	.param .u32 math_cbrtf_param_1,
	.param .u32 math_cbrtf_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<16>;
	.reg .s32 	%r<14>;


	ld.param.u32 	%r4, [math_cbrtf_param_0];
	ld.param.u32 	%r2, [math_cbrtf_param_1];
	ld.param.u32 	%r3, [math_cbrtf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB6_2;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f5, [%r10];
	abs.f32 	%f6, %f5;
	lg2.approx.f32 	%f7, %f6;
	mul.f32 	%f2, %f7, 0f3EAAAAAB;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	mul.f32 	%f4, %f1, %f1;
	// inline asm
	rcp.approx.ftz.f32 %f3,%f4;
	// inline asm
	neg.f32 	%f8, %f6;
	fma.rn.f32 	%f9, %f3, %f8, %f1;
	mov.f32 	%f10, 0fBEAAAAAB;
	fma.rn.f32 	%f11, %f9, %f10, %f1;
	mov.b32 	 %r11, %f5;
	setp.lt.s32	%p2, %r11, 0;
	neg.f32 	%f12, %f11;
	selp.f32	%f13, %f12, %f11, %p2;
	add.f32 	%f14, %f5, %f5;
	setp.eq.f32	%p3, %f14, %f5;
	selp.f32	%f15, %f14, %f13, %p3;
	cvta.to.global.u32 	%r12, %r2;
	add.s32 	%r13, %r12, %r9;
	st.global.f32 	[%r13], %f15;

BB6_2:
	ret;
}

	// .globl	math_ceilf
.visible .entry math_ceilf(
	.param .u32 math_ceilf_param_0,
	.param .u32 math_ceilf_param_1,
	.param .u32 math_ceilf_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .s32 	%r<13>;


	ld.param.u32 	%r4, [math_ceilf_param_0];
	ld.param.u32 	%r2, [math_ceilf_param_1];
	ld.param.u32 	%r3, [math_ceilf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB7_2;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	cvt.rpi.f32.f32	%f2, %f1;
	cvta.to.global.u32 	%r11, %r2;
	add.s32 	%r12, %r11, %r9;
	st.global.f32 	[%r12], %f2;

BB7_2:
	ret;
}

	// .globl	math_cosf
.visible .entry math_cosf(
	.param .u32 math_cosf_param_0,
	.param .u32 math_cosf_param_1,
	.param .u32 math_cosf_param_2
)
{
	.local .align 4 .b8 	__local_depot8[28];
	.reg .b32 	%SP;
	.reg .b32 	%SPL;
	.reg .pred 	%p<15>;
	.reg .f32 	%f<48>;
	.reg .s32 	%r<121>;


	mov.u32 	%r120, __local_depot8;
	cvta.local.u32 	%SP, %r120;
	ld.param.u32 	%r48, [math_cosf_param_0];
	ld.param.u32 	%r46, [math_cosf_param_1];
	ld.param.u32 	%r47, [math_cosf_param_2];
	add.u32 	%r49, %SP, 0;
	cvta.to.local.u32 	%r1, %r49;
	mov.u32 	%r50, %ntid.x;
	mov.u32 	%r51, %ctaid.x;
	mov.u32 	%r52, %tid.x;
	mad.lo.s32 	%r2, %r50, %r51, %r52;
	setp.ge.u32	%p1, %r2, %r48;
	@%p1 bra 	BB8_24;

	cvta.to.global.u32 	%r53, %r47;
	shl.b32 	%r54, %r2, 2;
	add.s32 	%r55, %r53, %r54;
	ld.global.f32 	%f43, [%r55];
	abs.f32 	%f19, %f43;
	setp.neu.f32	%p2, %f19, 0f7F800000;
	@%p2 bra 	BB8_3;

	mov.f32 	%f20, 0f00000000;
	mul.rn.f32 	%f43, %f43, %f20;

BB8_3:
	mul.f32 	%f21, %f43, 0f3F22F983;
	cvt.rni.s32.f32	%r119, %f21;
	cvt.rn.f32.s32	%f22, %r119;
	neg.f32 	%f23, %f22;
	mov.f32 	%f24, 0f3FC90FDA;
	fma.rn.f32 	%f25, %f23, %f24, %f43;
	mov.f32 	%f26, 0f33A22168;
	fma.rn.f32 	%f27, %f23, %f26, %f25;
	mov.f32 	%f28, 0f27C234C5;
	fma.rn.f32 	%f44, %f23, %f28, %f27;
	abs.f32 	%f29, %f43;
	setp.leu.f32	%p3, %f29, 0f47CE4780;
	@%p3 bra 	BB8_13;

	mov.b32 	 %r5, %f43;
	shr.u32 	%r6, %r5, 23;
	bfe.u32 	%r59, %r5, 23, 8;
	add.s32 	%r60, %r59, -128;
	shl.b32 	%r61, %r5, 8;
	or.b32  	%r7, %r61, -2147483648;
	shr.u32 	%r8, %r60, 5;
	mov.u32 	%r111, 0;
	mov.u32 	%r109, 6;
	mov.u32 	%r108, __cudart_i2opi_f;
	mov.u32 	%r110, %r1;

BB8_5:
	.pragma "nounroll";
	mov.u32 	%r11, %r110;
	ld.const.u32 	%r64, [%r108];
	// inline asm
	{
	mad.lo.cc.u32   %r62, %r64, %r7, %r111;
	madc.hi.u32     %r63, %r64, %r7,  0;
	}
	// inline asm
	mov.u32 	%r111, %r63;
	st.local.u32 	[%r11], %r62;
	add.s32 	%r14, %r11, 4;
	add.s32 	%r108, %r108, 4;
	add.s32 	%r109, %r109, -1;
	setp.ne.s32	%p4, %r109, 0;
	mov.u32 	%r110, %r14;
	@%p4 bra 	BB8_5;

	and.b32  	%r17, %r5, -2147483648;
	mov.u32 	%r67, 4;
	sub.s32 	%r68, %r67, %r8;
	shl.b32 	%r69, %r68, 2;
	add.s32 	%r70, %r69, %r1;
	st.local.u32 	[%r1+24], %r63;
	ld.local.u32 	%r112, [%r70+8];
	ld.local.u32 	%r113, [%r70+4];
	and.b32  	%r21, %r6, 31;
	setp.eq.s32	%p5, %r21, 0;
	@%p5 bra 	BB8_8;

	mov.u32 	%r71, 32;
	sub.s32 	%r72, %r71, %r21;
	shr.u32 	%r73, %r113, %r72;
	shl.b32 	%r74, %r112, %r21;
	add.s32 	%r112, %r73, %r74;
	add.s32 	%r107, %r70, 8;
	ld.local.u32 	%r75, [%r107+-8];
	shr.u32 	%r76, %r75, %r72;
	shl.b32 	%r77, %r113, %r21;
	add.s32 	%r113, %r76, %r77;

BB8_8:
	shr.u32 	%r78, %r113, 30;
	shl.b32 	%r79, %r112, 2;
	add.s32 	%r114, %r78, %r79;
	shl.b32 	%r27, %r113, 2;
	shr.u32 	%r80, %r114, 31;
	shr.u32 	%r81, %r112, 30;
	add.s32 	%r28, %r80, %r81;
	setp.eq.s32	%p6, %r80, 0;
	mov.u32 	%r115, %r17;
	mov.u32 	%r116, %r27;
	@%p6 bra 	BB8_10;

	not.b32 	%r82, %r114;
	neg.s32 	%r29, %r27;
	setp.eq.s32	%p7, %r27, 0;
	selp.u32	%r83, 1, 0, %p7;
	add.s32 	%r114, %r83, %r82;
	xor.b32  	%r31, %r17, -2147483648;
	mov.u32 	%r115, %r31;
	mov.u32 	%r116, %r29;

BB8_10:
	mov.u32 	%r33, %r115;
	neg.s32 	%r84, %r28;
	setp.eq.s32	%p8, %r17, 0;
	selp.b32	%r119, %r28, %r84, %p8;
	clz.b32 	%r118, %r114;
	setp.eq.s32	%p9, %r118, 0;
	shl.b32 	%r85, %r114, %r118;
	mov.u32 	%r86, 32;
	sub.s32 	%r87, %r86, %r118;
	shr.u32 	%r88, %r116, %r87;
	add.s32 	%r89, %r88, %r85;
	selp.b32	%r37, %r114, %r89, %p9;
	mov.u32 	%r90, -921707870;
	mul.hi.u32 	%r117, %r37, %r90;
	setp.lt.s32	%p10, %r117, 1;
	@%p10 bra 	BB8_12;

	mul.lo.s32 	%r91, %r37, -921707870;
	shr.u32 	%r92, %r91, 31;
	shl.b32 	%r93, %r117, 1;
	add.s32 	%r117, %r92, %r93;
	add.s32 	%r118, %r118, 1;

BB8_12:
	mov.u32 	%r94, 126;
	sub.s32 	%r95, %r94, %r118;
	shl.b32 	%r96, %r95, 23;
	add.s32 	%r97, %r117, 1;
	shr.u32 	%r98, %r97, 7;
	add.s32 	%r99, %r98, 1;
	shr.u32 	%r100, %r99, 1;
	add.s32 	%r101, %r100, %r96;
	or.b32  	%r102, %r101, %r33;
	mov.b32 	 %f44, %r102;

BB8_13:
	mul.rn.f32 	%f7, %f44, %f44;
	add.s32 	%r44, %r119, 1;
	and.b32  	%r45, %r44, 1;
	setp.eq.s32	%p11, %r45, 0;
	@%p11 bra 	BB8_15;

	mov.f32 	%f30, 0fBAB6061A;
	mov.f32 	%f31, 0f37CCF5CE;
	fma.rn.f32 	%f45, %f31, %f7, %f30;
	bra.uni 	BB8_16;

BB8_15:
	mov.f32 	%f32, 0f3C08839E;
	mov.f32 	%f33, 0fB94CA1F9;
	fma.rn.f32 	%f45, %f33, %f7, %f32;

BB8_16:
	@%p11 bra 	BB8_18;

	mov.f32 	%f34, 0f3D2AAAA5;
	fma.rn.f32 	%f35, %f45, %f7, %f34;
	mov.f32 	%f36, 0fBF000000;
	fma.rn.f32 	%f46, %f35, %f7, %f36;
	bra.uni 	BB8_19;

BB8_18:
	mov.f32 	%f37, 0fBE2AAAA3;
	fma.rn.f32 	%f38, %f45, %f7, %f37;
	mov.f32 	%f39, 0f00000000;
	fma.rn.f32 	%f46, %f38, %f7, %f39;

BB8_19:
	fma.rn.f32 	%f47, %f46, %f44, %f44;
	@%p11 bra 	BB8_21;

	mov.f32 	%f40, 0f3F800000;
	fma.rn.f32 	%f47, %f46, %f7, %f40;

BB8_21:
	and.b32  	%r103, %r44, 2;
	setp.eq.s32	%p14, %r103, 0;
	@%p14 bra 	BB8_23;

	mov.f32 	%f41, 0f00000000;
	mov.f32 	%f42, 0fBF800000;
	fma.rn.f32 	%f47, %f47, %f42, %f41;

BB8_23:
	cvta.to.global.u32 	%r104, %r46;
	add.s32 	%r106, %r104, %r54;
	st.global.f32 	[%r106], %f47;

BB8_24:
	ret;
}

	// .globl	math_coshf
.visible .entry math_coshf(
	.param .u32 math_coshf_param_0,
	.param .u32 math_coshf_param_1,
	.param .u32 math_coshf_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<19>;
	.reg .s32 	%r<13>;


	ld.param.u32 	%r4, [math_coshf_param_0];
	ld.param.u32 	%r2, [math_coshf_param_1];
	ld.param.u32 	%r3, [math_coshf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB9_2;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f3, [%r10];
	abs.f32 	%f4, %f3;
	mul.f32 	%f5, %f4, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f6, %f5;
	mov.f32 	%f7, 0fBF317200;
	fma.rn.f32 	%f8, %f6, %f7, %f4;
	mov.f32 	%f9, 0fB5BFBE8E;
	fma.rn.f32 	%f10, %f6, %f9, %f8;
	mul.f32 	%f2, %f10, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	add.f32 	%f11, %f6, 0fC0000000;
	ex2.approx.f32 	%f12, %f11;
	mul.f32 	%f13, %f1, %f12;
	mov.f32 	%f14, 0f3E000000;
	div.approx.f32 	%f15, %f14, %f13;
	mov.f32 	%f16, 0f40000000;
	fma.rn.f32 	%f17, %f16, %f13, %f15;
	setp.ltu.f32	%p2, %f4, 0f42B40000;
	selp.f32	%f18, %f17, 0f7F800000, %p2;
	cvta.to.global.u32 	%r11, %r2;
	add.s32 	%r12, %r11, %r9;
	st.global.f32 	[%r12], %f18;

BB9_2:
	ret;
}

	// .globl	math_cospif
.visible .entry math_cospif(
	.param .u32 math_cospif_param_0,
	.param .u32 math_cospif_param_1,
	.param .u32 math_cospif_param_2
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<43>;
	.reg .s32 	%r<18>;


	ld.param.u32 	%r6, [math_cospif_param_0];
	ld.param.u32 	%r4, [math_cospif_param_1];
	ld.param.u32 	%r5, [math_cospif_param_2];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	setp.ge.u32	%p1, %r1, %r6;
	@%p1 bra 	BB10_14;

	cvta.to.global.u32 	%r10, %r5;
	shl.b32 	%r11, %r1, 2;
	add.s32 	%r12, %r10, %r11;
	ld.global.f32 	%f39, [%r12];
	abs.f32 	%f17, %f39;
	setp.leu.f32	%p2, %f17, 0f4B800000;
	@%p2 bra 	BB10_3;

	mov.f32 	%f18, 0f00000000;
	mul.rn.f32 	%f39, %f39, %f18;

BB10_3:
	add.f32 	%f19, %f39, %f39;
	cvt.rni.f32.f32	%f20, %f19;
	cvt.rzi.s32.f32	%r13, %f20;
	neg.f32 	%f21, %f20;
	mov.f32 	%f22, 0f3F000000;
	fma.rn.f32 	%f23, %f21, %f22, %f39;
	mul.f32 	%f24, %f23, 0f34222169;
	mov.f32 	%f25, 0f40490FDA;
	fma.rn.f32 	%f4, %f23, %f25, %f24;
	add.s32 	%r2, %r13, 1;
	mul.rn.f32 	%f5, %f4, %f4;
	and.b32  	%r3, %r2, 1;
	setp.eq.s32	%p3, %r3, 0;
	@%p3 bra 	BB10_5;

	mov.f32 	%f26, 0fBAB6061A;
	mov.f32 	%f27, 0f37CCF5CE;
	fma.rn.f32 	%f40, %f27, %f5, %f26;
	bra.uni 	BB10_6;

BB10_5:
	mov.f32 	%f28, 0f3C08839E;
	mov.f32 	%f29, 0fB94CA1F9;
	fma.rn.f32 	%f40, %f29, %f5, %f28;

BB10_6:
	@%p3 bra 	BB10_8;

	mov.f32 	%f30, 0f3D2AAAA5;
	fma.rn.f32 	%f31, %f40, %f5, %f30;
	mov.f32 	%f32, 0fBF000000;
	fma.rn.f32 	%f41, %f31, %f5, %f32;
	bra.uni 	BB10_9;

BB10_8:
	mov.f32 	%f33, 0fBE2AAAA3;
	fma.rn.f32 	%f34, %f40, %f5, %f33;
	mov.f32 	%f35, 0f00000000;
	fma.rn.f32 	%f41, %f34, %f5, %f35;

BB10_9:
	fma.rn.f32 	%f42, %f41, %f4, %f4;
	@%p3 bra 	BB10_11;

	mov.f32 	%f36, 0f3F800000;
	fma.rn.f32 	%f42, %f41, %f5, %f36;

BB10_11:
	and.b32  	%r14, %r2, 2;
	setp.eq.s32	%p6, %r14, 0;
	@%p6 bra 	BB10_13;

	mov.f32 	%f37, 0f00000000;
	mov.f32 	%f38, 0fBF800000;
	fma.rn.f32 	%f42, %f42, %f38, %f37;

BB10_13:
	cvta.to.global.u32 	%r15, %r4;
	add.s32 	%r17, %r15, %r11;
	st.global.f32 	[%r17], %f42;

BB10_14:
	ret;
}

	// .globl	math_cyl_bessel_i0f
.visible .entry math_cyl_bessel_i0f(
	.param .u32 math_cyl_bessel_i0f_param_0,
	.param .u32 math_cyl_bessel_i0f_param_1,
	.param .u32 math_cyl_bessel_i0f_param_2
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<80>;
	.reg .s32 	%r<14>;


	ld.param.u32 	%r4, [math_cyl_bessel_i0f_param_0];
	ld.param.u32 	%r2, [math_cyl_bessel_i0f_param_1];
	ld.param.u32 	%r3, [math_cyl_bessel_i0f_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB11_5;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f5, [%r10];
	abs.f32 	%f1, %f5;
	setp.ge.f32	%p2, %f1, 0f41100000;
	setp.lt.f32	%p3, %f1, 0f7F800000;
	and.pred  	%p4, %p2, %p3;
	@%p4 bra 	BB11_3;
	bra.uni 	BB11_2;

BB11_3:
	// inline asm
	rcp.approx.ftz.f32 %f27,%f1;
	// inline asm
	mov.f32 	%f31, 0fBBB2CB0D;
	mov.f32 	%f32, 0f3EB28BA6;
	fma.rn.f32 	%f33, %f32, %f27, %f31;
	mov.f32 	%f34, 0f3D089707;
	fma.rn.f32 	%f35, %f33, %f27, %f34;
	mov.f32 	%f36, 0f3CE477E2;
	fma.rn.f32 	%f37, %f35, %f27, %f36;
	mov.f32 	%f38, 0f3D4C4525;
	fma.rn.f32 	%f39, %f37, %f27, %f38;
	mov.f32 	%f40, 0f3ECC4229;
	fma.rn.f32 	%f41, %f39, %f27, %f40;
	// inline asm
	rsqrt.approx.ftz.f32 %f29,%f1;
	// inline asm
	mul.f32 	%f42, %f41, %f29;
	mul.f32 	%f43, %f1, 0f3F000000;
	mul.f32 	%f44, %f43, 0f3FB8AA3B;
	cvt.rni.f32.f32	%f45, %f44;
	abs.f32 	%f46, %f43;
	setp.lt.f32	%p5, %f46, 0f3ED1EB85;
	selp.f32	%f47, 0f00000000, %f45, %p5;
	neg.f32 	%f48, %f47;
	mov.f32 	%f49, 0f3F317200;
	fma.rn.f32 	%f50, %f48, %f49, %f43;
	mov.f32 	%f51, 0f35BFBE8E;
	fma.rn.f32 	%f52, %f48, %f51, %f50;
	setp.eq.f32	%p6, %f47, 0f43000000;
	add.f32 	%f53, %f47, 0fBF800000;
	selp.f32	%f54, %f53, %f47, %p6;
	mov.f32 	%f55, 0f3C095663;
	mov.f32 	%f56, 0f3AB5EBE6;
	fma.rn.f32 	%f57, %f56, %f52, %f55;
	mov.f32 	%f58, 0f3D2AABE3;
	fma.rn.f32 	%f59, %f57, %f52, %f58;
	mov.f32 	%f60, 0f3E2AA9F6;
	fma.rn.f32 	%f61, %f59, %f52, %f60;
	mov.f32 	%f62, 0f3EFFFFFE;
	fma.rn.f32 	%f63, %f61, %f52, %f62;
	mul.f32 	%f64, %f52, %f63;
	fma.rn.f32 	%f65, %f64, %f52, %f52;
	ex2.approx.f32 	%f66, %f54;
	add.f32 	%f67, %f66, 0fBF800000;
	fma.rn.f32 	%f68, %f65, %f66, %f67;
	add.f32 	%f69, %f68, %f68;
	selp.f32	%f70, %f69, %f68, %p6;
	setp.gt.f32	%p7, %f54, 0f43000000;
	selp.f32	%f71, 0f7F800000, %f70, %p7;
	setp.lt.f32	%p8, %f54, 0fC1C80000;
	selp.f32	%f72, 0fBF800000, %f71, %p8;
	setp.eq.f32	%p9, %f43, 0f00000000;
	add.f32 	%f73, %f43, %f43;
	selp.f32	%f74, %f73, %f72, %p9;
	mul.rn.f32 	%f75, %f42, %f74;
	mov.f32 	%f76, 0f40000000;
	add.rn.f32 	%f77, %f74, %f76;
	mul.rn.f32 	%f78, %f75, %f77;
	add.rn.f32 	%f79, %f78, %f42;
	bra.uni 	BB11_4;

BB11_2:
	mul.f32 	%f6, %f1, %f1;
	mov.f32 	%f7, 0f2385AB76;
	mov.f32 	%f8, 0f20372901;
	fma.rn.f32 	%f9, %f8, %f6, %f7;
	mov.f32 	%f10, 0f28408812;
	fma.rn.f32 	%f11, %f9, %f6, %f10;
	mov.f32 	%f12, 0f2C244EDB;
	fma.rn.f32 	%f13, %f11, %f6, %f12;
	mov.f32 	%f14, 0f30020914;
	fma.rn.f32 	%f15, %f13, %f6, %f14;
	mov.f32 	%f16, 0f33918D5A;
	fma.rn.f32 	%f17, %f15, %f6, %f16;
	mov.f32 	%f18, 0f36E3919C;
	fma.rn.f32 	%f19, %f17, %f6, %f18;
	mov.f32 	%f20, 0f39E38DF6;
	fma.rn.f32 	%f21, %f19, %f6, %f20;
	mov.f32 	%f22, 0f3C800002;
	fma.rn.f32 	%f23, %f21, %f6, %f22;
	mov.f32 	%f24, 0f3E800000;
	fma.rn.f32 	%f25, %f23, %f6, %f24;
	mov.f32 	%f26, 0f3F800000;
	fma.rn.f32 	%f79, %f25, %f6, %f26;

BB11_4:
	cvta.to.global.u32 	%r11, %r2;
	add.s32 	%r13, %r11, %r9;
	st.global.f32 	[%r13], %f79;

BB11_5:
	ret;
}

	// .globl	math_cyl_bessel_i1f
.visible .entry math_cyl_bessel_i1f(
	.param .u32 math_cyl_bessel_i1f_param_0,
	.param .u32 math_cyl_bessel_i1f_param_1,
	.param .u32 math_cyl_bessel_i1f_param_2
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<80>;
	.reg .s32 	%r<18>;


	ld.param.u32 	%r4, [math_cyl_bessel_i1f_param_0];
	ld.param.u32 	%r2, [math_cyl_bessel_i1f_param_1];
	ld.param.u32 	%r3, [math_cyl_bessel_i1f_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB12_5;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	abs.f32 	%f2, %f1;
	setp.ge.f32	%p2, %f2, 0f41015C29;
	setp.lt.f32	%p3, %f2, 0f7F800000;
	and.pred  	%p4, %p2, %p3;
	@%p4 bra 	BB12_3;
	bra.uni 	BB12_2;

BB12_3:
	// inline asm
	rcp.approx.ftz.f32 %f26,%f2;
	// inline asm
	mov.f32 	%f30, 0f3CE93D2E;
	mov.f32 	%f31, 0fBF00BCD4;
	fma.rn.f32 	%f32, %f31, %f26, %f30;
	mov.f32 	%f33, 0fBD47A025;
	fma.rn.f32 	%f34, %f32, %f26, %f33;
	mov.f32 	%f35, 0fBD3E1EA9;
	fma.rn.f32 	%f36, %f34, %f26, %f35;
	mov.f32 	%f37, 0fBE19334B;
	fma.rn.f32 	%f38, %f36, %f26, %f37;
	mov.f32 	%f39, 0f3ECC422B;
	fma.rn.f32 	%f40, %f38, %f26, %f39;
	// inline asm
	rsqrt.approx.ftz.f32 %f28,%f2;
	// inline asm
	mul.f32 	%f41, %f40, %f28;
	mul.f32 	%f42, %f2, 0f3F000000;
	mul.f32 	%f43, %f42, 0f3FB8AA3B;
	cvt.rni.f32.f32	%f44, %f43;
	abs.f32 	%f45, %f42;
	setp.lt.f32	%p5, %f45, 0f3ED1EB85;
	selp.f32	%f46, 0f00000000, %f44, %p5;
	neg.f32 	%f47, %f46;
	mov.f32 	%f48, 0f3F317200;
	fma.rn.f32 	%f49, %f47, %f48, %f42;
	mov.f32 	%f50, 0f35BFBE8E;
	fma.rn.f32 	%f51, %f47, %f50, %f49;
	setp.eq.f32	%p6, %f46, 0f43000000;
	add.f32 	%f52, %f46, 0fBF800000;
	selp.f32	%f53, %f52, %f46, %p6;
	mov.f32 	%f54, 0f3C095663;
	mov.f32 	%f55, 0f3AB5EBE6;
	fma.rn.f32 	%f56, %f55, %f51, %f54;
	mov.f32 	%f57, 0f3D2AABE3;
	fma.rn.f32 	%f58, %f56, %f51, %f57;
	mov.f32 	%f59, 0f3E2AA9F6;
	fma.rn.f32 	%f60, %f58, %f51, %f59;
	mov.f32 	%f61, 0f3EFFFFFE;
	fma.rn.f32 	%f62, %f60, %f51, %f61;
	mul.f32 	%f63, %f51, %f62;
	fma.rn.f32 	%f64, %f63, %f51, %f51;
	ex2.approx.f32 	%f65, %f53;
	add.f32 	%f66, %f65, 0fBF800000;
	fma.rn.f32 	%f67, %f64, %f65, %f66;
	add.f32 	%f68, %f67, %f67;
	selp.f32	%f69, %f68, %f67, %p6;
	setp.gt.f32	%p7, %f53, 0f43000000;
	selp.f32	%f70, 0f7F800000, %f69, %p7;
	setp.lt.f32	%p8, %f53, 0fC1C80000;
	selp.f32	%f71, 0fBF800000, %f70, %p8;
	setp.eq.f32	%p9, %f42, 0f00000000;
	add.f32 	%f72, %f42, %f42;
	selp.f32	%f73, %f72, %f71, %p9;
	mul.rn.f32 	%f74, %f41, %f73;
	mov.f32 	%f75, 0f40000000;
	add.rn.f32 	%f76, %f73, %f75;
	mul.rn.f32 	%f77, %f74, %f76;
	add.rn.f32 	%f78, %f77, %f41;
	mov.b32 	 %r11, %f78;
	mov.b32 	 %r12, %f1;
	and.b32  	%r13, %r12, -2147483648;
	or.b32  	%r14, %r11, %r13;
	mov.b32 	 %f79, %r14;
	bra.uni 	BB12_4;

BB12_2:
	mul.f32 	%f6, %f1, %f1;
	mov.f32 	%f7, 0f25C54AC1;
	mov.f32 	%f8, 0f224D7BDD;
	fma.rn.f32 	%f9, %f8, %f6, %f7;
	mov.f32 	%f10, 0f2A370C80;
	fma.rn.f32 	%f11, %f9, %f6, %f10;
	mov.f32 	%f12, 0f2E11C2C5;
	fma.rn.f32 	%f13, %f11, %f6, %f12;
	mov.f32 	%f14, 0f31C296AE;
	fma.rn.f32 	%f15, %f13, %f6, %f14;
	mov.f32 	%f16, 0f3535FFFE;
	fma.rn.f32 	%f17, %f15, %f6, %f16;
	mov.f32 	%f18, 0f38638F95;
	fma.rn.f32 	%f19, %f17, %f6, %f18;
	mov.f32 	%f20, 0f3B2AAA97;
	fma.rn.f32 	%f21, %f19, %f6, %f20;
	mov.f32 	%f22, 0f3D800001;
	fma.rn.f32 	%f23, %f21, %f6, %f22;
	mul.f32 	%f24, %f6, %f23;
	mul.f32 	%f25, %f1, 0f3F000000;
	fma.rn.f32 	%f79, %f1, %f24, %f25;

BB12_4:
	cvta.to.global.u32 	%r15, %r2;
	add.s32 	%r17, %r15, %r9;
	st.global.f32 	[%r17], %f79;

BB12_5:
	ret;
}

	// .globl	math_erfcf
.visible .entry math_erfcf(
	.param .u32 math_erfcf_param_0,
	.param .u32 math_erfcf_param_1,
	.param .u32 math_erfcf_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<63>;
	.reg .s32 	%r<13>;


	ld.param.u32 	%r4, [math_erfcf_param_0];
	ld.param.u32 	%r2, [math_erfcf_param_1];
	ld.param.u32 	%r3, [math_erfcf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB13_2;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f7, [%r10];
	abs.f32 	%f8, %f7;
	add.f32 	%f2, %f8, 0f40800000;
	// inline asm
	rcp.approx.ftz.f32 %f1,%f2;
	// inline asm
	add.f32 	%f9, %f8, 0fC0800000;
	mul.rn.f32 	%f10, %f9, %f1;
	add.f32 	%f11, %f10, 0f3F800000;
	mov.f32 	%f12, 0fC0800000;
	fma.rn.f32 	%f13, %f12, %f11, %f8;
	neg.f32 	%f14, %f10;
	fma.rn.f32 	%f15, %f14, %f8, %f13;
	fma.rn.f32 	%f16, %f1, %f15, %f10;
	mov.f32 	%f17, 0f3BE6E05B;
	mov.f32 	%f18, 0f3A69A091;
	fma.rn.f32 	%f19, %f18, %f16, %f17;
	mov.f32 	%f20, 0fBC81FB4B;
	fma.rn.f32 	%f21, %f19, %f16, %f20;
	mov.f32 	%f22, 0f3D15373B;
	fma.rn.f32 	%f23, %f21, %f16, %f22;
	mov.f32 	%f24, 0fBD887C5A;
	fma.rn.f32 	%f25, %f23, %f16, %f24;
	mov.f32 	%f26, 0f3DC021D5;
	fma.rn.f32 	%f27, %f25, %f16, %f26;
	mov.f32 	%f28, 0fBDCED424;
	fma.rn.f32 	%f29, %f27, %f16, %f28;
	mov.f32 	%f30, 0f3D8B74DE;
	fma.rn.f32 	%f31, %f29, %f16, %f30;
	mov.f32 	%f32, 0f3C7BF170;
	fma.rn.f32 	%f33, %f31, %f16, %f32;
	mov.f32 	%f34, 0fBE0EF8D4;
	fma.rn.f32 	%f35, %f33, %f16, %f34;
	mov.f32 	%f36, 0f3F9DD2C9;
	fma.rn.f32 	%f37, %f35, %f16, %f36;
	mov.f32 	%f38, 0f3F800000;
	mov.f32 	%f39, 0f40000000;
	fma.rn.f32 	%f4, %f39, %f8, %f38;
	// inline asm
	rcp.approx.ftz.f32 %f3,%f4;
	// inline asm
	mul.rn.f32 	%f40, %f37, %f3;
	mul.f32 	%f41, %f40, 0fC0000000;
	fma.rn.f32 	%f42, %f8, %f41, %f37;
	sub.f32 	%f43, %f42, %f40;
	fma.rn.f32 	%f44, %f43, %f3, %f40;
	mul.f32 	%f45, %f8, %f8;
	neg.f32 	%f46, %f45;
	mul.f32 	%f47, %f45, 0fBFB8AA3B;
	cvt.rzi.f32.f32	%f48, %f47;
	mov.f32 	%f49, 0fBF317200;
	fma.rn.f32 	%f50, %f48, %f49, %f46;
	mov.f32 	%f51, 0fB5BFBE8E;
	fma.rn.f32 	%f52, %f48, %f51, %f50;
	mul.f32 	%f6, %f52, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f5,%f6;
	// inline asm
	add.f32 	%f53, %f48, 0f00000000;
	ex2.approx.f32 	%f54, %f53;
	mul.f32 	%f55, %f5, %f54;
	neg.f32 	%f56, %f8;
	fma.rn.f32 	%f57, %f56, %f8, %f45;
	fma.rn.f32 	%f58, %f55, %f57, %f55;
	mul.f32 	%f59, %f44, %f58;
	setp.gt.f32	%p2, %f8, 0f4120E148;
	selp.f32	%f60, 0f00000000, %f59, %p2;
	setp.lt.f32	%p3, %f7, 0f00000000;
	sub.f32 	%f61, %f39, %f60;
	selp.f32	%f62, %f61, %f60, %p3;
	cvta.to.global.u32 	%r11, %r2;
	add.s32 	%r12, %r11, %r9;
	st.global.f32 	[%r12], %f62;

BB13_2:
	ret;
}

	// .globl	math_erfcinvf
.visible .entry math_erfcinvf(
	.param .u32 math_erfcinvf_param_0,
	.param .u32 math_erfcinvf_param_1,
	.param .u32 math_erfcinvf_param_2
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<56>;
	.reg .s32 	%r<14>;


	ld.param.u32 	%r4, [math_erfcinvf_param_0];
	ld.param.u32 	%r2, [math_erfcinvf_param_1];
	ld.param.u32 	%r3, [math_erfcinvf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB14_5;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	neg.f32 	%f2, %f1;
	mov.f32 	%f7, 0f40000000;
	add.rn.f32 	%f3, %f7, %f2;
	setp.le.f32	%p2, %f1, 0f3FFF9097;
	setp.ge.f32	%p3, %f1, 0f3B5ED289;
	and.pred  	%p4, %p3, %p2;
	@%p4 bra 	BB14_3;
	bra.uni 	BB14_2;

BB14_3:
	mul.rn.f32 	%f34, %f3, %f1;
	// inline asm
	lg2.approx.ftz.f32 %f33,%f34;
	// inline asm
	neg.f32 	%f35, %f33;
	mov.f32 	%f36, 0f3221F645;
	mov.f32 	%f37, 0fAF8A6370;
	fma.rn.f32 	%f38, %f37, %f35, %f36;
	mov.f32 	%f39, 0fB4016FDA;
	fma.rn.f32 	%f40, %f38, %f35, %f39;
	mov.f32 	%f41, 0f3468F846;
	fma.rn.f32 	%f42, %f40, %f35, %f41;
	mov.f32 	%f43, 0f370742AA;
	fma.rn.f32 	%f44, %f42, %f35, %f43;
	mov.f32 	%f45, 0fB804DB4D;
	fma.rn.f32 	%f46, %f44, %f35, %f45;
	mov.f32 	%f47, 0fBA4AFEA1;
	fma.rn.f32 	%f48, %f46, %f35, %f47;
	mov.f32 	%f49, 0f3BB5C027;
	fma.rn.f32 	%f50, %f48, %f35, %f49;
	mov.f32 	%f51, 0f3E24AE0F;
	fma.rn.f32 	%f52, %f50, %f35, %f51;
	mov.f32 	%f53, 0f3F62DFC4;
	fma.rn.f32 	%f54, %f52, %f35, %f53;
	fma.rn.f32 	%f55, %f54, %f2, %f54;
	bra.uni 	BB14_4;

BB14_2:
	setp.gt.f32	%p5, %f1, 0f3F800000;
	selp.f32	%f12, %f3, %f1, %p5;
	lg2.approx.f32 	%f13, %f12;
	neg.f32 	%f9, %f13;
	// inline asm
	rsqrt.approx.ftz.f32 %f8,%f9;
	// inline asm
	mov.f32 	%f14, 0f42FEF829;
	mov.f32 	%f15, 0fC27C73F1;
	fma.rn.f32 	%f16, %f15, %f8, %f14;
	mov.f32 	%f17, 0fC2E4361C;
	fma.rn.f32 	%f18, %f16, %f8, %f17;
	mov.f32 	%f19, 0f42714D9B;
	fma.rn.f32 	%f20, %f18, %f8, %f19;
	mov.f32 	%f21, 0fC1AE51B3;
	fma.rn.f32 	%f22, %f20, %f8, %f21;
	mov.f32 	%f23, 0f40CEF504;
	fma.rn.f32 	%f24, %f22, %f8, %f23;
	mov.f32 	%f25, 0fBFEA9E05;
	fma.rn.f32 	%f26, %f24, %f8, %f25;
	mov.f32 	%f27, 0fBCF871F4;
	fma.rn.f32 	%f28, %f26, %f8, %f27;
	mov.f32 	%f29, 0f3F553775;
	fma.rn.f32 	%f30, %f28, %f8, %f29;
	// inline asm
	rcp.approx.ftz.f32 %f10,%f8;
	// inline asm
	mul.rn.f32 	%f31, %f30, %f10;
	neg.f32 	%f32, %f31;
	selp.f32	%f55, %f32, %f31, %p5;

BB14_4:
	cvta.to.global.u32 	%r11, %r2;
	add.s32 	%r13, %r11, %r9;
	st.global.f32 	[%r13], %f55;

BB14_5:
	ret;
}

	// .globl	math_erfcxf
.visible .entry math_erfcxf(
	.param .u32 math_erfcxf_param_0,
	.param .u32 math_erfcxf_param_1,
	.param .u32 math_erfcxf_param_2
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<81>;
	.reg .s32 	%r<14>;


	ld.param.u32 	%r4, [math_erfcxf_param_0];
	ld.param.u32 	%r2, [math_erfcxf_param_1];
	ld.param.u32 	%r3, [math_erfcxf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB15_7;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	abs.f32 	%f2, %f1;
	setp.lt.f32	%p2, %f2, 0f4120E148;
	@%p2 bra 	BB15_3;
	bra.uni 	BB15_2;

BB15_3:
	add.f32 	%f23, %f2, 0f40800000;
	// inline asm
	rcp.approx.ftz.f32 %f22,%f23;
	// inline asm
	add.f32 	%f26, %f2, 0fC0800000;
	mul.rn.f32 	%f27, %f26, %f22;
	add.f32 	%f28, %f27, 0f3F800000;
	mov.f32 	%f29, 0fC0800000;
	fma.rn.f32 	%f30, %f29, %f28, %f2;
	neg.f32 	%f31, %f27;
	fma.rn.f32 	%f32, %f31, %f2, %f30;
	fma.rn.f32 	%f33, %f22, %f32, %f27;
	mov.f32 	%f34, 0f3BE6E05B;
	mov.f32 	%f35, 0f3A69A091;
	fma.rn.f32 	%f36, %f35, %f33, %f34;
	mov.f32 	%f37, 0fBC81FB4B;
	fma.rn.f32 	%f38, %f36, %f33, %f37;
	mov.f32 	%f39, 0f3D15373B;
	fma.rn.f32 	%f40, %f38, %f33, %f39;
	mov.f32 	%f41, 0fBD887C5A;
	fma.rn.f32 	%f42, %f40, %f33, %f41;
	mov.f32 	%f43, 0f3DC021D5;
	fma.rn.f32 	%f44, %f42, %f33, %f43;
	mov.f32 	%f45, 0fBDCED424;
	fma.rn.f32 	%f46, %f44, %f33, %f45;
	mov.f32 	%f47, 0f3D8B74DE;
	fma.rn.f32 	%f48, %f46, %f33, %f47;
	mov.f32 	%f49, 0f3C7BF170;
	fma.rn.f32 	%f50, %f48, %f33, %f49;
	mov.f32 	%f51, 0fBE0EF8D4;
	fma.rn.f32 	%f52, %f50, %f33, %f51;
	mov.f32 	%f53, 0f3F9DD2C9;
	fma.rn.f32 	%f54, %f52, %f33, %f53;
	mov.f32 	%f55, 0f3F800000;
	mov.f32 	%f56, 0f40000000;
	fma.rn.f32 	%f25, %f56, %f2, %f55;
	// inline asm
	rcp.approx.ftz.f32 %f24,%f25;
	// inline asm
	mul.rn.f32 	%f57, %f54, %f24;
	mul.f32 	%f58, %f57, 0fC0000000;
	fma.rn.f32 	%f59, %f2, %f58, %f54;
	sub.f32 	%f60, %f59, %f57;
	fma.rn.f32 	%f80, %f60, %f24, %f57;
	bra.uni 	BB15_4;

BB15_2:
	mul.f32 	%f8, %f2, 0f3E800000;
	mov.f32 	%f9, 0f3E800000;
	div.approx.f32 	%f10, %f9, %f8;
	mul.f32 	%f11, %f10, %f10;
	mov.f32 	%f12, 0fBFF00000;
	mov.f32 	%f13, 0f40D20000;
	fma.rn.f32 	%f14, %f13, %f11, %f12;
	mov.f32 	%f15, 0f3F400000;
	fma.rn.f32 	%f16, %f14, %f11, %f15;
	mov.f32 	%f17, 0fBF000000;
	fma.rn.f32 	%f18, %f16, %f11, %f17;
	mov.f32 	%f19, 0f3F800000;
	fma.rn.f32 	%f20, %f18, %f11, %f19;
	mul.f32 	%f21, %f10, 0f3F106EBB;
	mul.f32 	%f80, %f21, %f20;

BB15_4:
	setp.geu.f32	%p3, %f1, 0f00000000;
	@%p3 bra 	BB15_6;

	mul.rz.f32 	%f63, %f2, %f2;
	neg.f32 	%f64, %f63;
	fma.rn.f32 	%f65, %f2, %f2, %f64;
	mul.f32 	%f66, %f63, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f67, %f66;
	mov.f32 	%f68, 0fBF317200;
	fma.rn.f32 	%f69, %f67, %f68, %f63;
	mov.f32 	%f70, 0fB5BFBE8E;
	fma.rn.f32 	%f71, %f67, %f70, %f69;
	mul.f32 	%f62, %f71, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f61,%f62;
	// inline asm
	add.f32 	%f72, %f67, 0f00000000;
	ex2.approx.f32 	%f73, %f72;
	mul.f32 	%f74, %f61, %f73;
	setp.lt.f32	%p4, %f63, 0fC2D20000;
	selp.f32	%f75, 0f00000000, %f74, %p4;
	setp.gt.f32	%p5, %f63, 0f42D20000;
	selp.f32	%f76, 0f7F800000, %f75, %p5;
	add.f32 	%f77, %f76, %f76;
	fma.rn.f32 	%f78, %f77, %f65, %f77;
	sub.f32 	%f79, %f78, %f80;
	setp.eq.f32	%p6, %f77, 0f7F800000;
	selp.f32	%f80, %f77, %f79, %p6;

BB15_6:
	cvta.to.global.u32 	%r11, %r2;
	add.s32 	%r13, %r11, %r9;
	st.global.f32 	[%r13], %f80;

BB15_7:
	ret;
}

	// .globl	math_erff
.visible .entry math_erff(
	.param .u32 math_erff_param_0,
	.param .u32 math_erff_param_1,
	.param .u32 math_erff_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<37>;
	.reg .s32 	%r<19>;


	ld.param.u32 	%r4, [math_erff_param_0];
	ld.param.u32 	%r2, [math_erff_param_1];
	ld.param.u32 	%r3, [math_erff_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB16_5;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p2, %f2, 0f3F800000;
	@%p2 bra 	BB16_3;
	bra.uni 	BB16_2;

BB16_3:
	mul.f32 	%f24, %f1, %f1;
	mov.f32 	%f25, 0f3BA0C9F8;
	mov.f32 	%f26, 0fBA1268FB;
	fma.rn.f32 	%f27, %f26, %f24, %f25;
	mov.f32 	%f28, 0fBCDABFD4;
	fma.rn.f32 	%f29, %f27, %f24, %f28;
	mov.f32 	%f30, 0f3DE70331;
	fma.rn.f32 	%f31, %f29, %f24, %f30;
	mov.f32 	%f32, 0fBEC09330;
	fma.rn.f32 	%f33, %f31, %f24, %f32;
	mov.f32 	%f34, 0f3F906EBA;
	fma.rn.f32 	%f35, %f33, %f24, %f34;
	mul.f32 	%f36, %f1, %f35;
	bra.uni 	BB16_4;

BB16_2:
	mov.f32 	%f8, 0f3A03BB71;
	mov.f32 	%f9, 0fB7B730FB;
	fma.rn.f32 	%f10, %f9, %f2, %f8;
	mov.f32 	%f11, 0fBBACA3B3;
	fma.rn.f32 	%f12, %f10, %f2, %f11;
	mov.f32 	%f13, 0f3D0A7445;
	fma.rn.f32 	%f14, %f12, %f2, %f13;
	mov.f32 	%f15, 0fBE1B3B75;
	fma.rn.f32 	%f16, %f14, %f2, %f15;
	mov.f32 	%f17, 0fBF6B385A;
	fma.rn.f32 	%f18, %f16, %f2, %f17;
	mov.f32 	%f19, 0fBFD0316E;
	fma.rn.f32 	%f20, %f18, %f2, %f19;
	mov.f32 	%f21, 0fBA031CCE;
	fma.rn.f32 	%f7, %f20, %f2, %f21;
	// inline asm
	ex2.approx.ftz.f32 %f6,%f7;
	// inline asm
	mov.f32 	%f22, 0f3F800000;
	sub.f32 	%f23, %f22, %f6;
	mov.b32 	 %r11, %f23;
	setp.ltu.f32	%p3, %f2, 0f407AD445;
	selp.b32	%r12, %r11, 1065353216, %p3;
	mov.b32 	 %r13, %f1;
	and.b32  	%r14, %r13, -2147483648;
	or.b32  	%r15, %r12, %r14;
	mov.b32 	 %f36, %r15;

BB16_4:
	cvta.to.global.u32 	%r16, %r2;
	add.s32 	%r18, %r16, %r9;
	st.global.f32 	[%r18], %f36;

BB16_5:
	ret;
}

	// .globl	math_erfinvf
.visible .entry math_erfinvf(
	.param .u32 math_erfinvf_param_0,
	.param .u32 math_erfinvf_param_1,
	.param .u32 math_erfinvf_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<45>;
	.reg .s32 	%r<18>;


	ld.param.u32 	%r4, [math_erfinvf_param_0];
	ld.param.u32 	%r2, [math_erfinvf_param_1];
	ld.param.u32 	%r3, [math_erfinvf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB17_5;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	neg.f32 	%f8, %f1;
	mov.f32 	%f9, 0f3F800000;
	fma.rn.f32 	%f7, %f1, %f8, %f9;
	// inline asm
	lg2.approx.ftz.f32 %f6,%f7;
	// inline asm
	neg.f32 	%f2, %f6;
	setp.lt.f32	%p2, %f6, 0fC1033333;
	@%p2 bra 	BB17_3;
	bra.uni 	BB17_2;

BB17_3:
	// inline asm
	rsqrt.approx.ftz.f32 %f29,%f2;
	// inline asm
	mov.f32 	%f31, 0fBF29BAA5;
	mov.f32 	%f32, 0fBF1704A1;
	fma.rn.f32 	%f33, %f32, %f29, %f31;
	mov.f32 	%f34, 0f3FCC6ADC;
	fma.rn.f32 	%f35, %f33, %f29, %f34;
	mov.f32 	%f36, 0fBF2CDAED;
	fma.rn.f32 	%f37, %f35, %f29, %f36;
	mov.f32 	%f38, 0fBDC30537;
	fma.rn.f32 	%f39, %f37, %f29, %f38;
	mov.f32 	%f40, 0f3F55D9B9;
	fma.rn.f32 	%f41, %f39, %f29, %f40;
	rcp.rn.f32 	%f42, %f29;
	mul.f32 	%f43, %f41, %f42;
	mov.b32 	 %r11, %f43;
	mov.b32 	 %r12, %f1;
	and.b32  	%r13, %r12, -2147483648;
	or.b32  	%r14, %r11, %r13;
	mov.b32 	 %f44, %r14;
	bra.uni 	BB17_4;

BB17_2:
	mov.f32 	%f10, 0f3221F645;
	mov.f32 	%f11, 0fAF8A6370;
	fma.rn.f32 	%f12, %f11, %f2, %f10;
	mov.f32 	%f13, 0fB4016FDA;
	fma.rn.f32 	%f14, %f12, %f2, %f13;
	mov.f32 	%f15, 0f3468F846;
	fma.rn.f32 	%f16, %f14, %f2, %f15;
	mov.f32 	%f17, 0f370742AA;
	fma.rn.f32 	%f18, %f16, %f2, %f17;
	mov.f32 	%f19, 0fB804DB4D;
	fma.rn.f32 	%f20, %f18, %f2, %f19;
	mov.f32 	%f21, 0fBA4AFEA1;
	fma.rn.f32 	%f22, %f20, %f2, %f21;
	mov.f32 	%f23, 0f3BB5C027;
	fma.rn.f32 	%f24, %f22, %f2, %f23;
	mov.f32 	%f25, 0f3E24AE0F;
	fma.rn.f32 	%f26, %f24, %f2, %f25;
	mov.f32 	%f27, 0f3F62DFC4;
	fma.rn.f32 	%f28, %f26, %f2, %f27;
	mul.f32 	%f44, %f1, %f28;

BB17_4:
	cvta.to.global.u32 	%r15, %r2;
	add.s32 	%r17, %r15, %r9;
	st.global.f32 	[%r17], %f44;

BB17_5:
	ret;
}

	// .globl	math_exp10f
.visible .entry math_exp10f(
	.param .u32 math_exp10f_param_0,
	.param .u32 math_exp10f_param_1,
	.param .u32 math_exp10f_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<14>;
	.reg .s32 	%r<13>;


	ld.param.u32 	%r4, [math_exp10f_param_0];
	ld.param.u32 	%r2, [math_exp10f_param_1];
	ld.param.u32 	%r3, [math_exp10f_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB18_2;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f3, [%r10];
	mul.f32 	%f4, %f3, 0f40549A78;
	cvt.rzi.f32.f32	%f5, %f4;
	mov.f32 	%f6, 0fBE9A2080;
	fma.rn.f32 	%f7, %f5, %f6, %f3;
	mov.f32 	%f8, 0fB55427DE;
	fma.rn.f32 	%f9, %f5, %f8, %f7;
	mul.f32 	%f2, %f9, 0f40549A78;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	ex2.approx.f32 	%f10, %f5;
	mul.f32 	%f11, %f1, %f10;
	setp.lt.f32	%p2, %f3, 0fC2380000;
	selp.f32	%f12, 0f00000000, %f11, %p2;
	setp.gt.f32	%p3, %f3, 0f42380000;
	selp.f32	%f13, 0f7F800000, %f12, %p3;
	cvta.to.global.u32 	%r11, %r2;
	add.s32 	%r12, %r11, %r9;
	st.global.f32 	[%r12], %f13;

BB18_2:
	ret;
}

	// .globl	math_exp2f
.visible .entry math_exp2f(
	.param .u32 math_exp2f_param_0,
	.param .u32 math_exp2f_param_1,
	.param .u32 math_exp2f_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .s32 	%r<13>;


	ld.param.u32 	%r4, [math_exp2f_param_0];
	ld.param.u32 	%r2, [math_exp2f_param_1];
	ld.param.u32 	%r3, [math_exp2f_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB19_2;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	ex2.approx.f32 	%f2, %f1;
	cvta.to.global.u32 	%r11, %r2;
	add.s32 	%r12, %r11, %r9;
	st.global.f32 	[%r12], %f2;

BB19_2:
	ret;
}

	// .globl	math_expf
.visible .entry math_expf(
	.param .u32 math_expf_param_0,
	.param .u32 math_expf_param_1,
	.param .u32 math_expf_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<15>;
	.reg .s32 	%r<13>;


	ld.param.u32 	%r4, [math_expf_param_0];
	ld.param.u32 	%r2, [math_expf_param_1];
	ld.param.u32 	%r3, [math_expf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB20_2;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f3, [%r10];
	mul.f32 	%f4, %f3, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f5, %f4;
	mov.f32 	%f6, 0fBF317200;
	fma.rn.f32 	%f7, %f5, %f6, %f3;
	mov.f32 	%f8, 0fB5BFBE8E;
	fma.rn.f32 	%f9, %f5, %f8, %f7;
	mul.f32 	%f2, %f9, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	add.f32 	%f10, %f5, 0f00000000;
	ex2.approx.f32 	%f11, %f10;
	mul.f32 	%f12, %f1, %f11;
	setp.lt.f32	%p2, %f3, 0fC2D20000;
	selp.f32	%f13, 0f00000000, %f12, %p2;
	setp.gt.f32	%p3, %f3, 0f42D20000;
	selp.f32	%f14, 0f7F800000, %f13, %p3;
	cvta.to.global.u32 	%r11, %r2;
	add.s32 	%r12, %r11, %r9;
	st.global.f32 	[%r12], %f14;

BB20_2:
	ret;
}

	// .globl	math_expm1f
.visible .entry math_expm1f(
	.param .u32 math_expm1f_param_0,
	.param .u32 math_expm1f_param_1,
	.param .u32 math_expm1f_param_2
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<33>;
	.reg .s32 	%r<13>;


	ld.param.u32 	%r4, [math_expm1f_param_0];
	ld.param.u32 	%r2, [math_expm1f_param_1];
	ld.param.u32 	%r3, [math_expm1f_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB21_2;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	mul.f32 	%f2, %f1, 0f3FB8AA3B;
	cvt.rni.f32.f32	%f3, %f2;
	abs.f32 	%f4, %f1;
	setp.lt.f32	%p2, %f4, 0f3ED1EB85;
	selp.f32	%f5, 0f00000000, %f3, %p2;
	neg.f32 	%f6, %f5;
	mov.f32 	%f7, 0f3F317200;
	fma.rn.f32 	%f8, %f6, %f7, %f1;
	mov.f32 	%f9, 0f35BFBE8E;
	fma.rn.f32 	%f10, %f6, %f9, %f8;
	setp.eq.f32	%p3, %f5, 0f43000000;
	add.f32 	%f11, %f5, 0fBF800000;
	selp.f32	%f12, %f11, %f5, %p3;
	mov.f32 	%f13, 0f3C095663;
	mov.f32 	%f14, 0f3AB5EBE6;
	fma.rn.f32 	%f15, %f14, %f10, %f13;
	mov.f32 	%f16, 0f3D2AABE3;
	fma.rn.f32 	%f17, %f15, %f10, %f16;
	mov.f32 	%f18, 0f3E2AA9F6;
	fma.rn.f32 	%f19, %f17, %f10, %f18;
	mov.f32 	%f20, 0f3EFFFFFE;
	fma.rn.f32 	%f21, %f19, %f10, %f20;
	mul.f32 	%f22, %f10, %f21;
	fma.rn.f32 	%f23, %f22, %f10, %f10;
	ex2.approx.f32 	%f24, %f12;
	add.f32 	%f25, %f24, 0fBF800000;
	fma.rn.f32 	%f26, %f23, %f24, %f25;
	add.f32 	%f27, %f26, %f26;
	selp.f32	%f28, %f27, %f26, %p3;
	setp.gt.f32	%p4, %f12, 0f43000000;
	selp.f32	%f29, 0f7F800000, %f28, %p4;
	setp.lt.f32	%p5, %f12, 0fC1C80000;
	selp.f32	%f30, 0fBF800000, %f29, %p5;
	setp.eq.f32	%p6, %f1, 0f00000000;
	add.f32 	%f31, %f1, %f1;
	selp.f32	%f32, %f31, %f30, %p6;
	cvta.to.global.u32 	%r11, %r2;
	add.s32 	%r12, %r11, %r9;
	st.global.f32 	[%r12], %f32;

BB21_2:
	ret;
}

	// .globl	math_fabsf
.visible .entry math_fabsf(
	.param .u32 math_fabsf_param_0,
	.param .u32 math_fabsf_param_1,
	.param .u32 math_fabsf_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .s32 	%r<13>;


	ld.param.u32 	%r4, [math_fabsf_param_0];
	ld.param.u32 	%r2, [math_fabsf_param_1];
	ld.param.u32 	%r3, [math_fabsf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB22_2;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	abs.f32 	%f2, %f1;
	cvta.to.global.u32 	%r11, %r2;
	add.s32 	%r12, %r11, %r9;
	st.global.f32 	[%r12], %f2;

BB22_2:
	ret;
}

	// .globl	math_floorf
.visible .entry math_floorf(
	.param .u32 math_floorf_param_0,
	.param .u32 math_floorf_param_1,
	.param .u32 math_floorf_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .s32 	%r<13>;


	ld.param.u32 	%r4, [math_floorf_param_0];
	ld.param.u32 	%r2, [math_floorf_param_1];
	ld.param.u32 	%r3, [math_floorf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB23_2;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	cvt.rmi.f32.f32	%f2, %f1;
	cvta.to.global.u32 	%r11, %r2;
	add.s32 	%r12, %r11, %r9;
	st.global.f32 	[%r12], %f2;

BB23_2:
	ret;
}

	// .globl	math_j0f
.visible .entry math_j0f(
	.param .u32 math_j0f_param_0,
	.param .u32 math_j0f_param_1,
	.param .u32 math_j0f_param_2
)
{
	.local .align 4 .b8 	__local_depot24[28];
	.reg .b32 	%SP;
	.reg .b32 	%SPL;
	.reg .pred 	%p<25>;
	.reg .f32 	%f<129>;
	.reg .s32 	%r<222>;


	mov.u32 	%r221, __local_depot24;
	cvta.local.u32 	%SP, %r221;
	ld.param.u32 	%r87, [math_j0f_param_0];
	ld.param.u32 	%r85, [math_j0f_param_1];
	ld.param.u32 	%r86, [math_j0f_param_2];
	add.u32 	%r88, %SP, 0;
	cvta.to.local.u32 	%r1, %r88;
	mov.u32 	%r89, %ntid.x;
	mov.u32 	%r90, %ctaid.x;
	mov.u32 	%r91, %tid.x;
	mad.lo.s32 	%r2, %r89, %r90, %r91;
	setp.ge.u32	%p1, %r2, %r87;
	@%p1 bra 	BB24_38;

	cvta.to.global.u32 	%r92, %r86;
	shl.b32 	%r93, %r2, 2;
	add.s32 	%r94, %r92, %r93;
	ld.global.f32 	%f28, [%r94];
	abs.f32 	%f1, %f28;
	setp.gtu.f32	%p2, %f1, 0f41000000;
	@%p2 bra 	BB24_3;
	bra.uni 	BB24_2;

BB24_3:
	abs.f32 	%f65, %f1;
	mov.f32 	%f128, 0f00000000;
	setp.eq.f32	%p3, %f65, 0f7F800000;
	@%p3 bra 	BB24_37;

	// inline asm
	rcp.approx.ftz.f32 %f66,%f1;
	// inline asm
	mul.f32 	%f68, %f66, %f66;
	mov.f32 	%f69, 0fBF03B7C2;
	mov.f32 	%f70, 0f4056FE93;
	fma.rn.f32 	%f71, %f70, %f68, %f69;
	mov.f32 	%f72, 0f3DD3B3F3;
	fma.rn.f32 	%f73, %f71, %f68, %f72;
	mov.f32 	%f74, 0fBD7FFFB6;
	fma.rn.f32 	%f75, %f73, %f68, %f74;
	mov.f32 	%f76, 0f3F800000;
	fma.rn.f32 	%f77, %f75, %f68, %f76;
	mov.f32 	%f78, 0fBE52412D;
	mov.f32 	%f79, 0f3F91E009;
	fma.rn.f32 	%f80, %f79, %f68, %f78;
	mov.f32 	%f81, 0f3D854ED1;
	fma.rn.f32 	%f82, %f80, %f68, %f81;
	mov.f32 	%f83, 0fBDFFFFFF;
	fma.rn.f32 	%f84, %f82, %f68, %f83;
	fma.rn.f32 	%f3, %f84, %f66, %f1;
	rsqrt.approx.f32 	%f85, %f1;
	mul.f32 	%f86, %f85, 0f3F4C422A;
	mul.f32 	%f4, %f77, %f86;
	mul.f32 	%f87, %f3, 0f3F22F983;
	cvt.rni.s32.f32	%r206, %f87;
	cvt.rn.f32.s32	%f88, %r206;
	neg.f32 	%f89, %f88;
	mov.f32 	%f90, 0f3FC90FDA;
	fma.rn.f32 	%f91, %f89, %f90, %f3;
	mov.f32 	%f92, 0f33A22168;
	fma.rn.f32 	%f93, %f89, %f92, %f91;
	mov.f32 	%f94, 0f27C234C5;
	fma.rn.f32 	%f122, %f89, %f94, %f93;
	abs.f32 	%f95, %f3;
	setp.leu.f32	%p4, %f95, 0f47CE4780;
	@%p4 bra 	BB24_14;

	mov.b32 	 %r4, %f3;
	bfe.u32 	%r98, %r4, 23, 8;
	add.s32 	%r99, %r98, -128;
	shl.b32 	%r100, %r4, 8;
	or.b32  	%r5, %r100, -2147483648;
	shr.u32 	%r6, %r99, 5;
	mov.u32 	%r198, 0;
	mov.u32 	%r197, 6;
	mov.u32 	%r196, __cudart_i2opi_f;
	mov.u32 	%r211, %r1;

BB24_6:
	.pragma "nounroll";
	mov.u32 	%r9, %r211;
	ld.const.u32 	%r103, [%r196];
	// inline asm
	{
	mad.lo.cc.u32   %r101, %r103, %r5, %r198;
	madc.hi.u32     %r102, %r103, %r5,  0;
	}
	// inline asm
	mov.u32 	%r198, %r102;
	st.local.u32 	[%r9], %r101;
	add.s32 	%r12, %r9, 4;
	add.s32 	%r196, %r196, 4;
	add.s32 	%r197, %r197, -1;
	setp.ne.s32	%p5, %r197, 0;
	mov.u32 	%r211, %r12;
	@%p5 bra 	BB24_6;

	and.b32  	%r15, %r4, -2147483648;
	mov.u32 	%r106, 4;
	sub.s32 	%r107, %r106, %r6;
	shl.b32 	%r108, %r107, 2;
	add.s32 	%r109, %r108, %r1;
	st.local.u32 	[%r1+24], %r102;
	bfe.u32 	%r16, %r4, 23, 5;
	ld.local.u32 	%r199, [%r109+8];
	ld.local.u32 	%r200, [%r109+4];
	setp.eq.s32	%p6, %r16, 0;
	@%p6 bra 	BB24_9;

	mov.u32 	%r110, 32;
	sub.s32 	%r111, %r110, %r16;
	shr.u32 	%r112, %r200, %r111;
	shl.b32 	%r113, %r199, %r16;
	add.s32 	%r199, %r112, %r113;
	add.s32 	%r194, %r109, 8;
	ld.local.u32 	%r114, [%r194+-8];
	shr.u32 	%r115, %r114, %r111;
	shl.b32 	%r116, %r200, %r16;
	add.s32 	%r200, %r115, %r116;

BB24_9:
	shr.u32 	%r117, %r200, 30;
	shl.b32 	%r118, %r199, 2;
	add.s32 	%r201, %r117, %r118;
	shl.b32 	%r25, %r200, 2;
	shr.u32 	%r119, %r201, 31;
	shr.u32 	%r120, %r199, 30;
	add.s32 	%r26, %r119, %r120;
	setp.eq.s32	%p7, %r119, 0;
	mov.u32 	%r202, %r15;
	mov.u32 	%r203, %r25;
	@%p7 bra 	BB24_11;

	not.b32 	%r121, %r201;
	neg.s32 	%r27, %r25;
	setp.eq.s32	%p8, %r25, 0;
	selp.u32	%r122, 1, 0, %p8;
	add.s32 	%r201, %r122, %r121;
	xor.b32  	%r29, %r15, -2147483648;
	mov.u32 	%r202, %r29;
	mov.u32 	%r203, %r27;

BB24_11:
	mov.u32 	%r31, %r202;
	neg.s32 	%r123, %r26;
	setp.eq.s32	%p9, %r15, 0;
	selp.b32	%r206, %r26, %r123, %p9;
	clz.b32 	%r205, %r201;
	setp.eq.s32	%p10, %r205, 0;
	shl.b32 	%r124, %r201, %r205;
	mov.u32 	%r125, 32;
	sub.s32 	%r126, %r125, %r205;
	shr.u32 	%r127, %r203, %r126;
	add.s32 	%r128, %r127, %r124;
	selp.b32	%r35, %r201, %r128, %p10;
	mov.u32 	%r129, -921707870;
	mul.hi.u32 	%r204, %r35, %r129;
	setp.lt.s32	%p11, %r204, 1;
	@%p11 bra 	BB24_13;

	mul.lo.s32 	%r130, %r35, -921707870;
	shr.u32 	%r131, %r130, 31;
	shl.b32 	%r132, %r204, 1;
	add.s32 	%r204, %r131, %r132;
	add.s32 	%r205, %r205, 1;

BB24_13:
	mov.u32 	%r133, 126;
	sub.s32 	%r134, %r133, %r205;
	shl.b32 	%r135, %r134, 23;
	add.s32 	%r136, %r204, 1;
	shr.u32 	%r137, %r136, 7;
	add.s32 	%r138, %r137, 1;
	shr.u32 	%r139, %r138, 1;
	add.s32 	%r140, %r139, %r135;
	or.b32  	%r141, %r140, %r31;
	mov.b32 	 %f122, %r141;

BB24_14:
	and.b32  	%r142, %r206, 3;
	cvt.rn.f32.s32	%f96, %r142;
	add.f32 	%f97, %f122, 0fBF490FDB;
	fma.rn.f32 	%f123, %f96, 0f3FC90FDB, %f97;
	abs.f32 	%f98, %f123;
	setp.neu.f32	%p12, %f98, 0f7F800000;
	@%p12 bra 	BB24_16;

	mov.f32 	%f99, 0f00000000;
	mul.rn.f32 	%f123, %f123, %f99;

BB24_16:
	mul.f32 	%f100, %f123, 0f3F22F983;
	cvt.rni.s32.f32	%r220, %f100;
	cvt.rn.f32.s32	%f101, %r220;
	neg.f32 	%f102, %f101;
	fma.rn.f32 	%f104, %f102, %f90, %f123;
	fma.rn.f32 	%f106, %f102, %f92, %f104;
	fma.rn.f32 	%f124, %f102, %f94, %f106;
	abs.f32 	%f108, %f123;
	setp.leu.f32	%p13, %f108, 0f47CE4780;
	@%p13 bra 	BB24_26;

	mov.b32 	 %r44, %f123;
	shr.u32 	%r45, %r44, 23;
	bfe.u32 	%r146, %r44, 23, 8;
	add.s32 	%r147, %r146, -128;
	shl.b32 	%r148, %r44, 8;
	or.b32  	%r46, %r148, -2147483648;
	shr.u32 	%r47, %r147, 5;
	mov.u32 	%r212, 0;
	mov.u32 	%r208, 6;
	mov.u32 	%r207, __cudart_i2opi_f;
	mov.u32 	%r210, %r1;

BB24_18:
	.pragma "nounroll";
	ld.const.u32 	%r151, [%r207];
	// inline asm
	{
	mad.lo.cc.u32   %r149, %r151, %r46, %r212;
	madc.hi.u32     %r150, %r151, %r46,  0;
	}
	// inline asm
	mov.u32 	%r212, %r150;
	st.local.u32 	[%r210], %r149;
	add.s32 	%r210, %r210, 4;
	add.s32 	%r207, %r207, 4;
	add.s32 	%r208, %r208, -1;
	setp.ne.s32	%p14, %r208, 0;
	@%p14 bra 	BB24_18;

	and.b32  	%r56, %r44, -2147483648;
	mov.u32 	%r154, 4;
	sub.s32 	%r155, %r154, %r47;
	shl.b32 	%r156, %r155, 2;
	add.s32 	%r157, %r156, %r1;
	st.local.u32 	[%r1+24], %r150;
	ld.local.u32 	%r213, [%r157+8];
	ld.local.u32 	%r214, [%r157+4];
	and.b32  	%r60, %r45, 31;
	setp.eq.s32	%p15, %r60, 0;
	@%p15 bra 	BB24_21;

	mov.u32 	%r158, 32;
	sub.s32 	%r159, %r158, %r60;
	shr.u32 	%r160, %r214, %r159;
	shl.b32 	%r161, %r213, %r60;
	add.s32 	%r213, %r160, %r161;
	add.s32 	%r195, %r157, 8;
	ld.local.u32 	%r162, [%r195+-8];
	shr.u32 	%r163, %r162, %r159;
	shl.b32 	%r164, %r214, %r60;
	add.s32 	%r214, %r163, %r164;

BB24_21:
	shr.u32 	%r165, %r214, 30;
	shl.b32 	%r166, %r213, 2;
	add.s32 	%r215, %r165, %r166;
	shl.b32 	%r66, %r214, 2;
	shr.u32 	%r167, %r215, 31;
	shr.u32 	%r168, %r213, 30;
	add.s32 	%r67, %r167, %r168;
	setp.eq.s32	%p16, %r167, 0;
	mov.u32 	%r216, %r56;
	mov.u32 	%r217, %r66;
	@%p16 bra 	BB24_23;

	not.b32 	%r169, %r215;
	neg.s32 	%r68, %r66;
	setp.eq.s32	%p17, %r66, 0;
	selp.u32	%r170, 1, 0, %p17;
	add.s32 	%r215, %r170, %r169;
	xor.b32  	%r70, %r56, -2147483648;
	mov.u32 	%r216, %r70;
	mov.u32 	%r217, %r68;

BB24_23:
	mov.u32 	%r72, %r216;
	neg.s32 	%r171, %r67;
	setp.eq.s32	%p18, %r56, 0;
	selp.b32	%r220, %r67, %r171, %p18;
	clz.b32 	%r219, %r215;
	setp.eq.s32	%p19, %r219, 0;
	shl.b32 	%r172, %r215, %r219;
	mov.u32 	%r173, 32;
	sub.s32 	%r174, %r173, %r219;
	shr.u32 	%r175, %r217, %r174;
	add.s32 	%r176, %r175, %r172;
	selp.b32	%r76, %r215, %r176, %p19;
	mov.u32 	%r177, -921707870;
	mul.hi.u32 	%r218, %r76, %r177;
	setp.lt.s32	%p20, %r218, 1;
	@%p20 bra 	BB24_25;

	mul.lo.s32 	%r178, %r76, -921707870;
	shr.u32 	%r179, %r178, 31;
	shl.b32 	%r180, %r218, 1;
	add.s32 	%r218, %r179, %r180;
	add.s32 	%r219, %r219, 1;

BB24_25:
	mov.u32 	%r181, 126;
	sub.s32 	%r182, %r181, %r219;
	shl.b32 	%r183, %r182, 23;
	add.s32 	%r184, %r218, 1;
	shr.u32 	%r185, %r184, 7;
	add.s32 	%r186, %r185, 1;
	shr.u32 	%r187, %r186, 1;
	add.s32 	%r188, %r187, %r183;
	or.b32  	%r189, %r188, %r72;
	mov.b32 	 %f124, %r189;

BB24_26:
	mul.rn.f32 	%f14, %f124, %f124;
	add.s32 	%r83, %r220, 1;
	and.b32  	%r84, %r83, 1;
	setp.eq.s32	%p21, %r84, 0;
	@%p21 bra 	BB24_28;

	mov.f32 	%f109, 0fBAB6061A;
	mov.f32 	%f110, 0f37CCF5CE;
	fma.rn.f32 	%f125, %f110, %f14, %f109;
	bra.uni 	BB24_29;

BB24_2:
	add.f32 	%f29, %f1, 0fC019E8A9;
	add.f32 	%f30, %f29, 0fB3E971B3;
	mov.f32 	%f31, 0fA9ACA9B3;
	mov.f32 	%f32, 0fA6B3B8E7;
	fma.rn.f32 	%f33, %f32, %f30, %f31;
	mov.f32 	%f34, 0f2C3F0E18;
	fma.rn.f32 	%f35, %f33, %f30, %f34;
	mov.f32 	%f36, 0fACD41781;
	fma.rn.f32 	%f37, %f35, %f30, %f36;
	mov.f32 	%f38, 0fAFE90F38;
	fma.rn.f32 	%f39, %f37, %f30, %f38;
	mov.f32 	%f40, 0f3020305B;
	fma.rn.f32 	%f41, %f39, %f30, %f40;
	mov.f32 	%f42, 0f33797143;
	fma.rn.f32 	%f43, %f41, %f30, %f42;
	mov.f32 	%f44, 0f30F76F85;
	fma.rn.f32 	%f45, %f43, %f30, %f44;
	mov.f32 	%f46, 0fB6B6DFC6;
	fma.rn.f32 	%f47, %f45, %f30, %f46;
	mov.f32 	%f48, 0fB6F665C9;
	fma.rn.f32 	%f49, %f47, %f30, %f48;
	mov.f32 	%f50, 0f399E2DEB;
	fma.rn.f32 	%f51, %f49, %f30, %f50;
	mov.f32 	%f52, 0f3A4AE334;
	fma.rn.f32 	%f53, %f51, %f30, %f52;
	mov.f32 	%f54, 0fBBEEAA1B;
	fma.rn.f32 	%f55, %f53, %f30, %f54;
	mov.f32 	%f56, 0fBCDA7747;
	fma.rn.f32 	%f57, %f55, %f30, %f56;
	mul.f32 	%f58, %f30, %f57;
	add.f32 	%f59, %f1, 0fC0B0A47B;
	add.f32 	%f60, %f59, 0f339A7A37;
	mul.f32 	%f61, %f60, %f58;
	add.f32 	%f62, %f1, 0fC10A75AB;
	add.f32 	%f63, %f62, 0fB4CCCDED;
	mul.f32 	%f128, %f63, %f61;
	bra.uni 	BB24_37;

BB24_28:
	mov.f32 	%f111, 0f3C08839E;
	mov.f32 	%f112, 0fB94CA1F9;
	fma.rn.f32 	%f125, %f112, %f14, %f111;

BB24_29:
	@%p21 bra 	BB24_31;

	mov.f32 	%f113, 0f3D2AAAA5;
	fma.rn.f32 	%f114, %f125, %f14, %f113;
	mov.f32 	%f115, 0fBF000000;
	fma.rn.f32 	%f126, %f114, %f14, %f115;
	bra.uni 	BB24_32;

BB24_31:
	mov.f32 	%f116, 0fBE2AAAA3;
	fma.rn.f32 	%f117, %f125, %f14, %f116;
	mov.f32 	%f118, 0f00000000;
	fma.rn.f32 	%f126, %f117, %f14, %f118;

BB24_32:
	fma.rn.f32 	%f127, %f126, %f124, %f124;
	@%p21 bra 	BB24_34;

	fma.rn.f32 	%f127, %f126, %f14, %f76;

BB24_34:
	and.b32  	%r190, %r83, 2;
	setp.eq.s32	%p24, %r190, 0;
	@%p24 bra 	BB24_36;

	mov.f32 	%f120, 0f00000000;
	mov.f32 	%f121, 0fBF800000;
	fma.rn.f32 	%f127, %f127, %f121, %f120;

BB24_36:
	mul.f32 	%f128, %f4, %f127;

BB24_37:
	cvta.to.global.u32 	%r191, %r85;
	add.s32 	%r193, %r191, %r93;
	st.global.f32 	[%r193], %f128;

BB24_38:
	ret;
}

	// .globl	math_j1f
.visible .entry math_j1f(
	.param .u32 math_j1f_param_0,
	.param .u32 math_j1f_param_1,
	.param .u32 math_j1f_param_2
)
{
	.local .align 4 .b8 	__local_depot25[28];
	.reg .b32 	%SP;
	.reg .b32 	%SPL;
	.reg .pred 	%p<27>;
	.reg .f32 	%f<129>;
	.reg .s32 	%r<231>;


	mov.u32 	%r230, __local_depot25;
	cvta.local.u32 	%SP, %r230;
	ld.param.u32 	%r86, [math_j1f_param_0];
	ld.param.u32 	%r84, [math_j1f_param_1];
	ld.param.u32 	%r85, [math_j1f_param_2];
	add.u32 	%r87, %SP, 0;
	cvta.to.local.u32 	%r1, %r87;
	mov.u32 	%r88, %ntid.x;
	mov.u32 	%r89, %ctaid.x;
	mov.u32 	%r90, %tid.x;
	mad.lo.s32 	%r2, %r88, %r89, %r90;
	setp.ge.u32	%p1, %r2, %r86;
	@%p1 bra 	BB25_38;

	cvta.to.global.u32 	%r91, %r85;
	shl.b32 	%r92, %r2, 2;
	add.s32 	%r93, %r91, %r92;
	ld.global.f32 	%f1, [%r93];
	abs.f32 	%f2, %f1;
	setp.gtu.f32	%p2, %f2, 0f40FB3333;
	@%p2 bra 	BB25_3;
	bra.uni 	BB25_2;

BB25_3:
	abs.f32 	%f61, %f2;
	mov.f32 	%f128, 0f00000000;
	setp.eq.f32	%p3, %f61, 0f7F800000;
	@%p3 bra 	BB25_37;

	// inline asm
	rcp.approx.ftz.f32 %f62,%f2;
	// inline asm
	mul.f32 	%f64, %f62, %f62;
	mov.f32 	%f65, 0f3F3FF7E9;
	mov.f32 	%f66, 0fC082CB37;
	fma.rn.f32 	%f67, %f66, %f64, %f65;
	mov.f32 	%f68, 0fBE458BAE;
	fma.rn.f32 	%f69, %f67, %f64, %f68;
	mov.f32 	%f70, 0f3E3FFF8B;
	fma.rn.f32 	%f71, %f69, %f64, %f70;
	mov.f32 	%f72, 0f3F800000;
	fma.rn.f32 	%f73, %f71, %f64, %f72;
	mov.f32 	%f74, 0f3EB914AD;
	mov.f32 	%f75, 0fBFCA3BA2;
	fma.rn.f32 	%f76, %f75, %f64, %f74;
	mov.f32 	%f77, 0fBE27F2EC;
	fma.rn.f32 	%f78, %f76, %f64, %f77;
	mov.f32 	%f79, 0f3EBFFFFD;
	fma.rn.f32 	%f80, %f78, %f64, %f79;
	fma.rn.f32 	%f4, %f80, %f62, %f2;
	rsqrt.approx.f32 	%f81, %f2;
	mul.f32 	%f82, %f81, 0f3F4C422A;
	mul.f32 	%f5, %f73, %f82;
	mul.f32 	%f83, %f4, 0f3F22F983;
	cvt.rni.s32.f32	%r215, %f83;
	cvt.rn.f32.s32	%f84, %r215;
	neg.f32 	%f85, %f84;
	mov.f32 	%f86, 0f3FC90FDA;
	fma.rn.f32 	%f87, %f85, %f86, %f4;
	mov.f32 	%f88, 0f33A22168;
	fma.rn.f32 	%f89, %f85, %f88, %f87;
	mov.f32 	%f90, 0f27C234C5;
	fma.rn.f32 	%f122, %f85, %f90, %f89;
	abs.f32 	%f91, %f4;
	setp.leu.f32	%p4, %f91, 0f47CE4780;
	@%p4 bra 	BB25_14;

	mov.b32 	 %r4, %f4;
	shl.b32 	%r97, %r4, 8;
	or.b32  	%r5, %r97, -2147483648;
	mov.u32 	%r207, 0;
	mov.u32 	%r206, 6;
	mov.u32 	%r205, __cudart_i2opi_f;
	mov.u32 	%r220, %r1;

BB25_6:
	.pragma "nounroll";
	mov.u32 	%r8, %r220;
	ld.const.u32 	%r100, [%r205];
	// inline asm
	{
	mad.lo.cc.u32   %r98, %r100, %r5, %r207;
	madc.hi.u32     %r99, %r100, %r5,  0;
	}
	// inline asm
	mov.u32 	%r207, %r99;
	st.local.u32 	[%r8], %r98;
	add.s32 	%r11, %r8, 4;
	add.s32 	%r205, %r205, 4;
	add.s32 	%r206, %r206, -1;
	setp.ne.s32	%p5, %r206, 0;
	mov.u32 	%r220, %r11;
	@%p5 bra 	BB25_6;

	and.b32  	%r14, %r4, -2147483648;
	bfe.u32 	%r103, %r4, 23, 8;
	add.s32 	%r104, %r103, -128;
	shr.u32 	%r105, %r104, 5;
	mov.u32 	%r106, 4;
	sub.s32 	%r107, %r106, %r105;
	shl.b32 	%r108, %r107, 2;
	add.s32 	%r109, %r108, %r1;
	st.local.u32 	[%r1+24], %r99;
	bfe.u32 	%r15, %r4, 23, 5;
	ld.local.u32 	%r208, [%r109+8];
	ld.local.u32 	%r209, [%r109+4];
	setp.eq.s32	%p6, %r15, 0;
	@%p6 bra 	BB25_9;

	mov.u32 	%r110, 32;
	sub.s32 	%r111, %r110, %r15;
	shr.u32 	%r112, %r209, %r111;
	shl.b32 	%r113, %r208, %r15;
	add.s32 	%r208, %r112, %r113;
	add.s32 	%r203, %r109, 8;
	ld.local.u32 	%r114, [%r203+-8];
	shr.u32 	%r115, %r114, %r111;
	shl.b32 	%r116, %r209, %r15;
	add.s32 	%r209, %r115, %r116;

BB25_9:
	shr.u32 	%r117, %r209, 30;
	shl.b32 	%r118, %r208, 2;
	add.s32 	%r210, %r117, %r118;
	shl.b32 	%r24, %r209, 2;
	shr.u32 	%r119, %r210, 31;
	shr.u32 	%r120, %r208, 30;
	add.s32 	%r25, %r119, %r120;
	setp.eq.s32	%p7, %r119, 0;
	mov.u32 	%r211, %r14;
	mov.u32 	%r212, %r24;
	@%p7 bra 	BB25_11;

	not.b32 	%r121, %r210;
	neg.s32 	%r26, %r24;
	setp.eq.s32	%p8, %r24, 0;
	selp.u32	%r122, 1, 0, %p8;
	add.s32 	%r210, %r122, %r121;
	xor.b32  	%r28, %r14, -2147483648;
	mov.u32 	%r211, %r28;
	mov.u32 	%r212, %r26;

BB25_11:
	mov.u32 	%r30, %r211;
	neg.s32 	%r123, %r25;
	setp.eq.s32	%p9, %r14, 0;
	selp.b32	%r215, %r25, %r123, %p9;
	clz.b32 	%r214, %r210;
	setp.eq.s32	%p10, %r214, 0;
	shl.b32 	%r124, %r210, %r214;
	mov.u32 	%r125, 32;
	sub.s32 	%r126, %r125, %r214;
	shr.u32 	%r127, %r212, %r126;
	add.s32 	%r128, %r127, %r124;
	selp.b32	%r34, %r210, %r128, %p10;
	mov.u32 	%r129, -921707870;
	mul.hi.u32 	%r213, %r34, %r129;
	setp.lt.s32	%p11, %r213, 1;
	@%p11 bra 	BB25_13;

	mul.lo.s32 	%r130, %r34, -921707870;
	shr.u32 	%r131, %r130, 31;
	shl.b32 	%r132, %r213, 1;
	add.s32 	%r213, %r131, %r132;
	add.s32 	%r214, %r214, 1;

BB25_13:
	mov.u32 	%r133, 126;
	sub.s32 	%r134, %r133, %r214;
	shl.b32 	%r135, %r134, 23;
	add.s32 	%r136, %r213, 1;
	shr.u32 	%r137, %r136, 7;
	add.s32 	%r138, %r137, 1;
	shr.u32 	%r139, %r138, 1;
	add.s32 	%r140, %r139, %r135;
	or.b32  	%r141, %r140, %r30;
	mov.b32 	 %f122, %r141;

BB25_14:
	and.b32  	%r142, %r215, 3;
	cvt.rn.f32.s32	%f92, %r142;
	add.f32 	%f93, %f122, 0fC016CBE4;
	fma.rn.f32 	%f123, %f92, 0f3FC90FDB, %f93;
	abs.f32 	%f94, %f123;
	setp.neu.f32	%p12, %f94, 0f7F800000;
	@%p12 bra 	BB25_16;

	mov.f32 	%f95, 0f00000000;
	mul.rn.f32 	%f123, %f123, %f95;

BB25_16:
	mul.f32 	%f96, %f123, 0f3F22F983;
	cvt.rni.s32.f32	%r229, %f96;
	cvt.rn.f32.s32	%f97, %r229;
	neg.f32 	%f98, %f97;
	fma.rn.f32 	%f100, %f98, %f86, %f123;
	fma.rn.f32 	%f102, %f98, %f88, %f100;
	fma.rn.f32 	%f124, %f98, %f90, %f102;
	abs.f32 	%f104, %f123;
	setp.leu.f32	%p13, %f104, 0f47CE4780;
	@%p13 bra 	BB25_26;

	mov.b32 	 %r43, %f123;
	shr.u32 	%r44, %r43, 23;
	bfe.u32 	%r146, %r43, 23, 8;
	add.s32 	%r147, %r146, -128;
	shl.b32 	%r148, %r43, 8;
	or.b32  	%r45, %r148, -2147483648;
	shr.u32 	%r46, %r147, 5;
	mov.u32 	%r221, 0;
	mov.u32 	%r217, 6;
	mov.u32 	%r216, __cudart_i2opi_f;
	mov.u32 	%r219, %r1;

BB25_18:
	.pragma "nounroll";
	ld.const.u32 	%r151, [%r216];
	// inline asm
	{
	mad.lo.cc.u32   %r149, %r151, %r45, %r221;
	madc.hi.u32     %r150, %r151, %r45,  0;
	}
	// inline asm
	mov.u32 	%r221, %r150;
	st.local.u32 	[%r219], %r149;
	add.s32 	%r219, %r219, 4;
	add.s32 	%r216, %r216, 4;
	add.s32 	%r217, %r217, -1;
	setp.ne.s32	%p14, %r217, 0;
	@%p14 bra 	BB25_18;

	and.b32  	%r55, %r43, -2147483648;
	mov.u32 	%r154, 4;
	sub.s32 	%r155, %r154, %r46;
	shl.b32 	%r156, %r155, 2;
	add.s32 	%r157, %r156, %r1;
	st.local.u32 	[%r1+24], %r150;
	ld.local.u32 	%r222, [%r157+8];
	ld.local.u32 	%r223, [%r157+4];
	and.b32  	%r59, %r44, 31;
	setp.eq.s32	%p15, %r59, 0;
	@%p15 bra 	BB25_21;

	mov.u32 	%r158, 32;
	sub.s32 	%r159, %r158, %r59;
	shr.u32 	%r160, %r223, %r159;
	shl.b32 	%r161, %r222, %r59;
	add.s32 	%r222, %r160, %r161;
	add.s32 	%r204, %r157, 8;
	ld.local.u32 	%r162, [%r204+-8];
	shr.u32 	%r163, %r162, %r159;
	shl.b32 	%r164, %r223, %r59;
	add.s32 	%r223, %r163, %r164;

BB25_21:
	shr.u32 	%r165, %r223, 30;
	shl.b32 	%r166, %r222, 2;
	add.s32 	%r224, %r165, %r166;
	shl.b32 	%r65, %r223, 2;
	shr.u32 	%r167, %r224, 31;
	shr.u32 	%r168, %r222, 30;
	add.s32 	%r66, %r167, %r168;
	setp.eq.s32	%p16, %r167, 0;
	mov.u32 	%r225, %r55;
	mov.u32 	%r226, %r65;
	@%p16 bra 	BB25_23;

	not.b32 	%r169, %r224;
	neg.s32 	%r67, %r65;
	setp.eq.s32	%p17, %r65, 0;
	selp.u32	%r170, 1, 0, %p17;
	add.s32 	%r224, %r170, %r169;
	xor.b32  	%r69, %r55, -2147483648;
	mov.u32 	%r225, %r69;
	mov.u32 	%r226, %r67;

BB25_23:
	mov.u32 	%r71, %r225;
	neg.s32 	%r171, %r66;
	setp.eq.s32	%p18, %r55, 0;
	selp.b32	%r229, %r66, %r171, %p18;
	clz.b32 	%r228, %r224;
	setp.eq.s32	%p19, %r228, 0;
	shl.b32 	%r172, %r224, %r228;
	mov.u32 	%r173, 32;
	sub.s32 	%r174, %r173, %r228;
	shr.u32 	%r175, %r226, %r174;
	add.s32 	%r176, %r175, %r172;
	selp.b32	%r75, %r224, %r176, %p19;
	mov.u32 	%r177, -921707870;
	mul.hi.u32 	%r227, %r75, %r177;
	setp.lt.s32	%p20, %r227, 1;
	@%p20 bra 	BB25_25;

	mul.lo.s32 	%r178, %r75, -921707870;
	shr.u32 	%r179, %r178, 31;
	shl.b32 	%r180, %r227, 1;
	add.s32 	%r227, %r179, %r180;
	add.s32 	%r228, %r228, 1;

BB25_25:
	mov.u32 	%r181, 126;
	sub.s32 	%r182, %r181, %r228;
	shl.b32 	%r183, %r182, 23;
	add.s32 	%r184, %r227, 1;
	shr.u32 	%r185, %r184, 7;
	add.s32 	%r186, %r185, 1;
	shr.u32 	%r187, %r186, 1;
	add.s32 	%r188, %r187, %r183;
	or.b32  	%r189, %r188, %r71;
	mov.b32 	 %f124, %r189;

BB25_26:
	mul.rn.f32 	%f15, %f124, %f124;
	add.s32 	%r82, %r229, 1;
	and.b32  	%r83, %r82, 1;
	setp.eq.s32	%p21, %r83, 0;
	@%p21 bra 	BB25_28;

	mov.f32 	%f105, 0fBAB6061A;
	mov.f32 	%f106, 0f37CCF5CE;
	fma.rn.f32 	%f125, %f106, %f15, %f105;
	bra.uni 	BB25_29;

BB25_2:
	add.f32 	%f29, %f2, 0fC0753AAC;
	add.f32 	%f30, %f29, 0f33A5090F;
	mov.f32 	%f31, 0f2B81BF42;
	mov.f32 	%f32, 0f29AF3463;
	fma.rn.f32 	%f33, %f32, %f30, %f31;
	mov.f32 	%f34, 0fADE21EC1;
	fma.rn.f32 	%f35, %f33, %f30, %f34;
	mov.f32 	%f36, 0fAF5DDEFF;
	fma.rn.f32 	%f37, %f35, %f30, %f36;
	mov.f32 	%f38, 0f319B0C9D;
	fma.rn.f32 	%f39, %f37, %f30, %f38;
	mov.f32 	%f40, 0f32E81173;
	fma.rn.f32 	%f41, %f39, %f30, %f40;
	mov.f32 	%f42, 0fB50F8DC8;
	fma.rn.f32 	%f43, %f41, %f30, %f42;
	mov.f32 	%f44, 0fB61E653D;
	fma.rn.f32 	%f45, %f43, %f30, %f44;
	mov.f32 	%f46, 0f382CD9C5;
	fma.rn.f32 	%f47, %f45, %f30, %f46;
	mov.f32 	%f48, 0f38F9EB10;
	fma.rn.f32 	%f49, %f47, %f30, %f48;
	mov.f32 	%f50, 0fBAECEB9C;
	fma.rn.f32 	%f51, %f49, %f30, %f50;
	mov.f32 	%f52, 0fBB276FFD;
	fma.rn.f32 	%f53, %f51, %f30, %f52;
	mov.f32 	%f54, 0f3D073993;
	fma.rn.f32 	%f55, %f53, %f30, %f54;
	add.f32 	%f56, %f2, 0fC0E07FB0;
	add.f32 	%f57, %f56, 0f3444B8DB;
	mul.f32 	%f58, %f57, %f55;
	mul.f32 	%f59, %f30, %f58;
	mul.f32 	%f128, %f2, %f59;
	bra.uni 	BB25_37;

BB25_28:
	mov.f32 	%f107, 0f3C08839E;
	mov.f32 	%f108, 0fB94CA1F9;
	fma.rn.f32 	%f125, %f108, %f15, %f107;

BB25_29:
	@%p21 bra 	BB25_31;

	mov.f32 	%f109, 0f3D2AAAA5;
	fma.rn.f32 	%f110, %f125, %f15, %f109;
	mov.f32 	%f111, 0fBF000000;
	fma.rn.f32 	%f126, %f110, %f15, %f111;
	bra.uni 	BB25_32;

BB25_31:
	mov.f32 	%f112, 0fBE2AAAA3;
	fma.rn.f32 	%f113, %f125, %f15, %f112;
	mov.f32 	%f114, 0f00000000;
	fma.rn.f32 	%f126, %f113, %f15, %f114;

BB25_32:
	fma.rn.f32 	%f127, %f126, %f124, %f124;
	@%p21 bra 	BB25_34;

	fma.rn.f32 	%f127, %f126, %f15, %f72;

BB25_34:
	and.b32  	%r190, %r82, 2;
	setp.eq.s32	%p24, %r190, 0;
	@%p24 bra 	BB25_36;

	mov.f32 	%f116, 0f00000000;
	mov.f32 	%f117, 0fBF800000;
	fma.rn.f32 	%f127, %f127, %f117, %f116;

BB25_36:
	mul.f32 	%f128, %f5, %f127;

BB25_37:
	neg.f32 	%f118, %f128;
	setp.lt.f32	%p25, %f1, 0f00000000;
	selp.f32	%f119, %f118, %f128, %p25;
	mov.b32 	 %r191, %f1;
	and.b32  	%r192, %r191, -2147483648;
	mov.b32 	 %r193, %f119;
	and.b32  	%r194, %r193, 2147483647;
	or.b32  	%r195, %r194, %r192;
	mov.b32 	 %f120, %r195;
	setp.lt.f32	%p26, %f2, 0f0DA24260;
	selp.f32	%f121, %f120, %f119, %p26;
	cvta.to.global.u32 	%r200, %r84;
	add.s32 	%r202, %r200, %r92;
	st.global.f32 	[%r202], %f121;

BB25_38:
	ret;
}

	// .globl	math_lgammaf
.visible .entry math_lgammaf(
	.param .u32 math_lgammaf_param_0,
	.param .u32 math_lgammaf_param_1,
	.param .u32 math_lgammaf_param_2
)
{
	.reg .pred 	%p<34>;
	.reg .f32 	%f<271>;
	.reg .s32 	%r<33>;


	ld.param.u32 	%r6, [math_lgammaf_param_0];
	ld.param.u32 	%r4, [math_lgammaf_param_1];
	ld.param.u32 	%r5, [math_lgammaf_param_2];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	setp.ge.u32	%p1, %r1, %r6;
	@%p1 bra 	BB26_38;

	cvta.to.global.u32 	%r10, %r5;
	shl.b32 	%r11, %r1, 2;
	add.s32 	%r12, %r10, %r11;
	ld.global.f32 	%f1, [%r12];
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p2, %f2, 0f40400000;
	@%p2 bra 	BB26_8;
	bra.uni 	BB26_2;

BB26_8:
	setp.ltu.f32	%p10, %f2, 0f3FC00000;
	@%p10 bra 	BB26_10;
	bra.uni 	BB26_9;

BB26_10:
	setp.ltu.f32	%p11, %f2, 0f3F333333;
	@%p11 bra 	BB26_12;
	bra.uni 	BB26_11;

BB26_12:
	mov.f32 	%f143, 0fBBB34878;
	mov.f32 	%f144, 0f3B6B1C86;
	fma.rn.f32 	%f145, %f144, %f2, %f143;
	mov.f32 	%f146, 0fBD36CAEF;
	fma.rn.f32 	%f147, %f145, %f2, %f146;
	mov.f32 	%f148, 0f3E2B5555;
	fma.rn.f32 	%f149, %f147, %f2, %f148;
	mov.f32 	%f150, 0fBD2C96C7;
	fma.rn.f32 	%f151, %f149, %f2, %f150;
	mov.f32 	%f152, 0fBF27E6EB;
	fma.rn.f32 	%f153, %f151, %f2, %f152;
	mov.f32 	%f154, 0f3F13C463;
	fma.rn.f32 	%f155, %f153, %f2, %f154;
	mul.f32 	%f156, %f2, %f155;
	fma.rn.f32 	%f11, %f156, %f2, %f2;
	setp.gt.f32	%p12, %f11, 0f00000000;
	setp.lt.f32	%p13, %f11, 0f7F800000;
	and.pred  	%p14, %p12, %p13;
	@%p14 bra 	BB26_14;
	bra.uni 	BB26_13;

BB26_14:
	setp.lt.f32	%p15, %f11, 0f00800000;
	mul.f32 	%f159, %f11, 0f4B800000;
	selp.f32	%f160, %f159, %f11, %p15;
	selp.f32	%f161, 0fC3170000, 0fC2FE0000, %p15;
	mov.b32 	 %r17, %f160;
	and.b32  	%r18, %r17, 8388607;
	or.b32  	%r19, %r18, 1065353216;
	mov.b32 	 %f162, %r19;
	shr.u32 	%r20, %r17, 23;
	cvt.rn.f32.u32	%f163, %r20;
	add.f32 	%f164, %f161, %f163;
	setp.gt.f32	%p16, %f162, 0f3FAE147B;
	mul.f32 	%f165, %f162, 0f3F000000;
	add.f32 	%f166, %f164, 0f3F800000;
	selp.f32	%f167, %f165, %f162, %p16;
	selp.f32	%f168, %f166, %f164, %p16;
	add.f32 	%f158, %f167, 0f3F800000;
	add.f32 	%f169, %f167, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f157,%f158;
	// inline asm
	mul.f32 	%f170, %f169, %f169;
	neg.f32 	%f171, %f170;
	mul.rn.f32 	%f172, %f157, %f171;
	add.rn.f32 	%f173, %f169, %f172;
	mul.f32 	%f174, %f173, %f173;
	mov.f32 	%f175, 0f3C4C6A36;
	mov.f32 	%f176, 0f3B1E94E6;
	fma.rn.f32 	%f177, %f176, %f174, %f175;
	mov.f32 	%f178, 0f3DAAAB1A;
	fma.rn.f32 	%f179, %f177, %f174, %f178;
	mul.f32 	%f180, %f174, %f179;
	fma.rn.f32 	%f181, %f180, %f173, %f172;
	add.f32 	%f182, %f169, %f181;
	mov.f32 	%f183, 0f3F317218;
	fma.rn.f32 	%f262, %f168, %f183, %f182;
	bra.uni 	BB26_15;

BB26_2:
	setp.ltu.f32	%p3, %f2, 0f40F9999A;
	@%p3 bra 	BB26_7;
	bra.uni 	BB26_3;

BB26_7:
	add.f32 	%f84, %f2, 0fC0400000;
	mov.f32 	%f85, 0fC640F6F8;
	mov.f32 	%f86, 0fC43B38FB;
	fma.rn.f32 	%f87, %f86, %f84, %f85;
	mov.f32 	%f88, 0fC7206560;
	fma.rn.f32 	%f89, %f87, %f84, %f88;
	mov.f32 	%f90, 0fC73CB6AA;
	fma.rn.f32 	%f91, %f89, %f84, %f90;
	mov.f32 	%f92, 0fC80BAE5A;
	fma.rn.f32 	%f93, %f91, %f84, %f92;
	add.f32 	%f94, %f84, 0fC381A020;
	mov.f32 	%f95, 0fC62864B8;
	fma.rn.f32 	%f96, %f94, %f84, %f95;
	mov.f32 	%f97, 0fC7B50686;
	fma.rn.f32 	%f98, %f96, %f84, %f97;
	mov.f32 	%f99, 0fC8498465;
	fma.rn.f32 	%f83, %f98, %f84, %f99;
	// inline asm
	rcp.approx.ftz.f32 %f82,%f83;
	// inline asm
	fma.rn.f32 	%f270, %f93, %f82, %f84;
	bra.uni 	BB26_16;

BB26_9:
	add.f32 	%f100, %f2, 0fC0000000;
	mov.f32 	%f101, 0fB967A002;
	mov.f32 	%f102, 0f385007FA;
	fma.rn.f32 	%f103, %f102, %f100, %f101;
	mov.f32 	%f104, 0f3A0DE6FC;
	fma.rn.f32 	%f105, %f103, %f100, %f104;
	mov.f32 	%f106, 0fBA9DE0E2;
	fma.rn.f32 	%f107, %f105, %f100, %f106;
	mov.f32 	%f108, 0f3B3D05B7;
	fma.rn.f32 	%f109, %f107, %f100, %f108;
	mov.f32 	%f110, 0fBBF1EB10;
	fma.rn.f32 	%f111, %f109, %f100, %f110;
	mov.f32 	%f112, 0f3CA89A28;
	fma.rn.f32 	%f113, %f111, %f100, %f112;
	mov.f32 	%f114, 0fBD89F01A;
	fma.rn.f32 	%f115, %f113, %f100, %f114;
	mov.f32 	%f116, 0f3EA51A66;
	fma.rn.f32 	%f117, %f115, %f100, %f116;
	mov.f32 	%f118, 0f3ED87730;
	fma.rn.f32 	%f119, %f117, %f100, %f118;
	mul.f32 	%f270, %f100, %f119;
	bra.uni 	BB26_16;

BB26_3:
	// inline asm
	rcp.approx.ftz.f32 %f40,%f2;
	// inline asm
	mul.f32 	%f42, %f40, %f40;
	mov.f32 	%f43, 0fBB360953;
	mov.f32 	%f44, 0f3A4BE755;
	fma.rn.f32 	%f45, %f44, %f42, %f43;
	mov.f32 	%f46, 0f3DAAAAA3;
	fma.rn.f32 	%f47, %f45, %f42, %f46;
	mov.f32 	%f48, 0f3F6B3F8E;
	fma.rn.f32 	%f3, %f47, %f40, %f48;
	setp.lt.f32	%p4, %f2, 0f7F800000;
	setp.gt.f32	%p5, %f2, 0f00000000;
	and.pred  	%p6, %p5, %p4;
	@%p6 bra 	BB26_5;
	bra.uni 	BB26_4;

BB26_5:
	setp.lt.f32	%p7, %f2, 0f00800000;
	mul.f32 	%f51, %f2, 0f4B800000;
	selp.f32	%f52, %f51, %f2, %p7;
	selp.f32	%f53, 0fC3170000, 0fC2FE0000, %p7;
	mov.b32 	 %r13, %f52;
	and.b32  	%r14, %r13, 8388607;
	or.b32  	%r15, %r14, 1065353216;
	mov.b32 	 %f54, %r15;
	shr.u32 	%r16, %r13, 23;
	cvt.rn.f32.u32	%f55, %r16;
	add.f32 	%f56, %f53, %f55;
	setp.gt.f32	%p8, %f54, 0f3FAE147B;
	mul.f32 	%f57, %f54, 0f3F000000;
	add.f32 	%f58, %f56, 0f3F800000;
	selp.f32	%f59, %f57, %f54, %p8;
	selp.f32	%f60, %f58, %f56, %p8;
	add.f32 	%f50, %f59, 0f3F800000;
	add.f32 	%f61, %f59, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f49,%f50;
	// inline asm
	mul.f32 	%f62, %f61, %f61;
	neg.f32 	%f63, %f62;
	mul.rn.f32 	%f64, %f49, %f63;
	add.rn.f32 	%f65, %f61, %f64;
	mul.f32 	%f66, %f65, %f65;
	mov.f32 	%f67, 0f3C4C6A36;
	mov.f32 	%f68, 0f3B1E94E6;
	fma.rn.f32 	%f69, %f68, %f66, %f67;
	mov.f32 	%f70, 0f3DAAAB1A;
	fma.rn.f32 	%f71, %f69, %f66, %f70;
	mul.f32 	%f72, %f66, %f71;
	fma.rn.f32 	%f73, %f72, %f65, %f64;
	add.f32 	%f74, %f61, %f73;
	mov.f32 	%f75, 0f3F317218;
	fma.rn.f32 	%f261, %f60, %f75, %f74;
	bra.uni 	BB26_6;

BB26_11:
	mov.f32 	%f120, 0f3F800000;
	sub.f32 	%f121, %f120, %f2;
	mov.f32 	%f122, 0f3DD47577;
	mov.f32 	%f123, 0f3D3BEF76;
	fma.rn.f32 	%f124, %f123, %f121, %f122;
	mov.f32 	%f125, 0f3DFB8079;
	fma.rn.f32 	%f126, %f124, %f121, %f125;
	mov.f32 	%f127, 0f3E0295B5;
	fma.rn.f32 	%f128, %f126, %f121, %f127;
	mov.f32 	%f129, 0f3E12A765;
	fma.rn.f32 	%f130, %f128, %f121, %f129;
	mov.f32 	%f131, 0f3E2D6867;
	fma.rn.f32 	%f132, %f130, %f121, %f131;
	mov.f32 	%f133, 0f3E5462BF;
	fma.rn.f32 	%f134, %f132, %f121, %f133;
	mov.f32 	%f135, 0f3E8A8A72;
	fma.rn.f32 	%f136, %f134, %f121, %f135;
	mov.f32 	%f137, 0f3ECD26A4;
	fma.rn.f32 	%f138, %f136, %f121, %f137;
	mov.f32 	%f139, 0f3F528D32;
	fma.rn.f32 	%f140, %f138, %f121, %f139;
	mov.f32 	%f141, 0f3F13C468;
	fma.rn.f32 	%f142, %f140, %f121, %f141;
	mul.f32 	%f270, %f121, %f142;
	bra.uni 	BB26_16;

BB26_4:
	lg2.approx.f32 	%f261, %f2;

BB26_6:
	add.f32 	%f76, %f2, 0fBF000000;
	mul.f32 	%f77, %f261, 0f3F000000;
	mul.rn.f32 	%f78, %f77, %f76;
	sub.f32 	%f79, %f78, %f2;
	add.rn.f32 	%f80, %f78, %f3;
	add.f32 	%f81, %f79, %f80;
	setp.eq.f32	%p9, %f2, 0f7F800000;
	selp.f32	%f270, %f2, %f81, %p9;
	bra.uni 	BB26_16;

BB26_13:
	lg2.approx.f32 	%f262, %f11;

BB26_15:
	neg.f32 	%f270, %f262;

BB26_16:
	mov.f32 	%f16, %f270;
	setp.ge.f32	%p17, %f1, 0f00000000;
	mov.f32 	%f269, %f16;
	@%p17 bra 	BB26_37;

	cvt.rmi.f32.f32	%f185, %f2;
	setp.eq.f32	%p18, %f2, %f185;
	mov.f32 	%f184, 0f7F800000;
	mov.f32 	%f269, %f184;
	@%p18 bra 	BB26_37;

	setp.lt.f32	%p19, %f2, 0f1FEC1E4A;
	@%p19 bra 	BB26_33;
	bra.uni 	BB26_19;

BB26_33:
	setp.gt.f32	%p29, %f2, 0f00000000;
	setp.lt.f32	%p30, %f2, 0f7F800000;
	and.pred  	%p31, %p29, %p30;
	@%p31 bra 	BB26_35;
	bra.uni 	BB26_34;

BB26_35:
	setp.lt.f32	%p32, %f2, 0f00800000;
	mul.f32 	%f236, %f2, 0f4B800000;
	selp.f32	%f237, %f236, %f2, %p32;
	selp.f32	%f238, 0fC3170000, 0fC2FE0000, %p32;
	mov.b32 	 %r26, %f237;
	and.b32  	%r27, %r26, 8388607;
	or.b32  	%r28, %r27, 1065353216;
	mov.b32 	 %f239, %r28;
	shr.u32 	%r29, %r26, 23;
	cvt.rn.f32.u32	%f240, %r29;
	add.f32 	%f241, %f238, %f240;
	setp.gt.f32	%p33, %f239, 0f3FAE147B;
	mul.f32 	%f242, %f239, 0f3F000000;
	add.f32 	%f243, %f241, 0f3F800000;
	selp.f32	%f244, %f242, %f239, %p33;
	selp.f32	%f245, %f243, %f241, %p33;
	add.f32 	%f235, %f244, 0f3F800000;
	add.f32 	%f246, %f244, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f234,%f235;
	// inline asm
	mul.f32 	%f247, %f246, %f246;
	neg.f32 	%f248, %f247;
	mul.rn.f32 	%f249, %f234, %f248;
	add.rn.f32 	%f250, %f246, %f249;
	mul.f32 	%f251, %f250, %f250;
	mov.f32 	%f252, 0f3C4C6A36;
	mov.f32 	%f253, 0f3B1E94E6;
	fma.rn.f32 	%f254, %f253, %f251, %f252;
	mov.f32 	%f255, 0f3DAAAB1A;
	fma.rn.f32 	%f256, %f254, %f251, %f255;
	mul.f32 	%f257, %f251, %f256;
	fma.rn.f32 	%f258, %f257, %f250, %f249;
	add.f32 	%f259, %f246, %f258;
	mov.f32 	%f260, 0f3F317218;
	fma.rn.f32 	%f267, %f245, %f260, %f259;
	bra.uni 	BB26_36;

BB26_19:
	add.f32 	%f186, %f2, %f2;
	cvt.rni.f32.f32	%f187, %f186;
	cvt.rzi.s32.f32	%r2, %f187;
	neg.f32 	%f188, %f187;
	mov.f32 	%f189, 0f3F000000;
	fma.rn.f32 	%f190, %f188, %f189, %f2;
	mul.f32 	%f17, %f190, 0f40490FDB;
	mul.rn.f32 	%f18, %f17, %f17;
	and.b32  	%r3, %r2, 1;
	setp.eq.s32	%p20, %r3, 0;
	@%p20 bra 	BB26_21;

	mov.f32 	%f191, 0fBAB6061A;
	mov.f32 	%f192, 0f37CCF5CE;
	fma.rn.f32 	%f263, %f192, %f18, %f191;
	bra.uni 	BB26_22;

BB26_34:
	lg2.approx.f32 	%f267, %f2;

BB26_36:
	neg.f32 	%f269, %f267;
	bra.uni 	BB26_37;

BB26_21:
	mov.f32 	%f193, 0f3C08839E;
	mov.f32 	%f194, 0fB94CA1F9;
	fma.rn.f32 	%f263, %f194, %f18, %f193;

BB26_22:
	@%p20 bra 	BB26_24;

	mov.f32 	%f195, 0f3D2AAAA5;
	fma.rn.f32 	%f196, %f263, %f18, %f195;
	mov.f32 	%f197, 0fBF000000;
	fma.rn.f32 	%f264, %f196, %f18, %f197;
	bra.uni 	BB26_25;

BB26_24:
	mov.f32 	%f198, 0fBE2AAAA3;
	fma.rn.f32 	%f199, %f263, %f18, %f198;
	mov.f32 	%f200, 0f00000000;
	fma.rn.f32 	%f264, %f199, %f18, %f200;

BB26_25:
	fma.rn.f32 	%f265, %f264, %f17, %f17;
	@%p20 bra 	BB26_27;

	mov.f32 	%f201, 0f3F800000;
	fma.rn.f32 	%f265, %f264, %f18, %f201;

BB26_27:
	and.b32  	%r21, %r2, 2;
	setp.eq.s32	%p23, %r21, 0;
	@%p23 bra 	BB26_29;

	mov.f32 	%f202, 0f00000000;
	mov.f32 	%f203, 0fBF800000;
	fma.rn.f32 	%f265, %f265, %f203, %f202;

BB26_29:
	abs.f32 	%f204, %f265;
	mul.f32 	%f30, %f2, %f204;
	setp.gt.f32	%p24, %f30, 0f00000000;
	setp.lt.f32	%p25, %f30, 0f7F800000;
	and.pred  	%p26, %p24, %p25;
	@%p26 bra 	BB26_31;
	bra.uni 	BB26_30;

BB26_31:
	setp.lt.f32	%p27, %f30, 0f00800000;
	mul.f32 	%f207, %f30, 0f4B800000;
	selp.f32	%f208, %f207, %f30, %p27;
	selp.f32	%f209, 0fC3170000, 0fC2FE0000, %p27;
	mov.b32 	 %r22, %f208;
	and.b32  	%r23, %r22, 8388607;
	or.b32  	%r24, %r23, 1065353216;
	mov.b32 	 %f210, %r24;
	shr.u32 	%r25, %r22, 23;
	cvt.rn.f32.u32	%f211, %r25;
	add.f32 	%f212, %f209, %f211;
	setp.gt.f32	%p28, %f210, 0f3FAE147B;
	mul.f32 	%f213, %f210, 0f3F000000;
	add.f32 	%f214, %f212, 0f3F800000;
	selp.f32	%f215, %f213, %f210, %p28;
	selp.f32	%f216, %f214, %f212, %p28;
	add.f32 	%f206, %f215, 0f3F800000;
	add.f32 	%f217, %f215, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f205,%f206;
	// inline asm
	mul.f32 	%f218, %f217, %f217;
	neg.f32 	%f219, %f218;
	mul.rn.f32 	%f220, %f205, %f219;
	add.rn.f32 	%f221, %f217, %f220;
	mul.f32 	%f222, %f221, %f221;
	mov.f32 	%f223, 0f3C4C6A36;
	mov.f32 	%f224, 0f3B1E94E6;
	fma.rn.f32 	%f225, %f224, %f222, %f223;
	mov.f32 	%f226, 0f3DAAAB1A;
	fma.rn.f32 	%f227, %f225, %f222, %f226;
	mul.f32 	%f228, %f222, %f227;
	fma.rn.f32 	%f229, %f228, %f221, %f220;
	add.f32 	%f230, %f217, %f229;
	mov.f32 	%f231, 0f3F317218;
	fma.rn.f32 	%f266, %f216, %f231, %f230;
	bra.uni 	BB26_32;

BB26_30:
	lg2.approx.f32 	%f266, %f30;

BB26_32:
	mov.f32 	%f232, 0f3F928682;
	sub.f32 	%f233, %f232, %f266;
	sub.f32 	%f269, %f233, %f16;

BB26_37:
	cvta.to.global.u32 	%r30, %r4;
	add.s32 	%r32, %r30, %r11;
	st.global.f32 	[%r32], %f269;

BB26_38:
	ret;
}

	// .globl	math_log10f
.visible .entry math_log10f(
	.param .u32 math_log10f_param_0,
	.param .u32 math_log10f_param_1,
	.param .u32 math_log10f_param_2
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<34>;
	.reg .s32 	%r<18>;


	ld.param.u32 	%r4, [math_log10f_param_0];
	ld.param.u32 	%r2, [math_log10f_param_1];
	ld.param.u32 	%r3, [math_log10f_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB27_5;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	setp.gt.f32	%p2, %f1, 0f00000000;
	setp.lt.f32	%p3, %f1, 0f7F800000;
	and.pred  	%p4, %p2, %p3;
	@%p4 bra 	BB27_3;
	bra.uni 	BB27_2;

BB27_3:
	setp.lt.f32	%p5, %f1, 0f00800000;
	mul.f32 	%f7, %f1, 0f4B800000;
	selp.f32	%f8, %f7, %f1, %p5;
	selp.f32	%f9, 0fC3170000, 0fC2FE0000, %p5;
	mov.b32 	 %r11, %f8;
	and.b32  	%r12, %r11, 8388607;
	or.b32  	%r13, %r12, 1065353216;
	mov.b32 	 %f10, %r13;
	shr.u32 	%r14, %r11, 23;
	cvt.rn.f32.u32	%f11, %r14;
	add.f32 	%f12, %f9, %f11;
	setp.gt.f32	%p6, %f10, 0f3FAE147B;
	mul.f32 	%f13, %f10, 0f3F000000;
	add.f32 	%f14, %f12, 0f3F800000;
	selp.f32	%f15, %f13, %f10, %p6;
	selp.f32	%f16, %f14, %f12, %p6;
	add.f32 	%f6, %f15, 0f3F800000;
	add.f32 	%f17, %f15, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f5,%f6;
	// inline asm
	mul.f32 	%f18, %f17, %f17;
	neg.f32 	%f19, %f18;
	mul.rn.f32 	%f20, %f5, %f19;
	add.rn.f32 	%f21, %f17, %f20;
	mul.f32 	%f22, %f21, %f21;
	mov.f32 	%f23, 0f3C4C6A36;
	mov.f32 	%f24, 0f3B1E94E6;
	fma.rn.f32 	%f25, %f24, %f22, %f23;
	mov.f32 	%f26, 0f3DAAAB1A;
	fma.rn.f32 	%f27, %f25, %f22, %f26;
	mul.f32 	%f28, %f22, %f27;
	fma.rn.f32 	%f29, %f28, %f21, %f20;
	add.f32 	%f30, %f17, %f29;
	mov.f32 	%f31, 0f3F317218;
	fma.rn.f32 	%f33, %f16, %f31, %f30;
	bra.uni 	BB27_4;

BB27_2:
	lg2.approx.f32 	%f33, %f1;

BB27_4:
	cvta.to.global.u32 	%r15, %r2;
	add.s32 	%r17, %r15, %r9;
	mul.f32 	%f32, %f33, 0f3EDE5BD9;
	st.global.f32 	[%r17], %f32;

BB27_5:
	ret;
}

	// .globl	math_log1pf
.visible .entry math_log1pf(
	.param .u32 math_log1pf_param_0,
	.param .u32 math_log1pf_param_1,
	.param .u32 math_log1pf_param_2
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<48>;
	.reg .s32 	%r<18>;


	ld.param.u32 	%r4, [math_log1pf_param_0];
	ld.param.u32 	%r2, [math_log1pf_param_1];
	ld.param.u32 	%r3, [math_log1pf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB28_7;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	setp.le.f32	%p2, %f1, 0f3F266666;
	setp.ge.f32	%p3, %f1, 0fBEC9BA5E;
	and.pred  	%p4, %p3, %p2;
	@%p4 bra 	BB28_5;
	bra.uni 	BB28_2;

BB28_5:
	add.f32 	%f34, %f1, 0f40000000;
	div.approx.f32 	%f35, %f1, %f34;
	neg.f32 	%f36, %f1;
	mul.rn.f32 	%f37, %f36, %f35;
	add.rn.f32 	%f38, %f1, %f37;
	mul.f32 	%f39, %f38, %f38;
	mov.f32 	%f40, 0f3C4C4BE0;
	mov.f32 	%f41, 0f3B2063C3;
	fma.rn.f32 	%f42, %f41, %f39, %f40;
	mov.f32 	%f43, 0f3DAAAB50;
	fma.rn.f32 	%f44, %f42, %f39, %f43;
	mul.f32 	%f45, %f39, %f44;
	fma.rn.f32 	%f46, %f45, %f38, %f37;
	add.f32 	%f47, %f1, %f46;
	bra.uni 	BB28_6;

BB28_2:
	add.f32 	%f2, %f1, 0f3F800000;
	setp.gt.f32	%p5, %f2, 0f00000000;
	setp.lt.f32	%p6, %f2, 0f7F800000;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	BB28_4;
	bra.uni 	BB28_3;

BB28_4:
	setp.lt.f32	%p8, %f2, 0f00800000;
	mul.f32 	%f9, %f2, 0f4B800000;
	selp.f32	%f10, %f9, %f2, %p8;
	selp.f32	%f11, 0fC3170000, 0fC2FE0000, %p8;
	mov.b32 	 %r11, %f10;
	and.b32  	%r12, %r11, 8388607;
	or.b32  	%r13, %r12, 1065353216;
	mov.b32 	 %f12, %r13;
	shr.u32 	%r14, %r11, 23;
	cvt.rn.f32.u32	%f13, %r14;
	add.f32 	%f14, %f11, %f13;
	setp.gt.f32	%p9, %f12, 0f3FAE147B;
	mul.f32 	%f15, %f12, 0f3F000000;
	add.f32 	%f16, %f14, 0f3F800000;
	selp.f32	%f17, %f15, %f12, %p9;
	selp.f32	%f18, %f16, %f14, %p9;
	add.f32 	%f8, %f17, 0f3F800000;
	add.f32 	%f19, %f17, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f7,%f8;
	// inline asm
	mul.f32 	%f20, %f19, %f19;
	neg.f32 	%f21, %f20;
	mul.rn.f32 	%f22, %f7, %f21;
	add.rn.f32 	%f23, %f19, %f22;
	mul.f32 	%f24, %f23, %f23;
	mov.f32 	%f25, 0f3C4C6A36;
	mov.f32 	%f26, 0f3B1E94E6;
	fma.rn.f32 	%f27, %f26, %f24, %f25;
	mov.f32 	%f28, 0f3DAAAB1A;
	fma.rn.f32 	%f29, %f27, %f24, %f28;
	mul.f32 	%f30, %f24, %f29;
	fma.rn.f32 	%f31, %f30, %f23, %f22;
	add.f32 	%f32, %f19, %f31;
	mov.f32 	%f33, 0f3F317218;
	fma.rn.f32 	%f47, %f18, %f33, %f32;
	bra.uni 	BB28_6;

BB28_3:
	lg2.approx.f32 	%f47, %f2;

BB28_6:
	cvta.to.global.u32 	%r15, %r2;
	add.s32 	%r17, %r15, %r9;
	st.global.f32 	[%r17], %f47;

BB28_7:
	ret;
}

	// .globl	math_log2f
.visible .entry math_log2f(
	.param .u32 math_log2f_param_0,
	.param .u32 math_log2f_param_1,
	.param .u32 math_log2f_param_2
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<34>;
	.reg .s32 	%r<18>;


	ld.param.u32 	%r4, [math_log2f_param_0];
	ld.param.u32 	%r2, [math_log2f_param_1];
	ld.param.u32 	%r3, [math_log2f_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB29_5;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	setp.gt.f32	%p2, %f1, 0f00000000;
	setp.lt.f32	%p3, %f1, 0f7F800000;
	and.pred  	%p4, %p2, %p3;
	@%p4 bra 	BB29_3;
	bra.uni 	BB29_2;

BB29_3:
	setp.lt.f32	%p5, %f1, 0f00800000;
	mul.f32 	%f7, %f1, 0f4B800000;
	selp.f32	%f8, %f7, %f1, %p5;
	selp.f32	%f9, 0fC3170000, 0fC2FE0000, %p5;
	mov.b32 	 %r11, %f8;
	and.b32  	%r12, %r11, 8388607;
	or.b32  	%r13, %r12, 1065353216;
	mov.b32 	 %f10, %r13;
	shr.u32 	%r14, %r11, 23;
	cvt.rn.f32.u32	%f11, %r14;
	add.f32 	%f12, %f9, %f11;
	setp.gt.f32	%p6, %f10, 0f3FAE147B;
	mul.f32 	%f13, %f10, 0f3F000000;
	add.f32 	%f14, %f12, 0f3F800000;
	selp.f32	%f15, %f13, %f10, %p6;
	selp.f32	%f16, %f14, %f12, %p6;
	add.f32 	%f6, %f15, 0f3F800000;
	add.f32 	%f17, %f15, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f5,%f6;
	// inline asm
	mul.f32 	%f18, %f17, %f17;
	neg.f32 	%f19, %f18;
	mul.rn.f32 	%f20, %f5, %f19;
	add.rn.f32 	%f21, %f17, %f20;
	mul.f32 	%f22, %f21, %f21;
	mov.f32 	%f23, 0f3C4C6A36;
	mov.f32 	%f24, 0f3B1E94E6;
	fma.rn.f32 	%f25, %f24, %f22, %f23;
	mov.f32 	%f26, 0f3DAAAB1A;
	fma.rn.f32 	%f27, %f25, %f22, %f26;
	mul.f32 	%f28, %f22, %f27;
	fma.rn.f32 	%f29, %f28, %f21, %f20;
	add.f32 	%f30, %f17, %f29;
	mov.f32 	%f31, 0f3F317218;
	fma.rn.f32 	%f33, %f16, %f31, %f30;
	bra.uni 	BB29_4;

BB29_2:
	lg2.approx.f32 	%f33, %f1;

BB29_4:
	cvta.to.global.u32 	%r15, %r2;
	add.s32 	%r17, %r15, %r9;
	mul.f32 	%f32, %f33, 0f3FB8AA3B;
	st.global.f32 	[%r17], %f32;

BB29_5:
	ret;
}

	// .globl	math_logbf
.visible .entry math_logbf(
	.param .u32 math_logbf_param_0,
	.param .u32 math_logbf_param_1,
	.param .u32 math_logbf_param_2
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<10>;
	.reg .s32 	%r<20>;


	ld.param.u32 	%r5, [math_logbf_param_0];
	ld.param.u32 	%r3, [math_logbf_param_1];
	ld.param.u32 	%r4, [math_logbf_param_2];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r7, %r6, %r8;
	setp.ge.u32	%p1, %r1, %r5;
	@%p1 bra 	BB30_5;

	cvta.to.global.u32 	%r9, %r4;
	shl.b32 	%r10, %r1, 2;
	add.s32 	%r11, %r9, %r10;
	ld.global.f32 	%f1, [%r11];
	abs.f32 	%f5, %f1;
	mov.b32 	 %r2, %f5;
	setp.lt.u32	%p2, %r2, 8388608;
	@%p2 bra 	BB30_3;
	bra.uni 	BB30_2;

BB30_3:
	clz.b32 	%r14, %r2;
	mov.u32 	%r15, -118;
	sub.s32 	%r16, %r15, %r14;
	cvt.rn.f32.s32	%f8, %r16;
	setp.eq.f32	%p4, %f1, 0f00000000;
	selp.f32	%f9, 0fFF800000, %f8, %p4;
	bra.uni 	BB30_4;

BB30_2:
	shr.u32 	%r12, %r2, 23;
	add.s32 	%r13, %r12, -127;
	cvt.rn.f32.s32	%f6, %r13;
	mul.f32 	%f7, %f1, %f1;
	setp.gt.u32	%p3, %r2, 2139095039;
	selp.f32	%f9, %f7, %f6, %p3;

BB30_4:
	cvta.to.global.u32 	%r17, %r3;
	add.s32 	%r19, %r17, %r10;
	st.global.f32 	[%r19], %f9;

BB30_5:
	ret;
}

	// .globl	math_logf
.visible .entry math_logf(
	.param .u32 math_logf_param_0,
	.param .u32 math_logf_param_1,
	.param .u32 math_logf_param_2
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<33>;
	.reg .s32 	%r<18>;


	ld.param.u32 	%r4, [math_logf_param_0];
	ld.param.u32 	%r2, [math_logf_param_1];
	ld.param.u32 	%r3, [math_logf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB31_5;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	setp.gt.f32	%p2, %f1, 0f00000000;
	setp.lt.f32	%p3, %f1, 0f7F800000;
	and.pred  	%p4, %p2, %p3;
	@%p4 bra 	BB31_3;
	bra.uni 	BB31_2;

BB31_3:
	setp.lt.f32	%p5, %f1, 0f00800000;
	mul.f32 	%f7, %f1, 0f4B800000;
	selp.f32	%f8, %f7, %f1, %p5;
	selp.f32	%f9, 0fC3170000, 0fC2FE0000, %p5;
	mov.b32 	 %r11, %f8;
	and.b32  	%r12, %r11, 8388607;
	or.b32  	%r13, %r12, 1065353216;
	mov.b32 	 %f10, %r13;
	shr.u32 	%r14, %r11, 23;
	cvt.rn.f32.u32	%f11, %r14;
	add.f32 	%f12, %f9, %f11;
	setp.gt.f32	%p6, %f10, 0f3FAE147B;
	mul.f32 	%f13, %f10, 0f3F000000;
	add.f32 	%f14, %f12, 0f3F800000;
	selp.f32	%f15, %f13, %f10, %p6;
	selp.f32	%f16, %f14, %f12, %p6;
	add.f32 	%f6, %f15, 0f3F800000;
	add.f32 	%f17, %f15, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f5,%f6;
	// inline asm
	mul.f32 	%f18, %f17, %f17;
	neg.f32 	%f19, %f18;
	mul.rn.f32 	%f20, %f5, %f19;
	add.rn.f32 	%f21, %f17, %f20;
	mul.f32 	%f22, %f21, %f21;
	mov.f32 	%f23, 0f3C4C6A36;
	mov.f32 	%f24, 0f3B1E94E6;
	fma.rn.f32 	%f25, %f24, %f22, %f23;
	mov.f32 	%f26, 0f3DAAAB1A;
	fma.rn.f32 	%f27, %f25, %f22, %f26;
	mul.f32 	%f28, %f22, %f27;
	fma.rn.f32 	%f29, %f28, %f21, %f20;
	add.f32 	%f30, %f17, %f29;
	mov.f32 	%f31, 0f3F317218;
	fma.rn.f32 	%f32, %f16, %f31, %f30;
	bra.uni 	BB31_4;

BB31_2:
	lg2.approx.f32 	%f32, %f1;

BB31_4:
	cvta.to.global.u32 	%r15, %r2;
	add.s32 	%r17, %r15, %r9;
	st.global.f32 	[%r17], %f32;

BB31_5:
	ret;
}

	// .globl	math_nearbyintf
.visible .entry math_nearbyintf(
	.param .u32 math_nearbyintf_param_0,
	.param .u32 math_nearbyintf_param_1,
	.param .u32 math_nearbyintf_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .s32 	%r<13>;


	ld.param.u32 	%r4, [math_nearbyintf_param_0];
	ld.param.u32 	%r2, [math_nearbyintf_param_1];
	ld.param.u32 	%r3, [math_nearbyintf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB32_2;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	cvt.rni.f32.f32	%f2, %f1;
	cvta.to.global.u32 	%r11, %r2;
	add.s32 	%r12, %r11, %r9;
	st.global.f32 	[%r12], %f2;

BB32_2:
	ret;
}

	// .globl	math_normcdff
.visible .entry math_normcdff(
	.param .u32 math_normcdff_param_0,
	.param .u32 math_normcdff_param_1,
	.param .u32 math_normcdff_param_2
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<81>;
	.reg .s32 	%r<17>;


	ld.param.u32 	%r4, [math_normcdff_param_0];
	ld.param.u32 	%r2, [math_normcdff_param_1];
	ld.param.u32 	%r3, [math_normcdff_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB33_4;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f13, [%r10];
	abs.f32 	%f14, %f13;
	setp.gt.f32	%p2, %f14, 0f41680000;
	mov.b32 	 %r11, %f13;
	and.b32  	%r12, %r11, -2147483648;
	or.b32  	%r13, %r12, 1097334784;
	mov.b32 	 %f15, %r13;
	selp.f32	%f16, %f15, %f13, %p2;
	mov.f32 	%f17, 0fBF3504F3;
	mul.rn.f32 	%f1, %f16, %f17;
	neg.f32 	%f18, %f1;
	fma.rn.f32 	%f19, %f16, %f17, %f18;
	mov.f32 	%f20, 0fB24FE77A;
	fma.rn.f32 	%f2, %f16, %f20, %f19;
	add.rn.f32 	%f3, %f1, %f2;
	abs.f32 	%f21, %f3;
	add.f32 	%f8, %f21, 0f40800000;
	// inline asm
	rcp.approx.ftz.f32 %f7,%f8;
	// inline asm
	add.f32 	%f22, %f21, 0fC0800000;
	mul.rn.f32 	%f23, %f22, %f7;
	add.f32 	%f24, %f23, 0f3F800000;
	mov.f32 	%f25, 0fC0800000;
	fma.rn.f32 	%f26, %f25, %f24, %f21;
	neg.f32 	%f27, %f23;
	fma.rn.f32 	%f28, %f27, %f21, %f26;
	fma.rn.f32 	%f29, %f7, %f28, %f23;
	mov.f32 	%f30, 0f3BE6E05B;
	mov.f32 	%f31, 0f3A69A091;
	fma.rn.f32 	%f32, %f31, %f29, %f30;
	mov.f32 	%f33, 0fBC81FB4B;
	fma.rn.f32 	%f34, %f32, %f29, %f33;
	mov.f32 	%f35, 0f3D15373B;
	fma.rn.f32 	%f36, %f34, %f29, %f35;
	mov.f32 	%f37, 0fBD887C5A;
	fma.rn.f32 	%f38, %f36, %f29, %f37;
	mov.f32 	%f39, 0f3DC021D5;
	fma.rn.f32 	%f40, %f38, %f29, %f39;
	mov.f32 	%f41, 0fBDCED424;
	fma.rn.f32 	%f42, %f40, %f29, %f41;
	mov.f32 	%f43, 0f3D8B74DE;
	fma.rn.f32 	%f44, %f42, %f29, %f43;
	mov.f32 	%f45, 0f3C7BF170;
	fma.rn.f32 	%f46, %f44, %f29, %f45;
	mov.f32 	%f47, 0fBE0EF8D4;
	fma.rn.f32 	%f48, %f46, %f29, %f47;
	mov.f32 	%f49, 0f3F9DD2C9;
	fma.rn.f32 	%f50, %f48, %f29, %f49;
	mov.f32 	%f51, 0f3F800000;
	mov.f32 	%f52, 0f40000000;
	fma.rn.f32 	%f10, %f52, %f21, %f51;
	// inline asm
	rcp.approx.ftz.f32 %f9,%f10;
	// inline asm
	mul.rn.f32 	%f53, %f50, %f9;
	mul.f32 	%f54, %f53, 0fC0000000;
	fma.rn.f32 	%f55, %f21, %f54, %f50;
	sub.f32 	%f56, %f55, %f53;
	fma.rn.f32 	%f57, %f56, %f9, %f53;
	mul.f32 	%f58, %f21, %f21;
	neg.f32 	%f59, %f58;
	mul.f32 	%f60, %f58, 0fBFB8AA3B;
	cvt.rzi.f32.f32	%f61, %f60;
	mov.f32 	%f62, 0fBF317200;
	fma.rn.f32 	%f63, %f61, %f62, %f59;
	mov.f32 	%f64, 0fB5BFBE8E;
	fma.rn.f32 	%f65, %f61, %f64, %f63;
	mul.f32 	%f12, %f65, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f11,%f12;
	// inline asm
	add.f32 	%f66, %f61, 0f00000000;
	ex2.approx.f32 	%f67, %f66;
	mul.f32 	%f68, %f11, %f67;
	neg.f32 	%f69, %f21;
	fma.rn.f32 	%f70, %f69, %f21, %f58;
	fma.rn.f32 	%f71, %f68, %f70, %f68;
	mul.f32 	%f72, %f57, %f71;
	setp.gt.f32	%p3, %f21, 0f4120E148;
	selp.f32	%f73, 0f00000000, %f72, %p3;
	setp.lt.f32	%p4, %f3, 0f00000000;
	sub.f32 	%f74, %f52, %f73;
	selp.f32	%f80, %f74, %f73, %p4;
	setp.geu.f32	%p5, %f16, 0fBF800000;
	@%p5 bra 	BB33_3;

	sub.f32 	%f75, %f1, %f3;
	add.rn.f32 	%f76, %f75, %f2;
	mul.f32 	%f77, %f3, 0fC0000000;
	mul.f32 	%f78, %f77, %f80;
	fma.rn.f32 	%f80, %f78, %f76, %f80;

BB33_3:
	cvta.to.global.u32 	%r14, %r2;
	add.s32 	%r16, %r14, %r9;
	mul.f32 	%f79, %f80, 0f3F000000;
	st.global.f32 	[%r16], %f79;

BB33_4:
	ret;
}

	// .globl	math_normcdfinvf
.visible .entry math_normcdfinvf(
	.param .u32 math_normcdfinvf_param_0,
	.param .u32 math_normcdfinvf_param_1,
	.param .u32 math_normcdfinvf_param_2
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<60>;
	.reg .s32 	%r<14>;


	ld.param.u32 	%r4, [math_normcdfinvf_param_0];
	ld.param.u32 	%r2, [math_normcdfinvf_param_1];
	ld.param.u32 	%r3, [math_normcdfinvf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB34_5;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f7, [%r10];
	add.f32 	%f1, %f7, %f7;
	neg.f32 	%f2, %f1;
	mov.f32 	%f8, 0f40000000;
	add.rn.f32 	%f3, %f8, %f2;
	setp.le.f32	%p2, %f1, 0f3FFF9097;
	setp.ge.f32	%p3, %f1, 0f3B5ED289;
	and.pred  	%p4, %p3, %p2;
	@%p4 bra 	BB34_3;
	bra.uni 	BB34_2;

BB34_3:
	mul.rn.f32 	%f35, %f3, %f1;
	// inline asm
	lg2.approx.ftz.f32 %f34,%f35;
	// inline asm
	neg.f32 	%f36, %f34;
	mov.f32 	%f37, 0f3221F645;
	mov.f32 	%f38, 0fAF8A6370;
	fma.rn.f32 	%f39, %f38, %f36, %f37;
	mov.f32 	%f40, 0fB4016FDA;
	fma.rn.f32 	%f41, %f39, %f36, %f40;
	mov.f32 	%f42, 0f3468F846;
	fma.rn.f32 	%f43, %f41, %f36, %f42;
	mov.f32 	%f44, 0f370742AA;
	fma.rn.f32 	%f45, %f43, %f36, %f44;
	mov.f32 	%f46, 0fB804DB4D;
	fma.rn.f32 	%f47, %f45, %f36, %f46;
	mov.f32 	%f48, 0fBA4AFEA1;
	fma.rn.f32 	%f49, %f47, %f36, %f48;
	mov.f32 	%f50, 0f3BB5C027;
	fma.rn.f32 	%f51, %f49, %f36, %f50;
	mov.f32 	%f52, 0f3E24AE0F;
	fma.rn.f32 	%f53, %f51, %f36, %f52;
	mov.f32 	%f54, 0f3F62DFC4;
	fma.rn.f32 	%f55, %f53, %f36, %f54;
	fma.rn.f32 	%f59, %f55, %f2, %f55;
	bra.uni 	BB34_4;

BB34_2:
	setp.gt.f32	%p5, %f1, 0f3F800000;
	selp.f32	%f13, %f3, %f1, %p5;
	lg2.approx.f32 	%f14, %f13;
	neg.f32 	%f10, %f14;
	// inline asm
	rsqrt.approx.ftz.f32 %f9,%f10;
	// inline asm
	mov.f32 	%f15, 0f42FEF829;
	mov.f32 	%f16, 0fC27C73F1;
	fma.rn.f32 	%f17, %f16, %f9, %f15;
	mov.f32 	%f18, 0fC2E4361C;
	fma.rn.f32 	%f19, %f17, %f9, %f18;
	mov.f32 	%f20, 0f42714D9B;
	fma.rn.f32 	%f21, %f19, %f9, %f20;
	mov.f32 	%f22, 0fC1AE51B3;
	fma.rn.f32 	%f23, %f21, %f9, %f22;
	mov.f32 	%f24, 0f40CEF504;
	fma.rn.f32 	%f25, %f23, %f9, %f24;
	mov.f32 	%f26, 0fBFEA9E05;
	fma.rn.f32 	%f27, %f25, %f9, %f26;
	mov.f32 	%f28, 0fBCF871F4;
	fma.rn.f32 	%f29, %f27, %f9, %f28;
	mov.f32 	%f30, 0f3F553775;
	fma.rn.f32 	%f31, %f29, %f9, %f30;
	// inline asm
	rcp.approx.ftz.f32 %f11,%f9;
	// inline asm
	mul.rn.f32 	%f32, %f31, %f11;
	neg.f32 	%f33, %f32;
	selp.f32	%f59, %f33, %f32, %p5;

BB34_4:
	cvta.to.global.u32 	%r11, %r2;
	mul.f32 	%f56, %f59, 0fBFB504F3;
	mov.f32 	%f57, 0f00000000;
	add.rn.f32 	%f58, %f56, %f57;
	add.s32 	%r13, %r11, %r9;
	st.global.f32 	[%r13], %f58;

BB34_5:
	ret;
}

	// .globl	math_rcbrtf
.visible .entry math_rcbrtf(
	.param .u32 math_rcbrtf_param_0,
	.param .u32 math_rcbrtf_param_1,
	.param .u32 math_rcbrtf_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<21>;
	.reg .s32 	%r<15>;


	ld.param.u32 	%r4, [math_rcbrtf_param_0];
	ld.param.u32 	%r2, [math_rcbrtf_param_1];
	ld.param.u32 	%r3, [math_rcbrtf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB35_4;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	abs.f32 	%f7, %f1;
	lg2.approx.f32 	%f8, %f7;
	mul.f32 	%f6, %f8, 0fBEAAAAAB;
	// inline asm
	ex2.approx.ftz.f32 %f5,%f6;
	// inline asm
	mul.f32 	%f9, %f7, %f5;
	neg.f32 	%f10, %f9;
	mul.f32 	%f11, %f5, %f5;
	mov.f32 	%f12, 0f3F800000;
	fma.rn.f32 	%f13, %f11, %f10, %f12;
	mul.f32 	%f14, %f5, 0f3EAAAAAB;
	fma.rn.f32 	%f15, %f13, %f14, %f5;
	mov.b32 	 %r11, %f1;
	setp.lt.s32	%p2, %r11, 0;
	neg.f32 	%f16, %f15;
	selp.f32	%f20, %f16, %f15, %p2;
	add.f32 	%f17, %f1, %f1;
	setp.neu.f32	%p3, %f17, %f1;
	@%p3 bra 	BB35_3;

	// inline asm
	rcp.approx.ftz.f32 %f18,%f1;
	// inline asm
	mov.f32 	%f20, %f18;

BB35_3:
	cvta.to.global.u32 	%r12, %r2;
	add.s32 	%r14, %r12, %r9;
	st.global.f32 	[%r14], %f20;

BB35_4:
	ret;
}

	// .globl	math_rintf
.visible .entry math_rintf(
	.param .u32 math_rintf_param_0,
	.param .u32 math_rintf_param_1,
	.param .u32 math_rintf_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .s32 	%r<13>;


	ld.param.u32 	%r4, [math_rintf_param_0];
	ld.param.u32 	%r2, [math_rintf_param_1];
	ld.param.u32 	%r3, [math_rintf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB36_2;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	cvt.rni.f32.f32	%f2, %f1;
	cvta.to.global.u32 	%r11, %r2;
	add.s32 	%r12, %r11, %r9;
	st.global.f32 	[%r12], %f2;

BB36_2:
	ret;
}

	// .globl	math_roundf
.visible .entry math_roundf(
	.param .u32 math_roundf_param_0,
	.param .u32 math_roundf_param_1,
	.param .u32 math_roundf_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<10>;
	.reg .s32 	%r<17>;


	ld.param.u32 	%r4, [math_roundf_param_0];
	ld.param.u32 	%r2, [math_roundf_param_1];
	ld.param.u32 	%r3, [math_roundf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB37_4;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	abs.f32 	%f5, %f1;
	mov.b32 	 %r11, %f1;
	and.b32  	%r12, %r11, -2147483648;
	or.b32  	%r13, %r12, 1056964608;
	mov.b32 	 %f6, %r13;
	add.f32 	%f7, %f1, %f6;
	cvt.rzi.f32.f32	%f8, %f7;
	setp.gt.f32	%p2, %f5, 0f4B000000;
	selp.f32	%f9, %f1, %f8, %p2;
	setp.geu.f32	%p3, %f5, 0f3F000000;
	@%p3 bra 	BB37_3;

	cvt.rzi.f32.f32	%f9, %f1;

BB37_3:
	cvta.to.global.u32 	%r14, %r2;
	add.s32 	%r16, %r14, %r9;
	st.global.f32 	[%r16], %f9;

BB37_4:
	ret;
}

	// .globl	math_rsqrtf
.visible .entry math_rsqrtf(
	.param .u32 math_rsqrtf_param_0,
	.param .u32 math_rsqrtf_param_1,
	.param .u32 math_rsqrtf_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .s32 	%r<13>;


	ld.param.u32 	%r4, [math_rsqrtf_param_0];
	ld.param.u32 	%r2, [math_rsqrtf_param_1];
	ld.param.u32 	%r3, [math_rsqrtf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB38_2;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	rsqrt.approx.f32 	%f2, %f1;
	cvta.to.global.u32 	%r11, %r2;
	add.s32 	%r12, %r11, %r9;
	st.global.f32 	[%r12], %f2;

BB38_2:
	ret;
}

	// .globl	math_sinf
.visible .entry math_sinf(
	.param .u32 math_sinf_param_0,
	.param .u32 math_sinf_param_1,
	.param .u32 math_sinf_param_2
)
{
	.local .align 4 .b8 	__local_depot39[28];
	.reg .b32 	%SP;
	.reg .b32 	%SPL;
	.reg .pred 	%p<15>;
	.reg .f32 	%f<48>;
	.reg .s32 	%r<120>;


	mov.u32 	%r119, __local_depot39;
	cvta.local.u32 	%SP, %r119;
	ld.param.u32 	%r47, [math_sinf_param_0];
	ld.param.u32 	%r45, [math_sinf_param_1];
	ld.param.u32 	%r46, [math_sinf_param_2];
	add.u32 	%r48, %SP, 0;
	cvta.to.local.u32 	%r1, %r48;
	mov.u32 	%r49, %ntid.x;
	mov.u32 	%r50, %ctaid.x;
	mov.u32 	%r51, %tid.x;
	mad.lo.s32 	%r2, %r49, %r50, %r51;
	setp.ge.u32	%p1, %r2, %r47;
	@%p1 bra 	BB39_24;

	cvta.to.global.u32 	%r52, %r46;
	shl.b32 	%r53, %r2, 2;
	add.s32 	%r54, %r52, %r53;
	ld.global.f32 	%f43, [%r54];
	abs.f32 	%f19, %f43;
	setp.neu.f32	%p2, %f19, 0f7F800000;
	@%p2 bra 	BB39_3;

	mov.f32 	%f20, 0f00000000;
	mul.rn.f32 	%f43, %f43, %f20;

BB39_3:
	mul.f32 	%f21, %f43, 0f3F22F983;
	cvt.rni.s32.f32	%r118, %f21;
	cvt.rn.f32.s32	%f22, %r118;
	neg.f32 	%f23, %f22;
	mov.f32 	%f24, 0f3FC90FDA;
	fma.rn.f32 	%f25, %f23, %f24, %f43;
	mov.f32 	%f26, 0f33A22168;
	fma.rn.f32 	%f27, %f23, %f26, %f25;
	mov.f32 	%f28, 0f27C234C5;
	fma.rn.f32 	%f44, %f23, %f28, %f27;
	abs.f32 	%f29, %f43;
	setp.leu.f32	%p3, %f29, 0f47CE4780;
	@%p3 bra 	BB39_13;

	mov.b32 	 %r5, %f43;
	shr.u32 	%r6, %r5, 23;
	bfe.u32 	%r58, %r5, 23, 8;
	add.s32 	%r59, %r58, -128;
	shl.b32 	%r60, %r5, 8;
	or.b32  	%r7, %r60, -2147483648;
	shr.u32 	%r8, %r59, 5;
	mov.u32 	%r110, 0;
	mov.u32 	%r108, 6;
	mov.u32 	%r107, __cudart_i2opi_f;
	mov.u32 	%r109, %r1;

BB39_5:
	.pragma "nounroll";
	mov.u32 	%r11, %r109;
	ld.const.u32 	%r63, [%r107];
	// inline asm
	{
	mad.lo.cc.u32   %r61, %r63, %r7, %r110;
	madc.hi.u32     %r62, %r63, %r7,  0;
	}
	// inline asm
	mov.u32 	%r110, %r62;
	st.local.u32 	[%r11], %r61;
	add.s32 	%r14, %r11, 4;
	add.s32 	%r107, %r107, 4;
	add.s32 	%r108, %r108, -1;
	setp.ne.s32	%p4, %r108, 0;
	mov.u32 	%r109, %r14;
	@%p4 bra 	BB39_5;

	and.b32  	%r17, %r5, -2147483648;
	mov.u32 	%r66, 4;
	sub.s32 	%r67, %r66, %r8;
	shl.b32 	%r68, %r67, 2;
	add.s32 	%r69, %r68, %r1;
	st.local.u32 	[%r1+24], %r62;
	ld.local.u32 	%r111, [%r69+8];
	ld.local.u32 	%r112, [%r69+4];
	and.b32  	%r21, %r6, 31;
	setp.eq.s32	%p5, %r21, 0;
	@%p5 bra 	BB39_8;

	mov.u32 	%r70, 32;
	sub.s32 	%r71, %r70, %r21;
	shr.u32 	%r72, %r112, %r71;
	shl.b32 	%r73, %r111, %r21;
	add.s32 	%r111, %r72, %r73;
	add.s32 	%r106, %r69, 8;
	ld.local.u32 	%r74, [%r106+-8];
	shr.u32 	%r75, %r74, %r71;
	shl.b32 	%r76, %r112, %r21;
	add.s32 	%r112, %r75, %r76;

BB39_8:
	shr.u32 	%r77, %r112, 30;
	shl.b32 	%r78, %r111, 2;
	add.s32 	%r113, %r77, %r78;
	shl.b32 	%r27, %r112, 2;
	shr.u32 	%r79, %r113, 31;
	shr.u32 	%r80, %r111, 30;
	add.s32 	%r28, %r79, %r80;
	setp.eq.s32	%p6, %r79, 0;
	mov.u32 	%r114, %r17;
	mov.u32 	%r115, %r27;
	@%p6 bra 	BB39_10;

	not.b32 	%r81, %r113;
	neg.s32 	%r29, %r27;
	setp.eq.s32	%p7, %r27, 0;
	selp.u32	%r82, 1, 0, %p7;
	add.s32 	%r113, %r82, %r81;
	xor.b32  	%r31, %r17, -2147483648;
	mov.u32 	%r114, %r31;
	mov.u32 	%r115, %r29;

BB39_10:
	mov.u32 	%r33, %r114;
	neg.s32 	%r83, %r28;
	setp.eq.s32	%p8, %r17, 0;
	selp.b32	%r118, %r28, %r83, %p8;
	clz.b32 	%r117, %r113;
	setp.eq.s32	%p9, %r117, 0;
	shl.b32 	%r84, %r113, %r117;
	mov.u32 	%r85, 32;
	sub.s32 	%r86, %r85, %r117;
	shr.u32 	%r87, %r115, %r86;
	add.s32 	%r88, %r87, %r84;
	selp.b32	%r37, %r113, %r88, %p9;
	mov.u32 	%r89, -921707870;
	mul.hi.u32 	%r116, %r37, %r89;
	setp.lt.s32	%p10, %r116, 1;
	@%p10 bra 	BB39_12;

	mul.lo.s32 	%r90, %r37, -921707870;
	shr.u32 	%r91, %r90, 31;
	shl.b32 	%r92, %r116, 1;
	add.s32 	%r116, %r91, %r92;
	add.s32 	%r117, %r117, 1;

BB39_12:
	mov.u32 	%r93, 126;
	sub.s32 	%r94, %r93, %r117;
	shl.b32 	%r95, %r94, 23;
	add.s32 	%r96, %r116, 1;
	shr.u32 	%r97, %r96, 7;
	add.s32 	%r98, %r97, 1;
	shr.u32 	%r99, %r98, 1;
	add.s32 	%r100, %r99, %r95;
	or.b32  	%r101, %r100, %r33;
	mov.b32 	 %f44, %r101;

BB39_13:
	mul.rn.f32 	%f7, %f44, %f44;
	and.b32  	%r44, %r118, 1;
	setp.eq.s32	%p11, %r44, 0;
	@%p11 bra 	BB39_15;

	mov.f32 	%f30, 0fBAB6061A;
	mov.f32 	%f31, 0f37CCF5CE;
	fma.rn.f32 	%f45, %f31, %f7, %f30;
	bra.uni 	BB39_16;

BB39_15:
	mov.f32 	%f32, 0f3C08839E;
	mov.f32 	%f33, 0fB94CA1F9;
	fma.rn.f32 	%f45, %f33, %f7, %f32;

BB39_16:
	@%p11 bra 	BB39_18;

	mov.f32 	%f34, 0f3D2AAAA5;
	fma.rn.f32 	%f35, %f45, %f7, %f34;
	mov.f32 	%f36, 0fBF000000;
	fma.rn.f32 	%f46, %f35, %f7, %f36;
	bra.uni 	BB39_19;

BB39_18:
	mov.f32 	%f37, 0fBE2AAAA3;
	fma.rn.f32 	%f38, %f45, %f7, %f37;
	mov.f32 	%f39, 0f00000000;
	fma.rn.f32 	%f46, %f38, %f7, %f39;

BB39_19:
	fma.rn.f32 	%f47, %f46, %f44, %f44;
	@%p11 bra 	BB39_21;

	mov.f32 	%f40, 0f3F800000;
	fma.rn.f32 	%f47, %f46, %f7, %f40;

BB39_21:
	and.b32  	%r102, %r118, 2;
	setp.eq.s32	%p14, %r102, 0;
	@%p14 bra 	BB39_23;

	mov.f32 	%f41, 0f00000000;
	mov.f32 	%f42, 0fBF800000;
	fma.rn.f32 	%f47, %f47, %f42, %f41;

BB39_23:
	cvta.to.global.u32 	%r103, %r45;
	add.s32 	%r105, %r103, %r53;
	st.global.f32 	[%r105], %f47;

BB39_24:
	ret;
}

	// .globl	math_sinhf
.visible .entry math_sinhf(
	.param .u32 math_sinhf_param_0,
	.param .u32 math_sinhf_param_1,
	.param .u32 math_sinhf_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<32>;
	.reg .s32 	%r<19>;


	ld.param.u32 	%r4, [math_sinhf_param_0];
	ld.param.u32 	%r2, [math_sinhf_param_1];
	ld.param.u32 	%r3, [math_sinhf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB40_5;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p2, %f2, 0f3F800000;
	@%p2 bra 	BB40_3;
	bra.uni 	BB40_2;

BB40_3:
	mul.f32 	%f22, %f1, %f1;
	mov.f32 	%f23, 0f394FFF49;
	mov.f32 	%f24, 0f363D0ADA;
	fma.rn.f32 	%f25, %f24, %f22, %f23;
	mov.f32 	%f26, 0f3C08889A;
	fma.rn.f32 	%f27, %f25, %f22, %f26;
	mov.f32 	%f28, 0f3E2AAAAB;
	fma.rn.f32 	%f29, %f27, %f22, %f28;
	mul.f32 	%f30, %f22, %f29;
	fma.rn.f32 	%f31, %f30, %f1, %f1;
	bra.uni 	BB40_4;

BB40_2:
	mul.f32 	%f8, %f2, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f9, %f8;
	mov.f32 	%f10, 0fBF317200;
	fma.rn.f32 	%f11, %f9, %f10, %f2;
	mov.f32 	%f12, 0fB5BFBE8E;
	fma.rn.f32 	%f13, %f9, %f12, %f11;
	mul.f32 	%f7, %f13, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f6,%f7;
	// inline asm
	add.f32 	%f14, %f9, 0fC0000000;
	ex2.approx.f32 	%f15, %f14;
	mul.f32 	%f16, %f6, %f15;
	mov.f32 	%f17, 0f3E000000;
	div.approx.f32 	%f18, %f17, %f16;
	neg.f32 	%f19, %f18;
	mov.f32 	%f20, 0f40000000;
	fma.rn.f32 	%f21, %f20, %f16, %f19;
	mov.b32 	 %r11, %f21;
	setp.ltu.f32	%p3, %f2, 0f42B40000;
	selp.b32	%r12, %r11, 2139095040, %p3;
	mov.b32 	 %r13, %f1;
	and.b32  	%r14, %r13, -2147483648;
	or.b32  	%r15, %r12, %r14;
	mov.b32 	 %f31, %r15;

BB40_4:
	cvta.to.global.u32 	%r16, %r2;
	add.s32 	%r18, %r16, %r9;
	st.global.f32 	[%r18], %f31;

BB40_5:
	ret;
}

	// .globl	math_sinpif
.visible .entry math_sinpif(
	.param .u32 math_sinpif_param_0,
	.param .u32 math_sinpif_param_1,
	.param .u32 math_sinpif_param_2
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<42>;
	.reg .s32 	%r<17>;


	ld.param.u32 	%r6, [math_sinpif_param_0];
	ld.param.u32 	%r4, [math_sinpif_param_1];
	ld.param.u32 	%r5, [math_sinpif_param_2];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	setp.ge.u32	%p1, %r1, %r6;
	@%p1 bra 	BB41_14;

	cvta.to.global.u32 	%r10, %r5;
	shl.b32 	%r11, %r1, 2;
	add.s32 	%r12, %r10, %r11;
	ld.global.f32 	%f1, [%r12];
	add.f32 	%f17, %f1, %f1;
	cvt.rni.f32.f32	%f18, %f17;
	cvt.rzi.s32.f32	%r2, %f18;
	neg.f32 	%f19, %f18;
	mov.f32 	%f20, 0f3F000000;
	fma.rn.f32 	%f21, %f19, %f20, %f1;
	mul.f32 	%f22, %f21, 0f34222169;
	mov.f32 	%f23, 0f40490FDA;
	fma.rn.f32 	%f2, %f21, %f23, %f22;
	mul.rn.f32 	%f3, %f2, %f2;
	and.b32  	%r3, %r2, 1;
	setp.eq.s32	%p2, %r3, 0;
	@%p2 bra 	BB41_3;

	mov.f32 	%f24, 0fBAB6061A;
	mov.f32 	%f25, 0f37CCF5CE;
	fma.rn.f32 	%f39, %f25, %f3, %f24;
	bra.uni 	BB41_4;

BB41_3:
	mov.f32 	%f26, 0f3C08839E;
	mov.f32 	%f27, 0fB94CA1F9;
	fma.rn.f32 	%f39, %f27, %f3, %f26;

BB41_4:
	@%p2 bra 	BB41_6;

	mov.f32 	%f28, 0f3D2AAAA5;
	fma.rn.f32 	%f29, %f39, %f3, %f28;
	mov.f32 	%f30, 0fBF000000;
	fma.rn.f32 	%f40, %f29, %f3, %f30;
	bra.uni 	BB41_7;

BB41_6:
	mov.f32 	%f31, 0fBE2AAAA3;
	fma.rn.f32 	%f32, %f39, %f3, %f31;
	mov.f32 	%f33, 0f00000000;
	fma.rn.f32 	%f40, %f32, %f3, %f33;

BB41_7:
	fma.rn.f32 	%f41, %f40, %f2, %f2;
	@%p2 bra 	BB41_9;

	mov.f32 	%f34, 0f3F800000;
	fma.rn.f32 	%f41, %f40, %f3, %f34;

BB41_9:
	and.b32  	%r13, %r2, 2;
	setp.eq.s32	%p5, %r13, 0;
	@%p5 bra 	BB41_11;

	mov.f32 	%f35, 0f00000000;
	mov.f32 	%f36, 0fBF800000;
	fma.rn.f32 	%f41, %f41, %f36, %f35;

BB41_11:
	cvt.rzi.f32.f32	%f37, %f1;
	setp.neu.f32	%p6, %f37, %f1;
	@%p6 bra 	BB41_13;

	mov.f32 	%f38, 0f00000000;
	mul.rn.f32 	%f41, %f1, %f38;

BB41_13:
	cvta.to.global.u32 	%r14, %r4;
	add.s32 	%r16, %r14, %r11;
	st.global.f32 	[%r16], %f41;

BB41_14:
	ret;
}

	// .globl	math_sqrtf
.visible .entry math_sqrtf(
	.param .u32 math_sqrtf_param_0,
	.param .u32 math_sqrtf_param_1,
	.param .u32 math_sqrtf_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .s32 	%r<13>;


	ld.param.u32 	%r4, [math_sqrtf_param_0];
	ld.param.u32 	%r2, [math_sqrtf_param_1];
	ld.param.u32 	%r3, [math_sqrtf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB42_2;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	sqrt.rn.f32 	%f2, %f1;
	cvta.to.global.u32 	%r11, %r2;
	add.s32 	%r12, %r11, %r9;
	st.global.f32 	[%r12], %f2;

BB42_2:
	ret;
}

	// .globl	math_tanf
.visible .entry math_tanf(
	.param .u32 math_tanf_param_0,
	.param .u32 math_tanf_param_1,
	.param .u32 math_tanf_param_2
)
{
	.local .align 4 .b8 	__local_depot43[28];
	.reg .b32 	%SP;
	.reg .b32 	%SPL;
	.reg .pred 	%p<12>;
	.reg .f32 	%f<33>;
	.reg .s32 	%r<119>;


	mov.u32 	%r118, __local_depot43;
	cvta.local.u32 	%SP, %r118;
	ld.param.u32 	%r46, [math_tanf_param_0];
	ld.param.u32 	%r44, [math_tanf_param_1];
	ld.param.u32 	%r45, [math_tanf_param_2];
	add.u32 	%r47, %SP, 0;
	cvta.to.local.u32 	%r1, %r47;
	mov.u32 	%r48, %ntid.x;
	mov.u32 	%r49, %ctaid.x;
	mov.u32 	%r50, %tid.x;
	mad.lo.s32 	%r2, %r48, %r49, %r50;
	setp.ge.u32	%p1, %r2, %r46;
	@%p1 bra 	BB43_16;

	cvta.to.global.u32 	%r51, %r45;
	shl.b32 	%r52, %r2, 2;
	add.s32 	%r53, %r51, %r52;
	ld.global.f32 	%f30, [%r53];
	abs.f32 	%f10, %f30;
	setp.neu.f32	%p2, %f10, 0f7F800000;
	@%p2 bra 	BB43_3;

	mov.f32 	%f11, 0f00000000;
	mul.rn.f32 	%f30, %f30, %f11;

BB43_3:
	mul.f32 	%f12, %f30, 0f3F22F983;
	cvt.rni.s32.f32	%r117, %f12;
	cvt.rn.f32.s32	%f13, %r117;
	neg.f32 	%f14, %f13;
	mov.f32 	%f15, 0f3FC90FDA;
	fma.rn.f32 	%f16, %f14, %f15, %f30;
	mov.f32 	%f17, 0f33A22168;
	fma.rn.f32 	%f18, %f14, %f17, %f16;
	mov.f32 	%f19, 0f27C234C5;
	fma.rn.f32 	%f31, %f14, %f19, %f18;
	abs.f32 	%f20, %f30;
	setp.leu.f32	%p3, %f20, 0f47CE4780;
	@%p3 bra 	BB43_13;

	mov.b32 	 %r5, %f30;
	shr.u32 	%r6, %r5, 23;
	bfe.u32 	%r57, %r5, 23, 8;
	add.s32 	%r58, %r57, -128;
	shl.b32 	%r59, %r5, 8;
	or.b32  	%r7, %r59, -2147483648;
	shr.u32 	%r8, %r58, 5;
	mov.u32 	%r109, 0;
	mov.u32 	%r107, 6;
	mov.u32 	%r106, __cudart_i2opi_f;
	mov.u32 	%r108, %r1;

BB43_5:
	.pragma "nounroll";
	mov.u32 	%r11, %r108;
	ld.const.u32 	%r62, [%r106];
	// inline asm
	{
	mad.lo.cc.u32   %r60, %r62, %r7, %r109;
	madc.hi.u32     %r61, %r62, %r7,  0;
	}
	// inline asm
	mov.u32 	%r109, %r61;
	st.local.u32 	[%r11], %r60;
	add.s32 	%r14, %r11, 4;
	add.s32 	%r106, %r106, 4;
	add.s32 	%r107, %r107, -1;
	setp.ne.s32	%p4, %r107, 0;
	mov.u32 	%r108, %r14;
	@%p4 bra 	BB43_5;

	and.b32  	%r17, %r5, -2147483648;
	mov.u32 	%r65, 4;
	sub.s32 	%r66, %r65, %r8;
	shl.b32 	%r67, %r66, 2;
	add.s32 	%r68, %r67, %r1;
	st.local.u32 	[%r1+24], %r61;
	ld.local.u32 	%r110, [%r68+8];
	ld.local.u32 	%r111, [%r68+4];
	and.b32  	%r21, %r6, 31;
	setp.eq.s32	%p5, %r21, 0;
	@%p5 bra 	BB43_8;

	mov.u32 	%r69, 32;
	sub.s32 	%r70, %r69, %r21;
	shr.u32 	%r71, %r111, %r70;
	shl.b32 	%r72, %r110, %r21;
	add.s32 	%r110, %r71, %r72;
	add.s32 	%r105, %r68, 8;
	ld.local.u32 	%r73, [%r105+-8];
	shr.u32 	%r74, %r73, %r70;
	shl.b32 	%r75, %r111, %r21;
	add.s32 	%r111, %r74, %r75;

BB43_8:
	shr.u32 	%r76, %r111, 30;
	shl.b32 	%r77, %r110, 2;
	add.s32 	%r112, %r76, %r77;
	shl.b32 	%r27, %r111, 2;
	shr.u32 	%r78, %r112, 31;
	shr.u32 	%r79, %r110, 30;
	add.s32 	%r28, %r78, %r79;
	setp.eq.s32	%p6, %r78, 0;
	mov.u32 	%r113, %r17;
	mov.u32 	%r114, %r27;
	@%p6 bra 	BB43_10;

	not.b32 	%r80, %r112;
	neg.s32 	%r29, %r27;
	setp.eq.s32	%p7, %r27, 0;
	selp.u32	%r81, 1, 0, %p7;
	add.s32 	%r112, %r81, %r80;
	xor.b32  	%r31, %r17, -2147483648;
	mov.u32 	%r113, %r31;
	mov.u32 	%r114, %r29;

BB43_10:
	mov.u32 	%r33, %r113;
	neg.s32 	%r82, %r28;
	setp.eq.s32	%p8, %r17, 0;
	selp.b32	%r117, %r28, %r82, %p8;
	clz.b32 	%r116, %r112;
	setp.eq.s32	%p9, %r116, 0;
	shl.b32 	%r83, %r112, %r116;
	mov.u32 	%r84, 32;
	sub.s32 	%r85, %r84, %r116;
	shr.u32 	%r86, %r114, %r85;
	add.s32 	%r87, %r86, %r83;
	selp.b32	%r37, %r112, %r87, %p9;
	mov.u32 	%r88, -921707870;
	mul.hi.u32 	%r115, %r37, %r88;
	setp.lt.s32	%p10, %r115, 1;
	@%p10 bra 	BB43_12;

	mul.lo.s32 	%r89, %r37, -921707870;
	shr.u32 	%r90, %r89, 31;
	shl.b32 	%r91, %r115, 1;
	add.s32 	%r115, %r90, %r91;
	add.s32 	%r116, %r116, 1;

BB43_12:
	mov.u32 	%r92, 126;
	sub.s32 	%r93, %r92, %r116;
	shl.b32 	%r94, %r93, 23;
	add.s32 	%r95, %r115, 1;
	shr.u32 	%r96, %r95, 7;
	add.s32 	%r97, %r96, 1;
	shr.u32 	%r98, %r97, 1;
	add.s32 	%r99, %r98, %r94;
	or.b32  	%r100, %r99, %r33;
	mov.b32 	 %f31, %r100;

BB43_13:
	mul.f32 	%f21, %f31, %f31;
	mov.f32 	%f22, 0fBF52B7F4;
	mov.f32 	%f23, 0f3B86D46D;
	fma.rn.f32 	%f24, %f23, %f21, %f22;
	add.f32 	%f25, %f21, 0fC01E09D0;
	rcp.rn.f32 	%f26, %f25;
	mul.f32 	%f27, %f24, %f26;
	mul.f32 	%f28, %f21, %f27;
	fma.rn.f32 	%f32, %f28, %f31, %f31;
	and.b32  	%r101, %r117, 1;
	setp.eq.b32	%p11, %r101, 1;
	@!%p11 bra 	BB43_15;
	bra.uni 	BB43_14;

BB43_14:
	mov.f32 	%f29, 0fBF800000;
	div.rn.f32 	%f32, %f29, %f32;

BB43_15:
	cvta.to.global.u32 	%r102, %r44;
	add.s32 	%r104, %r102, %r52;
	st.global.f32 	[%r104], %f32;

BB43_16:
	ret;
}

	// .globl	math_tanhf
.visible .entry math_tanhf(
	.param .u32 math_tanhf_param_0,
	.param .u32 math_tanhf_param_1,
	.param .u32 math_tanhf_param_2
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<33>;
	.reg .s32 	%r<19>;


	ld.param.u32 	%r4, [math_tanhf_param_0];
	ld.param.u32 	%r2, [math_tanhf_param_1];
	ld.param.u32 	%r3, [math_tanhf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB44_5;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p2, %f2, 0f3F0CCCCD;
	@%p2 bra 	BB44_3;
	bra.uni 	BB44_2;

BB44_3:
	mul.f32 	%f21, %f1, %f1;
	mov.f32 	%f22, 0fBD57BE66;
	mov.f32 	%f23, 0f3C86A81B;
	fma.rn.f32 	%f24, %f23, %f21, %f22;
	mov.f32 	%f25, 0f3E08677B;
	fma.rn.f32 	%f26, %f24, %f21, %f25;
	mov.f32 	%f27, 0fBEAAAA29;
	fma.rn.f32 	%f28, %f26, %f21, %f27;
	mul.f32 	%f29, %f21, %f28;
	fma.rn.f32 	%f30, %f29, %f1, %f1;
	add.f32 	%f31, %f1, %f1;
	setp.eq.f32	%p4, %f1, 0f00000000;
	selp.f32	%f32, %f31, %f30, %p4;
	bra.uni 	BB44_4;

BB44_2:
	add.f32 	%f10, %f2, %f2;
	mul.f32 	%f11, %f10, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f12, %f11;
	mov.f32 	%f13, 0fBF317200;
	fma.rn.f32 	%f14, %f12, %f13, %f10;
	mov.f32 	%f15, 0fB5BFBE8E;
	fma.rn.f32 	%f16, %f12, %f15, %f14;
	mul.f32 	%f7, %f16, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f6,%f7;
	// inline asm
	ex2.approx.f32 	%f17, %f12;
	mov.f32 	%f18, 0f3F800000;
	fma.rn.f32 	%f9, %f6, %f17, %f18;
	// inline asm
	rcp.approx.ftz.f32 %f8,%f9;
	// inline asm
	mov.f32 	%f19, 0fC0000000;
	fma.rn.f32 	%f20, %f8, %f19, %f18;
	mov.b32 	 %r11, %f20;
	setp.ltu.f32	%p3, %f2, 0f42B00000;
	selp.b32	%r12, %r11, 1065353216, %p3;
	mov.b32 	 %r13, %f1;
	and.b32  	%r14, %r13, -2147483648;
	or.b32  	%r15, %r12, %r14;
	mov.b32 	 %f32, %r15;

BB44_4:
	cvta.to.global.u32 	%r16, %r2;
	add.s32 	%r18, %r16, %r9;
	st.global.f32 	[%r18], %f32;

BB44_5:
	ret;
}

	// .globl	math_tgammaf
.visible .entry math_tgammaf(
	.param .u32 math_tgammaf_param_0,
	.param .u32 math_tgammaf_param_1,
	.param .u32 math_tgammaf_param_2
)
{
	.reg .pred 	%p<19>;
	.reg .f32 	%f<101>;
	.reg .s32 	%r<16>;


	ld.param.u32 	%r4, [math_tgammaf_param_0];
	ld.param.u32 	%r2, [math_tgammaf_param_1];
	ld.param.u32 	%r3, [math_tgammaf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB45_13;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	setp.ltu.f32	%p2, %f1, 0f00000000;
	@%p2 bra 	BB45_6;
	bra.uni 	BB45_2;

BB45_6:
	cvt.rmi.f32.f32	%f50, %f1;
	setp.eq.f32	%p10, %f50, %f1;
	selp.f32	%f51, 0f7FFFFFFF, %f1, %p10;
	setp.lt.f32	%p11, %f51, 0fC2246666;
	selp.f32	%f14, 0fC2246666, %f51, %p11;
	setp.lt.f32	%p12, %f14, 0fC2081EB8;
	add.f32 	%f52, %f14, 0f40C00000;
	selp.f32	%f97, %f52, %f14, %p12;
	setp.geu.f32	%p13, %f97, 0fBF000000;
	mov.f32 	%f96, %f97;
	@%p13 bra 	BB45_9;

	mov.f32 	%f98, %f97;
	mov.f32 	%f99, %f97;

BB45_8:
	add.f32 	%f98, %f98, 0f3F800000;
	mul.f32 	%f99, %f99, %f98;
	setp.lt.f32	%p14, %f98, 0fBF000000;
	mov.f32 	%f97, %f99;
	mov.f32 	%f96, %f98;
	@%p14 bra 	BB45_8;

BB45_9:
	mov.f32 	%f53, 0f3BE86AA4;
	mov.f32 	%f54, 0fBA8AA19E;
	fma.rn.f32 	%f55, %f54, %f96, %f53;
	mov.f32 	%f56, 0fBC1E2998;
	fma.rn.f32 	%f57, %f55, %f96, %f56;
	mov.f32 	%f58, 0fBD2CBE4A;
	fma.rn.f32 	%f59, %f57, %f96, %f58;
	mov.f32 	%f60, 0f3E2A8A17;
	fma.rn.f32 	%f61, %f59, %f96, %f60;
	mov.f32 	%f62, 0fBD2C0CBB;
	fma.rn.f32 	%f63, %f61, %f96, %f62;
	mov.f32 	%f64, 0fBF27E7A3;
	fma.rn.f32 	%f65, %f63, %f96, %f64;
	mov.f32 	%f66, 0f3F13C468;
	fma.rn.f32 	%f67, %f65, %f96, %f66;
	mov.f32 	%f68, 0f3F800000;
	fma.rn.f32 	%f69, %f67, %f96, %f68;
	mul.f32 	%f70, %f97, %f69;
	rcp.rn.f32 	%f100, %f70;
	setp.geu.f32	%p15, %f14, 0fC2081EB8;
	@%p15 bra 	BB45_12;

	add.f32 	%f71, %f14, 0f3F800000;
	mul.f32 	%f72, %f14, %f71;
	add.f32 	%f73, %f14, 0f40000000;
	mul.f32 	%f74, %f73, %f72;
	add.f32 	%f75, %f14, 0f40400000;
	mul.f32 	%f76, %f75, %f74;
	add.f32 	%f77, %f14, 0f40800000;
	mul.f32 	%f78, %f77, %f76;
	add.f32 	%f79, %f14, 0f40A00000;
	mul.f32 	%f80, %f79, %f78;
	rcp.rn.f32 	%f81, %f80;
	mul.f32 	%f100, %f100, %f81;
	setp.geu.f32	%p16, %f1, 0fC2280000;
	@%p16 bra 	BB45_12;

	cvt.rzi.s32.f32	%r11, %f1;
	and.b32  	%r12, %r11, 1;
	setp.eq.b32	%p17, %r12, 1;
	not.pred 	%p18, %p17;
	selp.f32	%f100, 0f80000000, %f100, %p18;
	bra.uni 	BB45_12;

BB45_2:
	setp.gt.f32	%p3, %f1, 0f42100000;
	selp.f32	%f2, 0f42100000, %f1, %p3;
	setp.gt.f32	%p4, %f2, 0f42081EB8;
	add.f32 	%f3, %f2, 0fBF800000;
	selp.f32	%f88, %f3, %f2, %p4;
	add.f32 	%f89, %f88, 0fBF800000;
	mov.f32 	%f27, 0f3F800000;
	mov.f32 	%f84, %f27;
	setp.leu.f32	%p5, %f88, 0f3FC00000;
	mov.f32 	%f83, %f27;
	@%p5 bra 	BB45_5;

	mov.f32 	%f90, %f89;

BB45_4:
	mov.f32 	%f88, %f90;
	mul.f32 	%f84, %f88, %f84;
	add.f32 	%f90, %f88, 0fBF800000;
	setp.gt.f32	%p6, %f88, 0f3FC00000;
	mov.f32 	%f82, %f84;
	mov.f32 	%f83, %f82;
	mov.f32 	%f89, %f90;
	@%p6 bra 	BB45_4;

BB45_5:
	mov.f32 	%f11, %f83;
	setp.ltu.f32	%p7, %f2, 0f3F000000;
	selp.f32	%f28, %f88, %f89, %p7;
	mov.f32 	%f29, 0f3BE86AA4;
	mov.f32 	%f30, 0fBA8AA19E;
	fma.rn.f32 	%f31, %f30, %f28, %f29;
	mov.f32 	%f32, 0fBC1E2998;
	fma.rn.f32 	%f33, %f31, %f28, %f32;
	mov.f32 	%f34, 0fBD2CBE4A;
	fma.rn.f32 	%f35, %f33, %f28, %f34;
	mov.f32 	%f36, 0f3E2A8A17;
	fma.rn.f32 	%f37, %f35, %f28, %f36;
	mov.f32 	%f38, 0fBD2C0CBB;
	fma.rn.f32 	%f39, %f37, %f28, %f38;
	mov.f32 	%f40, 0fBF27E7A3;
	fma.rn.f32 	%f41, %f39, %f28, %f40;
	mov.f32 	%f42, 0f3F13C468;
	fma.rn.f32 	%f43, %f41, %f28, %f42;
	fma.rn.f32 	%f45, %f43, %f28, %f27;
	mul.f32 	%f46, %f2, %f45;
	setp.lt.f32	%p8, %f2, 0f3F000000;
	selp.f32	%f47, %f46, %f45, %p8;
	div.approx.f32 	%f48, %f11, %f47;
	mul.f32 	%f49, %f3, %f48;
	selp.f32	%f100, %f49, %f48, %p4;

BB45_12:
	cvta.to.global.u32 	%r13, %r2;
	add.s32 	%r15, %r13, %r9;
	st.global.f32 	[%r15], %f100;

BB45_13:
	ret;
}

	// .globl	math_truncf
.visible .entry math_truncf(
	.param .u32 math_truncf_param_0,
	.param .u32 math_truncf_param_1,
	.param .u32 math_truncf_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .s32 	%r<13>;


	ld.param.u32 	%r4, [math_truncf_param_0];
	ld.param.u32 	%r2, [math_truncf_param_1];
	ld.param.u32 	%r3, [math_truncf_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	setp.ge.u32	%p1, %r1, %r4;
	@%p1 bra 	BB46_2;

	cvta.to.global.u32 	%r8, %r3;
	shl.b32 	%r9, %r1, 2;
	add.s32 	%r10, %r8, %r9;
	ld.global.f32 	%f1, [%r10];
	cvt.rzi.f32.f32	%f2, %f1;
	cvta.to.global.u32 	%r11, %r2;
	add.s32 	%r12, %r11, %r9;
	st.global.f32 	[%r12], %f2;

BB46_2:
	ret;
}

	// .globl	math_y0f
.visible .entry math_y0f(
	.param .u32 math_y0f_param_0,
	.param .u32 math_y0f_param_1,
	.param .u32 math_y0f_param_2
)
{
	.local .align 4 .b8 	__local_depot47[28];
	.reg .b32 	%SP;
	.reg .b32 	%SPL;
	.reg .pred 	%p<57>;
	.reg .f32 	%f<336>;
	.reg .s32 	%r<436>;


	mov.u32 	%r435, __local_depot47;
	cvta.local.u32 	%SP, %r435;
	ld.param.u32 	%r167, [math_y0f_param_0];
	ld.param.u32 	%r165, [math_y0f_param_1];
	ld.param.u32 	%r166, [math_y0f_param_2];
	add.u32 	%r168, %SP, 0;
	cvta.to.local.u32 	%r1, %r168;
	mov.u32 	%r169, %ntid.x;
	mov.u32 	%r170, %ctaid.x;
	mov.u32 	%r171, %tid.x;
	mad.lo.s32 	%r2, %r169, %r170, %r171;
	setp.ge.u32	%p1, %r2, %r167;
	@%p1 bra 	BB47_85;

	cvta.to.global.u32 	%r172, %r166;
	shl.b32 	%r173, %r2, 2;
	add.s32 	%r174, %r172, %r173;
	ld.global.f32 	%f1, [%r174];
	abs.f32 	%f2, %f1;
	setp.gtu.f32	%p2, %f2, 0f3EE4C176;
	@%p2 bra 	BB47_42;
	bra.uni 	BB47_2;

BB47_42:
	setp.gtu.f32	%p31, %f2, 0f3FF67AF8;
	@%p31 bra 	BB47_44;
	bra.uni 	BB47_43;

BB47_44:
	setp.gtu.f32	%p32, %f2, 0f40B0B31E;
	@%p32 bra 	BB47_46;
	bra.uni 	BB47_45;

BB47_46:
	setp.gtu.f32	%p33, %f2, 0f410A7798;
	@%p33 bra 	BB47_48;
	bra.uni 	BB47_47;

BB47_48:
	abs.f32 	%f265, %f2;
	mov.f32 	%f335, 0f00000000;
	setp.eq.f32	%p34, %f265, 0f7F800000;
	@%p34 bra 	BB47_82;

	// inline asm
	rcp.approx.ftz.f32 %f266,%f2;
	// inline asm
	mul.f32 	%f268, %f266, %f266;
	mov.f32 	%f269, 0f3DD0D5F0;
	mov.f32 	%f270, 0fBECC69F3;
	fma.rn.f32 	%f271, %f270, %f268, %f269;
	mov.f32 	%f272, 0fBD7FF855;
	fma.rn.f32 	%f273, %f271, %f268, %f272;
	mov.f32 	%f274, 0f3F800000;
	fma.rn.f32 	%f275, %f273, %f268, %f274;
	mov.f32 	%f276, 0fBE50D31C;
	mov.f32 	%f277, 0f3F8CCD61;
	fma.rn.f32 	%f278, %f277, %f268, %f276;
	mov.f32 	%f279, 0f3D854783;
	fma.rn.f32 	%f280, %f278, %f268, %f279;
	mov.f32 	%f281, 0fBDFFFFFB;
	fma.rn.f32 	%f282, %f280, %f268, %f281;
	fma.rn.f32 	%f38, %f282, %f266, %f2;
	rsqrt.approx.f32 	%f283, %f2;
	mul.f32 	%f284, %f283, 0f3F4C422A;
	mul.f32 	%f39, %f275, %f284;
	mul.f32 	%f285, %f38, 0f3F22F983;
	cvt.rni.s32.f32	%r416, %f285;
	cvt.rn.f32.s32	%f286, %r416;
	neg.f32 	%f287, %f286;
	mov.f32 	%f288, 0f3FC90FDA;
	fma.rn.f32 	%f289, %f287, %f288, %f38;
	mov.f32 	%f290, 0f33A22168;
	fma.rn.f32 	%f291, %f287, %f290, %f289;
	mov.f32 	%f292, 0f27C234C5;
	fma.rn.f32 	%f329, %f287, %f292, %f291;
	abs.f32 	%f293, %f38;
	setp.leu.f32	%p35, %f293, 0f47CE4780;
	@%p35 bra 	BB47_59;

	mov.b32 	 %r85, %f38;
	shl.b32 	%r279, %r85, 8;
	or.b32  	%r86, %r279, -2147483648;
	mov.u32 	%r408, 0;
	mov.u32 	%r407, 6;
	mov.u32 	%r406, __cudart_i2opi_f;
	mov.u32 	%r423, %r1;

BB47_51:
	.pragma "nounroll";
	ld.const.u32 	%r282, [%r406];
	// inline asm
	{
	mad.lo.cc.u32   %r280, %r282, %r86, %r408;
	madc.hi.u32     %r281, %r282, %r86,  0;
	}
	// inline asm
	mov.u32 	%r408, %r281;
	st.local.u32 	[%r423], %r280;
	add.s32 	%r423, %r423, 4;
	add.s32 	%r406, %r406, 4;
	add.s32 	%r407, %r407, -1;
	setp.ne.s32	%p36, %r407, 0;
	@%p36 bra 	BB47_51;

	and.b32  	%r95, %r85, -2147483648;
	bfe.u32 	%r285, %r85, 23, 8;
	add.s32 	%r286, %r285, -128;
	shr.u32 	%r287, %r286, 5;
	mov.u32 	%r288, 4;
	sub.s32 	%r289, %r288, %r287;
	shl.b32 	%r290, %r289, 2;
	add.s32 	%r291, %r290, %r1;
	st.local.u32 	[%r1+24], %r281;
	bfe.u32 	%r96, %r85, 23, 5;
	ld.local.u32 	%r409, [%r291+8];
	ld.local.u32 	%r410, [%r291+4];
	setp.eq.s32	%p37, %r96, 0;
	@%p37 bra 	BB47_54;

	mov.u32 	%r292, 32;
	sub.s32 	%r293, %r292, %r96;
	shr.u32 	%r294, %r410, %r293;
	shl.b32 	%r295, %r409, %r96;
	add.s32 	%r409, %r294, %r295;
	add.s32 	%r382, %r291, 8;
	ld.local.u32 	%r296, [%r382+-8];
	shr.u32 	%r297, %r296, %r293;
	shl.b32 	%r298, %r410, %r96;
	add.s32 	%r410, %r297, %r298;

BB47_54:
	shr.u32 	%r299, %r410, 30;
	shl.b32 	%r300, %r409, 2;
	add.s32 	%r411, %r299, %r300;
	shl.b32 	%r105, %r410, 2;
	shr.u32 	%r301, %r411, 31;
	shr.u32 	%r302, %r409, 30;
	add.s32 	%r106, %r301, %r302;
	setp.eq.s32	%p38, %r301, 0;
	mov.u32 	%r412, %r95;
	mov.u32 	%r413, %r105;
	@%p38 bra 	BB47_56;

	not.b32 	%r303, %r411;
	neg.s32 	%r107, %r105;
	setp.eq.s32	%p39, %r105, 0;
	selp.u32	%r304, 1, 0, %p39;
	add.s32 	%r411, %r304, %r303;
	xor.b32  	%r109, %r95, -2147483648;
	mov.u32 	%r412, %r109;
	mov.u32 	%r413, %r107;

BB47_56:
	mov.u32 	%r111, %r412;
	neg.s32 	%r305, %r106;
	setp.eq.s32	%p40, %r95, 0;
	selp.b32	%r416, %r106, %r305, %p40;
	clz.b32 	%r415, %r411;
	setp.eq.s32	%p41, %r415, 0;
	shl.b32 	%r306, %r411, %r415;
	mov.u32 	%r307, 32;
	sub.s32 	%r308, %r307, %r415;
	shr.u32 	%r309, %r413, %r308;
	add.s32 	%r310, %r309, %r306;
	selp.b32	%r115, %r411, %r310, %p41;
	mov.u32 	%r311, -921707870;
	mul.hi.u32 	%r414, %r115, %r311;
	setp.lt.s32	%p42, %r414, 1;
	@%p42 bra 	BB47_58;

	mul.lo.s32 	%r312, %r115, -921707870;
	shr.u32 	%r313, %r312, 31;
	shl.b32 	%r314, %r414, 1;
	add.s32 	%r414, %r313, %r314;
	add.s32 	%r415, %r415, 1;

BB47_58:
	mov.u32 	%r315, 126;
	sub.s32 	%r316, %r315, %r415;
	shl.b32 	%r317, %r316, 23;
	add.s32 	%r318, %r414, 1;
	shr.u32 	%r319, %r318, 7;
	add.s32 	%r320, %r319, 1;
	shr.u32 	%r321, %r320, 1;
	add.s32 	%r322, %r321, %r317;
	or.b32  	%r323, %r322, %r111;
	mov.b32 	 %f329, %r323;

BB47_59:
	and.b32  	%r324, %r416, 3;
	cvt.rn.f32.s32	%f294, %r324;
	add.f32 	%f295, %f329, 0fC016CBE4;
	fma.rn.f32 	%f330, %f294, 0f3FC90FDB, %f295;
	abs.f32 	%f296, %f330;
	setp.neu.f32	%p43, %f296, 0f7F800000;
	@%p43 bra 	BB47_61;

	mov.f32 	%f297, 0f00000000;
	mul.rn.f32 	%f330, %f330, %f297;

BB47_61:
	mul.f32 	%f298, %f330, 0f3F22F983;
	cvt.rni.s32.f32	%r434, %f298;
	cvt.rn.f32.s32	%f299, %r434;
	neg.f32 	%f300, %f299;
	fma.rn.f32 	%f302, %f300, %f288, %f330;
	fma.rn.f32 	%f304, %f300, %f290, %f302;
	fma.rn.f32 	%f331, %f300, %f292, %f304;
	abs.f32 	%f306, %f330;
	setp.leu.f32	%p44, %f306, 0f47CE4780;
	@%p44 bra 	BB47_71;

	mov.b32 	 %r124, %f330;
	shr.u32 	%r125, %r124, 23;
	bfe.u32 	%r328, %r124, 23, 8;
	add.s32 	%r329, %r328, -128;
	shl.b32 	%r330, %r124, 8;
	or.b32  	%r126, %r330, -2147483648;
	shr.u32 	%r127, %r329, 5;
	mov.u32 	%r426, 0;
	mov.u32 	%r418, 6;
	mov.u32 	%r417, __cudart_i2opi_f;
	mov.u32 	%r422, %r1;

BB47_63:
	.pragma "nounroll";
	ld.const.u32 	%r333, [%r417];
	// inline asm
	{
	mad.lo.cc.u32   %r331, %r333, %r126, %r426;
	madc.hi.u32     %r332, %r333, %r126,  0;
	}
	// inline asm
	mov.u32 	%r426, %r332;
	st.local.u32 	[%r422], %r331;
	add.s32 	%r422, %r422, 4;
	add.s32 	%r417, %r417, 4;
	add.s32 	%r418, %r418, -1;
	setp.ne.s32	%p45, %r418, 0;
	@%p45 bra 	BB47_63;

	and.b32  	%r136, %r124, -2147483648;
	mov.u32 	%r336, 4;
	sub.s32 	%r337, %r336, %r127;
	shl.b32 	%r338, %r337, 2;
	add.s32 	%r339, %r338, %r1;
	st.local.u32 	[%r1+24], %r332;
	ld.local.u32 	%r427, [%r339+8];
	ld.local.u32 	%r428, [%r339+4];
	and.b32  	%r140, %r125, 31;
	setp.eq.s32	%p46, %r140, 0;
	@%p46 bra 	BB47_66;

	mov.u32 	%r340, 32;
	sub.s32 	%r341, %r340, %r140;
	shr.u32 	%r342, %r428, %r341;
	shl.b32 	%r343, %r427, %r140;
	add.s32 	%r427, %r342, %r343;
	add.s32 	%r383, %r339, 8;
	ld.local.u32 	%r344, [%r383+-8];
	shr.u32 	%r345, %r344, %r341;
	shl.b32 	%r346, %r428, %r140;
	add.s32 	%r428, %r345, %r346;

BB47_66:
	shr.u32 	%r347, %r428, 30;
	shl.b32 	%r348, %r427, 2;
	add.s32 	%r429, %r347, %r348;
	shl.b32 	%r146, %r428, 2;
	shr.u32 	%r349, %r429, 31;
	shr.u32 	%r350, %r427, 30;
	add.s32 	%r147, %r349, %r350;
	setp.eq.s32	%p47, %r349, 0;
	mov.u32 	%r430, %r136;
	mov.u32 	%r431, %r146;
	@%p47 bra 	BB47_68;

	not.b32 	%r351, %r429;
	neg.s32 	%r148, %r146;
	setp.eq.s32	%p48, %r146, 0;
	selp.u32	%r352, 1, 0, %p48;
	add.s32 	%r429, %r352, %r351;
	xor.b32  	%r150, %r136, -2147483648;
	mov.u32 	%r430, %r150;
	mov.u32 	%r431, %r148;

BB47_68:
	mov.u32 	%r152, %r430;
	neg.s32 	%r353, %r147;
	setp.eq.s32	%p49, %r136, 0;
	selp.b32	%r434, %r147, %r353, %p49;
	clz.b32 	%r433, %r429;
	setp.eq.s32	%p50, %r433, 0;
	shl.b32 	%r354, %r429, %r433;
	mov.u32 	%r355, 32;
	sub.s32 	%r356, %r355, %r433;
	shr.u32 	%r357, %r431, %r356;
	add.s32 	%r358, %r357, %r354;
	selp.b32	%r156, %r429, %r358, %p50;
	mov.u32 	%r359, -921707870;
	mul.hi.u32 	%r432, %r156, %r359;
	setp.lt.s32	%p51, %r432, 1;
	@%p51 bra 	BB47_70;

	mul.lo.s32 	%r360, %r156, -921707870;
	shr.u32 	%r361, %r360, 31;
	shl.b32 	%r362, %r432, 1;
	add.s32 	%r432, %r361, %r362;
	add.s32 	%r433, %r433, 1;

BB47_70:
	mov.u32 	%r363, 126;
	sub.s32 	%r364, %r363, %r433;
	shl.b32 	%r365, %r364, 23;
	add.s32 	%r366, %r432, 1;
	shr.u32 	%r367, %r366, 7;
	add.s32 	%r368, %r367, 1;
	shr.u32 	%r369, %r368, 1;
	add.s32 	%r370, %r369, %r365;
	or.b32  	%r371, %r370, %r152;
	mov.b32 	 %f331, %r371;

BB47_71:
	mul.rn.f32 	%f49, %f331, %f331;
	add.s32 	%r163, %r434, 1;
	and.b32  	%r164, %r163, 1;
	setp.eq.s32	%p52, %r164, 0;
	@%p52 bra 	BB47_73;

	mov.f32 	%f307, 0fBAB6061A;
	mov.f32 	%f308, 0f37CCF5CE;
	fma.rn.f32 	%f332, %f308, %f49, %f307;
	bra.uni 	BB47_74;

BB47_2:
	mul.f32 	%f65, %f2, %f2;
	mov.f32 	%f66, 0fB71F49B6;
	mov.f32 	%f67, 0f33DBE5AC;
	fma.rn.f32 	%f68, %f67, %f65, %f66;
	mov.f32 	%f69, 0f3A0D3100;
	fma.rn.f32 	%f70, %f68, %f65, %f69;
	mov.f32 	%f71, 0fBC83AD8E;
	fma.rn.f32 	%f72, %f70, %f65, %f71;
	mov.f32 	%f73, 0f3E35DE5A;
	fma.rn.f32 	%f74, %f72, %f65, %f73;
	mov.f32 	%f75, 0fBD9726B5;
	fma.rn.f32 	%f3, %f74, %f65, %f75;
	setp.lt.f32	%p3, %f2, 0f7F800000;
	setp.gt.f32	%p4, %f2, 0f00000000;
	and.pred  	%p5, %p4, %p3;
	@%p5 bra 	BB47_4;
	bra.uni 	BB47_3;

BB47_4:
	setp.lt.f32	%p6, %f2, 0f00800000;
	mul.f32 	%f78, %f2, 0f4B800000;
	selp.f32	%f79, %f78, %f2, %p6;
	selp.f32	%f80, 0fC3170000, 0fC2FE0000, %p6;
	mov.b32 	 %r175, %f79;
	and.b32  	%r176, %r175, 8388607;
	or.b32  	%r177, %r176, 1065353216;
	mov.b32 	 %f81, %r177;
	shr.u32 	%r178, %r175, 23;
	cvt.rn.f32.u32	%f82, %r178;
	add.f32 	%f83, %f80, %f82;
	setp.gt.f32	%p7, %f81, 0f3FAE147B;
	mul.f32 	%f84, %f81, 0f3F000000;
	add.f32 	%f85, %f83, 0f3F800000;
	selp.f32	%f86, %f84, %f81, %p7;
	selp.f32	%f87, %f85, %f83, %p7;
	add.f32 	%f77, %f86, 0f3F800000;
	add.f32 	%f88, %f86, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f76,%f77;
	// inline asm
	mul.f32 	%f89, %f88, %f88;
	neg.f32 	%f90, %f89;
	mul.rn.f32 	%f91, %f76, %f90;
	add.rn.f32 	%f92, %f88, %f91;
	mul.f32 	%f93, %f92, %f92;
	mov.f32 	%f94, 0f3C4C6A36;
	mov.f32 	%f95, 0f3B1E94E6;
	fma.rn.f32 	%f96, %f95, %f93, %f94;
	mov.f32 	%f97, 0f3DAAAB1A;
	fma.rn.f32 	%f98, %f96, %f93, %f97;
	mul.f32 	%f99, %f93, %f98;
	fma.rn.f32 	%f100, %f99, %f92, %f91;
	add.f32 	%f101, %f88, %f100;
	mov.f32 	%f102, 0f3F317218;
	fma.rn.f32 	%f321, %f87, %f102, %f101;
	bra.uni 	BB47_5;

BB47_43:
	add.f32 	%f197, %f2, 0fBF64C176;
	add.f32 	%f198, %f197, 0f32657D03;
	mov.f32 	%f199, 0fBE02574C;
	mov.f32 	%f200, 0f3CDDC8B3;
	fma.rn.f32 	%f201, %f200, %f198, %f199;
	mov.f32 	%f202, 0f3E7F2CC9;
	fma.rn.f32 	%f203, %f201, %f198, %f202;
	mov.f32 	%f204, 0fBE8BF29B;
	fma.rn.f32 	%f205, %f203, %f198, %f204;
	mov.f32 	%f206, 0f3E5BCE93;
	fma.rn.f32 	%f207, %f205, %f198, %f206;
	mov.f32 	%f208, 0fBE38C4FF;
	fma.rn.f32 	%f209, %f207, %f198, %f208;
	mov.f32 	%f210, 0f3E42774D;
	fma.rn.f32 	%f211, %f209, %f198, %f210;
	mov.f32 	%f212, 0fBE525CB2;
	fma.rn.f32 	%f213, %f211, %f198, %f212;
	mov.f32 	%f214, 0f3E60F43D;
	fma.rn.f32 	%f215, %f213, %f198, %f214;
	mov.f32 	%f216, 0fBE679145;
	fma.rn.f32 	%f217, %f215, %f198, %f216;
	mov.f32 	%f218, 0f3E61D24A;
	fma.rn.f32 	%f219, %f217, %f198, %f218;
	mov.f32 	%f220, 0fBEFBF1AD;
	fma.rn.f32 	%f221, %f219, %f198, %f220;
	mov.f32 	%f222, 0f3F6121BB;
	fma.rn.f32 	%f223, %f221, %f198, %f222;
	mul.f32 	%f335, %f198, %f223;
	bra.uni 	BB47_82;

BB47_3:
	lg2.approx.f32 	%f321, %f2;

BB47_5:
	abs.f32 	%f7, %f2;
	setp.gtu.f32	%p8, %f7, 0f41000000;
	@%p8 bra 	BB47_7;
	bra.uni 	BB47_6;

BB47_7:
	abs.f32 	%f139, %f7;
	mov.f32 	%f328, 0f00000000;
	setp.eq.f32	%p9, %f139, 0f7F800000;
	@%p9 bra 	BB47_41;

	// inline asm
	rcp.approx.ftz.f32 %f140,%f7;
	// inline asm
	mul.f32 	%f142, %f140, %f140;
	mov.f32 	%f143, 0fBF03B7C2;
	mov.f32 	%f144, 0f4056FE93;
	fma.rn.f32 	%f145, %f144, %f142, %f143;
	mov.f32 	%f146, 0f3DD3B3F3;
	fma.rn.f32 	%f147, %f145, %f142, %f146;
	mov.f32 	%f148, 0fBD7FFFB6;
	fma.rn.f32 	%f149, %f147, %f142, %f148;
	mov.f32 	%f150, 0f3F800000;
	fma.rn.f32 	%f151, %f149, %f142, %f150;
	mov.f32 	%f152, 0fBE52412D;
	mov.f32 	%f153, 0f3F91E009;
	fma.rn.f32 	%f154, %f153, %f142, %f152;
	mov.f32 	%f155, 0f3D854ED1;
	fma.rn.f32 	%f156, %f154, %f142, %f155;
	mov.f32 	%f157, 0fBDFFFFFF;
	fma.rn.f32 	%f158, %f156, %f142, %f157;
	fma.rn.f32 	%f9, %f158, %f140, %f7;
	rsqrt.approx.f32 	%f159, %f7;
	mul.f32 	%f160, %f159, 0f3F4C422A;
	mul.f32 	%f10, %f151, %f160;
	mul.f32 	%f161, %f9, 0f3F22F983;
	cvt.rni.s32.f32	%r394, %f161;
	cvt.rn.f32.s32	%f162, %r394;
	neg.f32 	%f163, %f162;
	mov.f32 	%f164, 0f3FC90FDA;
	fma.rn.f32 	%f165, %f163, %f164, %f9;
	mov.f32 	%f166, 0f33A22168;
	fma.rn.f32 	%f167, %f163, %f166, %f165;
	mov.f32 	%f168, 0f27C234C5;
	fma.rn.f32 	%f322, %f163, %f168, %f167;
	abs.f32 	%f169, %f9;
	setp.leu.f32	%p10, %f169, 0f47CE4780;
	@%p10 bra 	BB47_18;

	mov.b32 	 %r4, %f9;
	shl.b32 	%r182, %r4, 8;
	or.b32  	%r5, %r182, -2147483648;
	mov.u32 	%r386, 0;
	mov.u32 	%r385, 6;
	mov.u32 	%r384, __cudart_i2opi_f;
	mov.u32 	%r425, %r1;

BB47_10:
	.pragma "nounroll";
	mov.u32 	%r8, %r425;
	ld.const.u32 	%r185, [%r384];
	// inline asm
	{
	mad.lo.cc.u32   %r183, %r185, %r5, %r386;
	madc.hi.u32     %r184, %r185, %r5,  0;
	}
	// inline asm
	mov.u32 	%r386, %r184;
	st.local.u32 	[%r8], %r183;
	add.s32 	%r11, %r8, 4;
	add.s32 	%r384, %r384, 4;
	add.s32 	%r385, %r385, -1;
	setp.ne.s32	%p11, %r385, 0;
	mov.u32 	%r425, %r11;
	@%p11 bra 	BB47_10;

	and.b32  	%r14, %r4, -2147483648;
	bfe.u32 	%r188, %r4, 23, 8;
	add.s32 	%r189, %r188, -128;
	shr.u32 	%r190, %r189, 5;
	mov.u32 	%r191, 4;
	sub.s32 	%r192, %r191, %r190;
	shl.b32 	%r193, %r192, 2;
	add.s32 	%r194, %r193, %r1;
	st.local.u32 	[%r1+24], %r184;
	bfe.u32 	%r15, %r4, 23, 5;
	ld.local.u32 	%r387, [%r194+8];
	ld.local.u32 	%r388, [%r194+4];
	setp.eq.s32	%p12, %r15, 0;
	@%p12 bra 	BB47_13;

	mov.u32 	%r195, 32;
	sub.s32 	%r196, %r195, %r15;
	shr.u32 	%r197, %r388, %r196;
	shl.b32 	%r198, %r387, %r15;
	add.s32 	%r387, %r197, %r198;
	add.s32 	%r380, %r194, 8;
	ld.local.u32 	%r199, [%r380+-8];
	shr.u32 	%r200, %r199, %r196;
	shl.b32 	%r201, %r388, %r15;
	add.s32 	%r388, %r200, %r201;

BB47_13:
	shr.u32 	%r202, %r388, 30;
	shl.b32 	%r203, %r387, 2;
	add.s32 	%r389, %r202, %r203;
	shl.b32 	%r24, %r388, 2;
	shr.u32 	%r204, %r389, 31;
	shr.u32 	%r205, %r387, 30;
	add.s32 	%r25, %r204, %r205;
	setp.eq.s32	%p13, %r204, 0;
	mov.u32 	%r390, %r14;
	mov.u32 	%r391, %r24;
	@%p13 bra 	BB47_15;

	not.b32 	%r206, %r389;
	neg.s32 	%r26, %r24;
	setp.eq.s32	%p14, %r24, 0;
	selp.u32	%r207, 1, 0, %p14;
	add.s32 	%r389, %r207, %r206;
	xor.b32  	%r28, %r14, -2147483648;
	mov.u32 	%r390, %r28;
	mov.u32 	%r391, %r26;

BB47_15:
	mov.u32 	%r30, %r390;
	neg.s32 	%r208, %r25;
	setp.eq.s32	%p15, %r14, 0;
	selp.b32	%r394, %r25, %r208, %p15;
	clz.b32 	%r393, %r389;
	setp.eq.s32	%p16, %r393, 0;
	shl.b32 	%r209, %r389, %r393;
	mov.u32 	%r210, 32;
	sub.s32 	%r211, %r210, %r393;
	shr.u32 	%r212, %r391, %r211;
	add.s32 	%r213, %r212, %r209;
	selp.b32	%r34, %r389, %r213, %p16;
	mov.u32 	%r214, -921707870;
	mul.hi.u32 	%r392, %r34, %r214;
	setp.lt.s32	%p17, %r392, 1;
	@%p17 bra 	BB47_17;

	mul.lo.s32 	%r215, %r34, -921707870;
	shr.u32 	%r216, %r215, 31;
	shl.b32 	%r217, %r392, 1;
	add.s32 	%r392, %r216, %r217;
	add.s32 	%r393, %r393, 1;

BB47_17:
	mov.u32 	%r218, 126;
	sub.s32 	%r219, %r218, %r393;
	shl.b32 	%r220, %r219, 23;
	add.s32 	%r221, %r392, 1;
	shr.u32 	%r222, %r221, 7;
	add.s32 	%r223, %r222, 1;
	shr.u32 	%r224, %r223, 1;
	add.s32 	%r225, %r224, %r220;
	or.b32  	%r226, %r225, %r30;
	mov.b32 	 %f322, %r226;

BB47_18:
	and.b32  	%r227, %r394, 3;
	cvt.rn.f32.s32	%f170, %r227;
	add.f32 	%f171, %f322, 0fBF490FDB;
	fma.rn.f32 	%f323, %f170, 0f3FC90FDB, %f171;
	abs.f32 	%f172, %f323;
	setp.neu.f32	%p18, %f172, 0f7F800000;
	@%p18 bra 	BB47_20;

	mov.f32 	%f173, 0f00000000;
	mul.rn.f32 	%f323, %f323, %f173;

BB47_20:
	mul.f32 	%f174, %f323, 0f3F22F983;
	cvt.rni.s32.f32	%r405, %f174;
	cvt.rn.f32.s32	%f175, %r405;
	neg.f32 	%f176, %f175;
	fma.rn.f32 	%f178, %f176, %f164, %f323;
	fma.rn.f32 	%f180, %f176, %f166, %f178;
	fma.rn.f32 	%f324, %f176, %f168, %f180;
	abs.f32 	%f182, %f323;
	setp.leu.f32	%p19, %f182, 0f47CE4780;
	@%p19 bra 	BB47_30;

	mov.b32 	 %r43, %f323;
	shr.u32 	%r44, %r43, 23;
	bfe.u32 	%r231, %r43, 23, 8;
	add.s32 	%r232, %r231, -128;
	shl.b32 	%r233, %r43, 8;
	or.b32  	%r45, %r233, -2147483648;
	shr.u32 	%r46, %r232, 5;
	mov.u32 	%r397, 0;
	mov.u32 	%r396, 6;
	mov.u32 	%r395, __cudart_i2opi_f;
	mov.u32 	%r424, %r1;

BB47_22:
	.pragma "nounroll";
	ld.const.u32 	%r236, [%r395];
	// inline asm
	{
	mad.lo.cc.u32   %r234, %r236, %r45, %r397;
	madc.hi.u32     %r235, %r236, %r45,  0;
	}
	// inline asm
	mov.u32 	%r397, %r235;
	st.local.u32 	[%r424], %r234;
	add.s32 	%r424, %r424, 4;
	add.s32 	%r395, %r395, 4;
	add.s32 	%r396, %r396, -1;
	setp.ne.s32	%p20, %r396, 0;
	@%p20 bra 	BB47_22;

	and.b32  	%r55, %r43, -2147483648;
	mov.u32 	%r239, 4;
	sub.s32 	%r240, %r239, %r46;
	shl.b32 	%r241, %r240, 2;
	add.s32 	%r242, %r241, %r1;
	st.local.u32 	[%r1+24], %r235;
	ld.local.u32 	%r398, [%r242+8];
	ld.local.u32 	%r399, [%r242+4];
	and.b32  	%r59, %r44, 31;
	setp.eq.s32	%p21, %r59, 0;
	@%p21 bra 	BB47_25;

	mov.u32 	%r243, 32;
	sub.s32 	%r244, %r243, %r59;
	shr.u32 	%r245, %r399, %r244;
	shl.b32 	%r246, %r398, %r59;
	add.s32 	%r398, %r245, %r246;
	add.s32 	%r381, %r242, 8;
	ld.local.u32 	%r247, [%r381+-8];
	shr.u32 	%r248, %r247, %r244;
	shl.b32 	%r249, %r399, %r59;
	add.s32 	%r399, %r248, %r249;

BB47_25:
	shr.u32 	%r250, %r399, 30;
	shl.b32 	%r251, %r398, 2;
	add.s32 	%r400, %r250, %r251;
	shl.b32 	%r65, %r399, 2;
	shr.u32 	%r252, %r400, 31;
	shr.u32 	%r253, %r398, 30;
	add.s32 	%r66, %r252, %r253;
	setp.eq.s32	%p22, %r252, 0;
	mov.u32 	%r401, %r55;
	mov.u32 	%r402, %r65;
	@%p22 bra 	BB47_27;

	not.b32 	%r254, %r400;
	neg.s32 	%r67, %r65;
	setp.eq.s32	%p23, %r65, 0;
	selp.u32	%r255, 1, 0, %p23;
	add.s32 	%r400, %r255, %r254;
	xor.b32  	%r69, %r55, -2147483648;
	mov.u32 	%r401, %r69;
	mov.u32 	%r402, %r67;

BB47_27:
	mov.u32 	%r71, %r401;
	neg.s32 	%r256, %r66;
	setp.eq.s32	%p24, %r55, 0;
	selp.b32	%r405, %r66, %r256, %p24;
	clz.b32 	%r404, %r400;
	setp.eq.s32	%p25, %r404, 0;
	shl.b32 	%r257, %r400, %r404;
	mov.u32 	%r258, 32;
	sub.s32 	%r259, %r258, %r404;
	shr.u32 	%r260, %r402, %r259;
	add.s32 	%r261, %r260, %r257;
	selp.b32	%r75, %r400, %r261, %p25;
	mov.u32 	%r262, -921707870;
	mul.hi.u32 	%r403, %r75, %r262;
	setp.lt.s32	%p26, %r403, 1;
	@%p26 bra 	BB47_29;

	mul.lo.s32 	%r263, %r75, -921707870;
	shr.u32 	%r264, %r263, 31;
	shl.b32 	%r265, %r403, 1;
	add.s32 	%r403, %r264, %r265;
	add.s32 	%r404, %r404, 1;

BB47_29:
	mov.u32 	%r266, 126;
	sub.s32 	%r267, %r266, %r404;
	shl.b32 	%r268, %r267, 23;
	add.s32 	%r269, %r403, 1;
	shr.u32 	%r270, %r269, 7;
	add.s32 	%r271, %r270, 1;
	shr.u32 	%r272, %r271, 1;
	add.s32 	%r273, %r272, %r268;
	or.b32  	%r274, %r273, %r71;
	mov.b32 	 %f324, %r274;

BB47_30:
	mul.rn.f32 	%f20, %f324, %f324;
	add.s32 	%r82, %r405, 1;
	and.b32  	%r83, %r82, 1;
	setp.eq.s32	%p27, %r83, 0;
	@%p27 bra 	BB47_32;

	mov.f32 	%f183, 0fBAB6061A;
	mov.f32 	%f184, 0f37CCF5CE;
	fma.rn.f32 	%f325, %f184, %f20, %f183;
	bra.uni 	BB47_33;

BB47_6:
	add.f32 	%f103, %f7, 0fC019E8A9;
	add.f32 	%f104, %f103, 0fB3E971B3;
	mov.f32 	%f105, 0fA9ACA9B3;
	mov.f32 	%f106, 0fA6B3B8E7;
	fma.rn.f32 	%f107, %f106, %f104, %f105;
	mov.f32 	%f108, 0f2C3F0E18;
	fma.rn.f32 	%f109, %f107, %f104, %f108;
	mov.f32 	%f110, 0fACD41781;
	fma.rn.f32 	%f111, %f109, %f104, %f110;
	mov.f32 	%f112, 0fAFE90F38;
	fma.rn.f32 	%f113, %f111, %f104, %f112;
	mov.f32 	%f114, 0f3020305B;
	fma.rn.f32 	%f115, %f113, %f104, %f114;
	mov.f32 	%f116, 0f33797143;
	fma.rn.f32 	%f117, %f115, %f104, %f116;
	mov.f32 	%f118, 0f30F76F85;
	fma.rn.f32 	%f119, %f117, %f104, %f118;
	mov.f32 	%f120, 0fB6B6DFC6;
	fma.rn.f32 	%f121, %f119, %f104, %f120;
	mov.f32 	%f122, 0fB6F665C9;
	fma.rn.f32 	%f123, %f121, %f104, %f122;
	mov.f32 	%f124, 0f399E2DEB;
	fma.rn.f32 	%f125, %f123, %f104, %f124;
	mov.f32 	%f126, 0f3A4AE334;
	fma.rn.f32 	%f127, %f125, %f104, %f126;
	mov.f32 	%f128, 0fBBEEAA1B;
	fma.rn.f32 	%f129, %f127, %f104, %f128;
	mov.f32 	%f130, 0fBCDA7747;
	fma.rn.f32 	%f131, %f129, %f104, %f130;
	mul.f32 	%f132, %f104, %f131;
	add.f32 	%f133, %f7, 0fC0B0A47B;
	add.f32 	%f134, %f133, 0f339A7A37;
	mul.f32 	%f135, %f134, %f132;
	add.f32 	%f136, %f7, 0fC10A75AB;
	add.f32 	%f137, %f136, 0fB4CCCDED;
	mul.f32 	%f328, %f137, %f135;
	bra.uni 	BB47_41;

BB47_45:
	add.f32 	%f224, %f2, 0fC07D4A9A;
	add.f32 	%f225, %f224, 0fB3D9856A;
	mov.f32 	%f226, 0fB45E2607;
	mov.f32 	%f227, 0fB449DD3F;
	fma.rn.f32 	%f228, %f227, %f225, %f226;
	mov.f32 	%f229, 0fB6857064;
	fma.rn.f32 	%f230, %f228, %f225, %f229;
	mov.f32 	%f231, 0f38554610;
	fma.rn.f32 	%f232, %f230, %f225, %f231;
	mov.f32 	%f233, 0f394ACED7;
	fma.rn.f32 	%f234, %f232, %f225, %f233;
	mov.f32 	%f235, 0fBB0F1A0C;
	fma.rn.f32 	%f236, %f234, %f225, %f235;
	mov.f32 	%f237, 0fBBE07F2E;
	fma.rn.f32 	%f238, %f236, %f225, %f237;
	mov.f32 	%f239, 0f3D6FB6B5;
	fma.rn.f32 	%f240, %f238, %f225, %f239;
	mov.f32 	%f241, 0f3D504DF1;
	fma.rn.f32 	%f242, %f240, %f225, %f241;
	mov.f32 	%f243, 0fBECE1A13;
	fma.rn.f32 	%f244, %f242, %f225, %f243;
	mul.f32 	%f335, %f225, %f244;
	bra.uni 	BB47_82;

BB47_47:
	add.f32 	%f245, %f2, 0fC0E2C0EE;
	add.f32 	%f246, %f245, 0fB39CE420;
	mov.f32 	%f247, 0f3629DA6C;
	mov.f32 	%f248, 0f3510CEBE;
	fma.rn.f32 	%f249, %f248, %f246, %f247;
	mov.f32 	%f250, 0fB84054C0;
	fma.rn.f32 	%f251, %f249, %f246, %f250;
	mov.f32 	%f252, 0fB91318AB;
	fma.rn.f32 	%f253, %f251, %f246, %f252;
	mov.f32 	%f254, 0f3B0E9921;
	fma.rn.f32 	%f255, %f253, %f246, %f254;
	mov.f32 	%f256, 0f3B5974D5;
	fma.rn.f32 	%f257, %f255, %f246, %f256;
	mov.f32 	%f258, 0fBD44B4D7;
	fma.rn.f32 	%f259, %f257, %f246, %f258;
	mov.f32 	%f260, 0fBCAD7799;
	fma.rn.f32 	%f261, %f259, %f246, %f260;
	mov.f32 	%f262, 0f3E99A665;
	fma.rn.f32 	%f263, %f261, %f246, %f262;
	mul.f32 	%f335, %f246, %f263;
	bra.uni 	BB47_82;

BB47_32:
	mov.f32 	%f185, 0f3C08839E;
	mov.f32 	%f186, 0fB94CA1F9;
	fma.rn.f32 	%f325, %f186, %f20, %f185;

BB47_33:
	@%p27 bra 	BB47_35;

	mov.f32 	%f187, 0f3D2AAAA5;
	fma.rn.f32 	%f188, %f325, %f20, %f187;
	mov.f32 	%f189, 0fBF000000;
	fma.rn.f32 	%f326, %f188, %f20, %f189;
	bra.uni 	BB47_36;

BB47_35:
	mov.f32 	%f190, 0fBE2AAAA3;
	fma.rn.f32 	%f191, %f325, %f20, %f190;
	mov.f32 	%f192, 0f00000000;
	fma.rn.f32 	%f326, %f191, %f20, %f192;

BB47_36:
	fma.rn.f32 	%f327, %f326, %f324, %f324;
	@%p27 bra 	BB47_38;

	fma.rn.f32 	%f327, %f326, %f20, %f150;

BB47_38:
	and.b32  	%r275, %r82, 2;
	setp.eq.s32	%p30, %r275, 0;
	@%p30 bra 	BB47_40;

	mov.f32 	%f194, 0f00000000;
	mov.f32 	%f195, 0fBF800000;
	fma.rn.f32 	%f327, %f327, %f195, %f194;

BB47_40:
	mul.f32 	%f328, %f10, %f327;

BB47_41:
	mul.f32 	%f196, %f321, 0f3F22F983;
	fma.rn.f32 	%f335, %f196, %f328, %f3;

BB47_82:
	setp.geu.f32	%p56, %f1, 0f00000000;
	@%p56 bra 	BB47_84;

	mov.f32 	%f320, 0fBF800000;
	sqrt.rn.f32 	%f335, %f320;

BB47_84:
	cvta.to.global.u32 	%r377, %r165;
	add.s32 	%r379, %r377, %r173;
	st.global.f32 	[%r379], %f335;

BB47_85:
	ret;

BB47_73:
	mov.f32 	%f309, 0f3C08839E;
	mov.f32 	%f310, 0fB94CA1F9;
	fma.rn.f32 	%f332, %f310, %f49, %f309;

BB47_74:
	@%p52 bra 	BB47_76;

	mov.f32 	%f311, 0f3D2AAAA5;
	fma.rn.f32 	%f312, %f332, %f49, %f311;
	mov.f32 	%f313, 0fBF000000;
	fma.rn.f32 	%f333, %f312, %f49, %f313;
	bra.uni 	BB47_77;

BB47_76:
	mov.f32 	%f314, 0fBE2AAAA3;
	fma.rn.f32 	%f315, %f332, %f49, %f314;
	mov.f32 	%f316, 0f00000000;
	fma.rn.f32 	%f333, %f315, %f49, %f316;

BB47_77:
	fma.rn.f32 	%f334, %f333, %f331, %f331;
	@%p52 bra 	BB47_79;

	fma.rn.f32 	%f334, %f333, %f49, %f274;

BB47_79:
	and.b32  	%r372, %r163, 2;
	setp.eq.s32	%p55, %r372, 0;
	@%p55 bra 	BB47_81;

	mov.f32 	%f318, 0f00000000;
	mov.f32 	%f319, 0fBF800000;
	fma.rn.f32 	%f334, %f334, %f319, %f318;

BB47_81:
	mul.f32 	%f335, %f39, %f334;
	bra.uni 	BB47_82;
}

	// .globl	math_y1f
.visible .entry math_y1f(
	.param .u32 math_y1f_param_0,
	.param .u32 math_y1f_param_1,
	.param .u32 math_y1f_param_2
)
{
	.local .align 4 .b8 	__local_depot48[28];
	.reg .b32 	%SP;
	.reg .b32 	%SPL;
	.reg .pred 	%p<59>;
	.reg .f32 	%f<332>;
	.reg .s32 	%r<446>;


	mov.u32 	%r445, __local_depot48;
	cvta.local.u32 	%SP, %r445;
	ld.param.u32 	%r171, [math_y1f_param_0];
	ld.param.u32 	%r169, [math_y1f_param_1];
	ld.param.u32 	%r170, [math_y1f_param_2];
	add.u32 	%r172, %SP, 0;
	cvta.to.local.u32 	%r1, %r172;
	mov.u32 	%r173, %ntid.x;
	mov.u32 	%r174, %ctaid.x;
	mov.u32 	%r175, %tid.x;
	mad.lo.s32 	%r2, %r173, %r174, %r175;
	setp.ge.u32	%p1, %r2, %r171;
	@%p1 bra 	BB48_87;

	cvta.to.global.u32 	%r176, %r170;
	shl.b32 	%r177, %r2, 2;
	add.s32 	%r178, %r176, %r177;
	ld.global.f32 	%f1, [%r178];
	abs.f32 	%f2, %f1;
	setp.lt.f32	%p2, %f2, 0f00800000;
	@%p2 bra 	BB48_83;
	bra.uni 	BB48_2;

BB48_83:
	mov.f32 	%f315, 0fBF22F983;
	div.rn.f32 	%f331, %f315, %f2;
	bra.uni 	BB48_84;

BB48_2:
	setp.gtu.f32	%p3, %f2, 0f3FD96AC4;
	@%p3 bra 	BB48_43;
	bra.uni 	BB48_3;

BB48_43:
	setp.gtu.f32	%p33, %f2, 0f40740EEE;
	@%p33 bra 	BB48_45;
	bra.uni 	BB48_44;

BB48_45:
	setp.gtu.f32	%p34, %f2, 0f40E06937;
	@%p34 bra 	BB48_47;
	bra.uni 	BB48_46;

BB48_47:
	setp.gtu.f32	%p35, %f2, 0f4122C2E3;
	@%p35 bra 	BB48_49;
	bra.uni 	BB48_48;

BB48_49:
	abs.f32 	%f260, %f2;
	mov.f32 	%f331, 0f00000000;
	setp.eq.f32	%p36, %f260, 0f7F800000;
	@%p36 bra 	BB48_84;

	// inline asm
	rcp.approx.ftz.f32 %f261,%f2;
	// inline asm
	mul.f32 	%f263, %f261, %f261;
	mov.f32 	%f264, 0fBE44AB90;
	mov.f32 	%f265, 0f3F267F60;
	fma.rn.f32 	%f266, %f265, %f263, %f264;
	mov.f32 	%f267, 0f3E3FFEBF;
	fma.rn.f32 	%f268, %f266, %f263, %f267;
	mov.f32 	%f269, 0f3F800000;
	fma.rn.f32 	%f270, %f268, %f263, %f269;
	mov.f32 	%f271, 0f3EBB73AB;
	mov.f32 	%f272, 0fBFE4E1AB;
	fma.rn.f32 	%f273, %f272, %f263, %f271;
	mov.f32 	%f274, 0fBE27FB6E;
	fma.rn.f32 	%f275, %f273, %f263, %f274;
	mov.f32 	%f276, 0f3EBFFFFF;
	fma.rn.f32 	%f277, %f275, %f263, %f276;
	fma.rn.f32 	%f38, %f277, %f261, %f2;
	rsqrt.approx.f32 	%f278, %f2;
	mul.f32 	%f279, %f278, 0f3F4C422A;
	mul.f32 	%f39, %f270, %f279;
	mul.f32 	%f280, %f38, 0f3F22F983;
	cvt.rni.s32.f32	%r426, %f280;
	cvt.rn.f32.s32	%f281, %r426;
	neg.f32 	%f282, %f281;
	mov.f32 	%f283, 0f3FC90FDA;
	fma.rn.f32 	%f284, %f282, %f283, %f38;
	mov.f32 	%f285, 0f33A22168;
	fma.rn.f32 	%f286, %f282, %f285, %f284;
	mov.f32 	%f287, 0f27C234C5;
	fma.rn.f32 	%f325, %f282, %f287, %f286;
	abs.f32 	%f288, %f38;
	setp.leu.f32	%p37, %f288, 0f47CE4780;
	@%p37 bra 	BB48_60;

	mov.b32 	 %r87, %f38;
	shr.u32 	%r88, %r87, 23;
	bfe.u32 	%r288, %r87, 23, 8;
	add.s32 	%r289, %r288, -128;
	shl.b32 	%r290, %r87, 8;
	or.b32  	%r89, %r290, -2147483648;
	shr.u32 	%r90, %r289, 5;
	mov.u32 	%r418, 0;
	mov.u32 	%r417, 6;
	mov.u32 	%r416, __cudart_i2opi_f;
	mov.u32 	%r433, %r1;

BB48_52:
	.pragma "nounroll";
	ld.const.u32 	%r293, [%r416];
	// inline asm
	{
	mad.lo.cc.u32   %r291, %r293, %r89, %r418;
	madc.hi.u32     %r292, %r293, %r89,  0;
	}
	// inline asm
	mov.u32 	%r418, %r292;
	st.local.u32 	[%r433], %r291;
	add.s32 	%r433, %r433, 4;
	add.s32 	%r416, %r416, 4;
	add.s32 	%r417, %r417, -1;
	setp.ne.s32	%p38, %r417, 0;
	@%p38 bra 	BB48_52;

	and.b32  	%r99, %r87, -2147483648;
	add.s32 	%r390, %r1, 24;
	st.local.u32 	[%r390], %r292;
	mov.u32 	%r296, 4;
	sub.s32 	%r297, %r296, %r90;
	shl.b32 	%r298, %r297, 2;
	add.s32 	%r299, %r298, %r1;
	ld.local.u32 	%r419, [%r299+8];
	ld.local.u32 	%r420, [%r299+4];
	and.b32  	%r103, %r88, 31;
	setp.eq.s32	%p39, %r103, 0;
	@%p39 bra 	BB48_55;

	mov.u32 	%r300, 32;
	sub.s32 	%r301, %r300, %r103;
	shr.u32 	%r302, %r420, %r301;
	shl.b32 	%r303, %r419, %r103;
	add.s32 	%r419, %r302, %r303;
	add.s32 	%r391, %r299, 8;
	ld.local.u32 	%r304, [%r391+-8];
	shr.u32 	%r305, %r304, %r301;
	shl.b32 	%r306, %r420, %r103;
	add.s32 	%r420, %r305, %r306;

BB48_55:
	shr.u32 	%r307, %r420, 30;
	shl.b32 	%r308, %r419, 2;
	add.s32 	%r421, %r307, %r308;
	shl.b32 	%r109, %r420, 2;
	shr.u32 	%r309, %r421, 31;
	shr.u32 	%r310, %r419, 30;
	add.s32 	%r110, %r309, %r310;
	setp.eq.s32	%p40, %r309, 0;
	mov.u32 	%r422, %r99;
	mov.u32 	%r423, %r109;
	@%p40 bra 	BB48_57;

	not.b32 	%r311, %r421;
	neg.s32 	%r111, %r109;
	setp.eq.s32	%p41, %r109, 0;
	selp.u32	%r312, 1, 0, %p41;
	add.s32 	%r421, %r312, %r311;
	xor.b32  	%r113, %r99, -2147483648;
	mov.u32 	%r422, %r113;
	mov.u32 	%r423, %r111;

BB48_57:
	mov.u32 	%r115, %r422;
	neg.s32 	%r313, %r110;
	setp.eq.s32	%p42, %r99, 0;
	selp.b32	%r426, %r110, %r313, %p42;
	clz.b32 	%r425, %r421;
	setp.eq.s32	%p43, %r425, 0;
	shl.b32 	%r314, %r421, %r425;
	mov.u32 	%r315, 32;
	sub.s32 	%r316, %r315, %r425;
	shr.u32 	%r317, %r423, %r316;
	add.s32 	%r318, %r317, %r314;
	selp.b32	%r119, %r421, %r318, %p43;
	mov.u32 	%r319, -921707870;
	mul.hi.u32 	%r424, %r119, %r319;
	setp.lt.s32	%p44, %r424, 1;
	@%p44 bra 	BB48_59;

	mul.lo.s32 	%r320, %r119, -921707870;
	shr.u32 	%r321, %r320, 31;
	shl.b32 	%r322, %r424, 1;
	add.s32 	%r424, %r321, %r322;
	add.s32 	%r425, %r425, 1;

BB48_59:
	mov.u32 	%r323, 126;
	sub.s32 	%r324, %r323, %r425;
	shl.b32 	%r325, %r324, 23;
	add.s32 	%r326, %r424, 1;
	shr.u32 	%r327, %r326, 7;
	add.s32 	%r328, %r327, 1;
	shr.u32 	%r329, %r328, 1;
	add.s32 	%r330, %r329, %r325;
	or.b32  	%r331, %r330, %r115;
	mov.b32 	 %f325, %r331;

BB48_60:
	and.b32  	%r332, %r426, 3;
	cvt.rn.f32.s32	%f289, %r332;
	add.f32 	%f290, %f325, 0fC07B53D1;
	fma.rn.f32 	%f326, %f289, 0f3FC90FDB, %f290;
	abs.f32 	%f291, %f326;
	setp.neu.f32	%p45, %f291, 0f7F800000;
	@%p45 bra 	BB48_62;

	mov.f32 	%f292, 0f00000000;
	mul.rn.f32 	%f326, %f326, %f292;

BB48_62:
	mul.f32 	%f293, %f326, 0f3F22F983;
	cvt.rni.s32.f32	%r444, %f293;
	cvt.rn.f32.s32	%f294, %r444;
	neg.f32 	%f295, %f294;
	fma.rn.f32 	%f297, %f295, %f283, %f326;
	fma.rn.f32 	%f299, %f295, %f285, %f297;
	fma.rn.f32 	%f327, %f295, %f287, %f299;
	abs.f32 	%f301, %f326;
	setp.leu.f32	%p46, %f301, 0f47CE4780;
	@%p46 bra 	BB48_72;

	mov.b32 	 %r128, %f326;
	shr.u32 	%r129, %r128, 23;
	bfe.u32 	%r336, %r128, 23, 8;
	add.s32 	%r337, %r336, -128;
	shl.b32 	%r338, %r128, 8;
	or.b32  	%r130, %r338, -2147483648;
	shr.u32 	%r131, %r337, 5;
	mov.u32 	%r436, 0;
	mov.u32 	%r428, 6;
	mov.u32 	%r427, __cudart_i2opi_f;
	mov.u32 	%r432, %r1;

BB48_64:
	.pragma "nounroll";
	ld.const.u32 	%r341, [%r427];
	// inline asm
	{
	mad.lo.cc.u32   %r339, %r341, %r130, %r436;
	madc.hi.u32     %r340, %r341, %r130,  0;
	}
	// inline asm
	mov.u32 	%r436, %r340;
	st.local.u32 	[%r432], %r339;
	add.s32 	%r432, %r432, 4;
	add.s32 	%r427, %r427, 4;
	add.s32 	%r428, %r428, -1;
	setp.ne.s32	%p47, %r428, 0;
	@%p47 bra 	BB48_64;

	and.b32  	%r140, %r128, -2147483648;
	add.s32 	%r392, %r1, 24;
	st.local.u32 	[%r392], %r340;
	mov.u32 	%r344, 4;
	sub.s32 	%r345, %r344, %r131;
	shl.b32 	%r346, %r345, 2;
	add.s32 	%r347, %r346, %r1;
	ld.local.u32 	%r437, [%r347+8];
	ld.local.u32 	%r438, [%r347+4];
	and.b32  	%r144, %r129, 31;
	setp.eq.s32	%p48, %r144, 0;
	@%p48 bra 	BB48_67;

	mov.u32 	%r348, 32;
	sub.s32 	%r349, %r348, %r144;
	shr.u32 	%r350, %r438, %r349;
	shl.b32 	%r351, %r437, %r144;
	add.s32 	%r437, %r350, %r351;
	add.s32 	%r393, %r347, 8;
	ld.local.u32 	%r352, [%r393+-8];
	shr.u32 	%r353, %r352, %r349;
	shl.b32 	%r354, %r438, %r144;
	add.s32 	%r438, %r353, %r354;

BB48_67:
	shr.u32 	%r355, %r438, 30;
	shl.b32 	%r356, %r437, 2;
	add.s32 	%r439, %r355, %r356;
	shl.b32 	%r150, %r438, 2;
	shr.u32 	%r357, %r439, 31;
	shr.u32 	%r358, %r437, 30;
	add.s32 	%r151, %r357, %r358;
	setp.eq.s32	%p49, %r357, 0;
	mov.u32 	%r440, %r140;
	mov.u32 	%r441, %r150;
	@%p49 bra 	BB48_69;

	not.b32 	%r359, %r439;
	neg.s32 	%r152, %r150;
	setp.eq.s32	%p50, %r150, 0;
	selp.u32	%r360, 1, 0, %p50;
	add.s32 	%r439, %r360, %r359;
	xor.b32  	%r154, %r140, -2147483648;
	mov.u32 	%r440, %r154;
	mov.u32 	%r441, %r152;

BB48_69:
	mov.u32 	%r156, %r440;
	neg.s32 	%r361, %r151;
	setp.eq.s32	%p51, %r140, 0;
	selp.b32	%r444, %r151, %r361, %p51;
	clz.b32 	%r443, %r439;
	setp.eq.s32	%p52, %r443, 0;
	shl.b32 	%r362, %r439, %r443;
	mov.u32 	%r363, 32;
	sub.s32 	%r364, %r363, %r443;
	shr.u32 	%r365, %r441, %r364;
	add.s32 	%r366, %r365, %r362;
	selp.b32	%r160, %r439, %r366, %p52;
	mov.u32 	%r367, -921707870;
	mul.hi.u32 	%r442, %r160, %r367;
	setp.lt.s32	%p53, %r442, 1;
	@%p53 bra 	BB48_71;

	mul.lo.s32 	%r368, %r160, -921707870;
	shr.u32 	%r369, %r368, 31;
	shl.b32 	%r370, %r442, 1;
	add.s32 	%r442, %r369, %r370;
	add.s32 	%r443, %r443, 1;

BB48_71:
	mov.u32 	%r371, 126;
	sub.s32 	%r372, %r371, %r443;
	shl.b32 	%r373, %r372, 23;
	add.s32 	%r374, %r442, 1;
	shr.u32 	%r375, %r374, 7;
	add.s32 	%r376, %r375, 1;
	shr.u32 	%r377, %r376, 1;
	add.s32 	%r378, %r377, %r373;
	or.b32  	%r379, %r378, %r156;
	mov.b32 	 %f327, %r379;

BB48_72:
	mul.rn.f32 	%f49, %f327, %f327;
	add.s32 	%r167, %r444, 1;
	and.b32  	%r168, %r167, 1;
	setp.eq.s32	%p54, %r168, 0;
	@%p54 bra 	BB48_74;

	mov.f32 	%f302, 0fBAB6061A;
	mov.f32 	%f303, 0f37CCF5CE;
	fma.rn.f32 	%f328, %f303, %f49, %f302;
	bra.uni 	BB48_75;

BB48_3:
	mul.f32 	%f66, %f2, %f2;
	mov.f32 	%f67, 0fB58527DA;
	mov.f32 	%f68, 0f321462CC;
	fma.rn.f32 	%f69, %f68, %f66, %f67;
	mov.f32 	%f70, 0f38963E95;
	fma.rn.f32 	%f71, %f69, %f66, %f70;
	mov.f32 	%f72, 0fBB41ADCB;
	fma.rn.f32 	%f73, %f71, %f66, %f72;
	mov.f32 	%f74, 0f3D5E9CBB;
	fma.rn.f32 	%f75, %f73, %f66, %f74;
	mov.f32 	%f76, 0fBE48C331;
	fma.rn.f32 	%f3, %f75, %f66, %f76;
	setp.lt.f32	%p4, %f2, 0f7F800000;
	setp.gt.f32	%p5, %f2, 0f00000000;
	and.pred  	%p6, %p5, %p4;
	@%p6 bra 	BB48_5;
	bra.uni 	BB48_4;

BB48_5:
	mov.b32 	 %r179, %f2;
	and.b32  	%r180, %r179, 8388607;
	or.b32  	%r181, %r180, 1065353216;
	mov.b32 	 %f79, %r181;
	shr.u32 	%r182, %r179, 23;
	cvt.rn.f32.u32	%f80, %r182;
	add.f32 	%f81, %f80, 0fC2FE0000;
	setp.gt.f32	%p7, %f79, 0f3FAE147B;
	mul.f32 	%f82, %f79, 0f3F000000;
	add.f32 	%f83, %f81, 0f3F800000;
	selp.f32	%f84, %f82, %f79, %p7;
	selp.f32	%f85, %f83, %f81, %p7;
	add.f32 	%f78, %f84, 0f3F800000;
	add.f32 	%f86, %f84, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f77,%f78;
	// inline asm
	mul.f32 	%f87, %f86, %f86;
	neg.f32 	%f88, %f87;
	mul.rn.f32 	%f89, %f77, %f88;
	add.rn.f32 	%f90, %f86, %f89;
	mul.f32 	%f91, %f90, %f90;
	mov.f32 	%f92, 0f3C4C6A36;
	mov.f32 	%f93, 0f3B1E94E6;
	fma.rn.f32 	%f94, %f93, %f91, %f92;
	mov.f32 	%f95, 0f3DAAAB1A;
	fma.rn.f32 	%f96, %f94, %f91, %f95;
	mul.f32 	%f97, %f91, %f96;
	fma.rn.f32 	%f98, %f97, %f90, %f89;
	add.f32 	%f99, %f86, %f98;
	mov.f32 	%f100, 0f3F317218;
	fma.rn.f32 	%f317, %f85, %f100, %f99;
	bra.uni 	BB48_6;

BB48_44:
	add.f32 	%f198, %f2, 0fC00C9DF7;
	add.f32 	%f199, %f198, 0f33B200DC;
	mov.f32 	%f200, 0f39064A88;
	mov.f32 	%f201, 0fB789E29D;
	fma.rn.f32 	%f202, %f201, %f199, %f200;
	mov.f32 	%f203, 0fB9F0AB0D;
	fma.rn.f32 	%f204, %f202, %f199, %f203;
	mov.f32 	%f205, 0f3A8F6102;
	fma.rn.f32 	%f206, %f204, %f199, %f205;
	mov.f32 	%f207, 0fBB2C7045;
	fma.rn.f32 	%f208, %f206, %f199, %f207;
	mov.f32 	%f209, 0f3BF35DF7;
	fma.rn.f32 	%f210, %f208, %f199, %f209;
	mov.f32 	%f211, 0fBB9D097C;
	fma.rn.f32 	%f212, %f210, %f199, %f211;
	mov.f32 	%f213, 0fBD06968A;
	fma.rn.f32 	%f214, %f212, %f199, %f213;
	mov.f32 	%f215, 0fBDF2B7DF;
	fma.rn.f32 	%f216, %f214, %f199, %f215;
	mov.f32 	%f217, 0f3F055242;
	fma.rn.f32 	%f218, %f216, %f199, %f217;
	mul.f32 	%f331, %f199, %f218;
	bra.uni 	BB48_84;

BB48_4:
	lg2.approx.f32 	%f317, %f2;

BB48_6:
	abs.f32 	%f7, %f2;
	setp.gtu.f32	%p8, %f7, 0f40FB3333;
	@%p8 bra 	BB48_8;
	bra.uni 	BB48_7;

BB48_8:
	abs.f32 	%f133, %f7;
	mov.f32 	%f324, 0f00000000;
	setp.eq.f32	%p9, %f133, 0f7F800000;
	@%p9 bra 	BB48_42;

	// inline asm
	rcp.approx.ftz.f32 %f134,%f7;
	// inline asm
	mul.f32 	%f136, %f134, %f134;
	mov.f32 	%f137, 0f3F3FF7E9;
	mov.f32 	%f138, 0fC082CB37;
	fma.rn.f32 	%f139, %f138, %f136, %f137;
	mov.f32 	%f140, 0fBE458BAE;
	fma.rn.f32 	%f141, %f139, %f136, %f140;
	mov.f32 	%f142, 0f3E3FFF8B;
	fma.rn.f32 	%f143, %f141, %f136, %f142;
	mov.f32 	%f144, 0f3F800000;
	fma.rn.f32 	%f145, %f143, %f136, %f144;
	mov.f32 	%f146, 0f3EB914AD;
	mov.f32 	%f147, 0fBFCA3BA2;
	fma.rn.f32 	%f148, %f147, %f136, %f146;
	mov.f32 	%f149, 0fBE27F2EC;
	fma.rn.f32 	%f150, %f148, %f136, %f149;
	mov.f32 	%f151, 0f3EBFFFFD;
	fma.rn.f32 	%f152, %f150, %f136, %f151;
	fma.rn.f32 	%f9, %f152, %f134, %f7;
	rsqrt.approx.f32 	%f153, %f7;
	mul.f32 	%f154, %f153, 0f3F4C422A;
	mul.f32 	%f10, %f145, %f154;
	mul.f32 	%f155, %f9, 0f3F22F983;
	cvt.rni.s32.f32	%r404, %f155;
	cvt.rn.f32.s32	%f156, %r404;
	neg.f32 	%f157, %f156;
	mov.f32 	%f158, 0f3FC90FDA;
	fma.rn.f32 	%f159, %f157, %f158, %f9;
	mov.f32 	%f160, 0f33A22168;
	fma.rn.f32 	%f161, %f157, %f160, %f159;
	mov.f32 	%f162, 0f27C234C5;
	fma.rn.f32 	%f318, %f157, %f162, %f161;
	abs.f32 	%f163, %f9;
	setp.leu.f32	%p10, %f163, 0f47CE4780;
	@%p10 bra 	BB48_19;

	mov.b32 	 %r4, %f9;
	shl.b32 	%r186, %r4, 8;
	or.b32  	%r5, %r186, -2147483648;
	mov.u32 	%r396, 0;
	mov.u32 	%r395, 6;
	mov.u32 	%r394, __cudart_i2opi_f;
	mov.u32 	%r435, %r1;

BB48_11:
	.pragma "nounroll";
	mov.u32 	%r8, %r435;
	ld.const.u32 	%r189, [%r394];
	// inline asm
	{
	mad.lo.cc.u32   %r187, %r189, %r5, %r396;
	madc.hi.u32     %r188, %r189, %r5,  0;
	}
	// inline asm
	mov.u32 	%r396, %r188;
	st.local.u32 	[%r8], %r187;
	add.s32 	%r11, %r8, 4;
	add.s32 	%r394, %r394, 4;
	add.s32 	%r395, %r395, -1;
	setp.ne.s32	%p11, %r395, 0;
	mov.u32 	%r435, %r11;
	@%p11 bra 	BB48_11;

	and.b32  	%r14, %r4, -2147483648;
	bfe.u32 	%r192, %r4, 23, 8;
	add.s32 	%r193, %r192, -128;
	shr.u32 	%r194, %r193, 5;
	mov.u32 	%r195, 4;
	sub.s32 	%r196, %r195, %r194;
	shl.b32 	%r197, %r196, 2;
	add.s32 	%r198, %r197, %r1;
	st.local.u32 	[%r1+24], %r188;
	bfe.u32 	%r15, %r4, 23, 5;
	ld.local.u32 	%r397, [%r198+8];
	ld.local.u32 	%r398, [%r198+4];
	setp.eq.s32	%p12, %r15, 0;
	@%p12 bra 	BB48_14;

	mov.u32 	%r199, 32;
	sub.s32 	%r200, %r199, %r15;
	shr.u32 	%r201, %r398, %r200;
	shl.b32 	%r202, %r397, %r15;
	add.s32 	%r397, %r201, %r202;
	add.s32 	%r388, %r198, 8;
	ld.local.u32 	%r203, [%r388+-8];
	shr.u32 	%r204, %r203, %r200;
	shl.b32 	%r205, %r398, %r15;
	add.s32 	%r398, %r204, %r205;

BB48_14:
	shr.u32 	%r206, %r398, 30;
	shl.b32 	%r207, %r397, 2;
	add.s32 	%r399, %r206, %r207;
	shl.b32 	%r24, %r398, 2;
	shr.u32 	%r208, %r399, 31;
	shr.u32 	%r209, %r397, 30;
	add.s32 	%r25, %r208, %r209;
	setp.eq.s32	%p13, %r208, 0;
	mov.u32 	%r400, %r14;
	mov.u32 	%r401, %r24;
	@%p13 bra 	BB48_16;

	not.b32 	%r210, %r399;
	neg.s32 	%r26, %r24;
	setp.eq.s32	%p14, %r24, 0;
	selp.u32	%r211, 1, 0, %p14;
	add.s32 	%r399, %r211, %r210;
	xor.b32  	%r28, %r14, -2147483648;
	mov.u32 	%r400, %r28;
	mov.u32 	%r401, %r26;

BB48_16:
	mov.u32 	%r30, %r400;
	neg.s32 	%r212, %r25;
	setp.eq.s32	%p15, %r14, 0;
	selp.b32	%r404, %r25, %r212, %p15;
	clz.b32 	%r403, %r399;
	setp.eq.s32	%p16, %r403, 0;
	shl.b32 	%r213, %r399, %r403;
	mov.u32 	%r214, 32;
	sub.s32 	%r215, %r214, %r403;
	shr.u32 	%r216, %r401, %r215;
	add.s32 	%r217, %r216, %r213;
	selp.b32	%r34, %r399, %r217, %p16;
	mov.u32 	%r218, -921707870;
	mul.hi.u32 	%r402, %r34, %r218;
	setp.lt.s32	%p17, %r402, 1;
	@%p17 bra 	BB48_18;

	mul.lo.s32 	%r219, %r34, -921707870;
	shr.u32 	%r220, %r219, 31;
	shl.b32 	%r221, %r402, 1;
	add.s32 	%r402, %r220, %r221;
	add.s32 	%r403, %r403, 1;

BB48_18:
	mov.u32 	%r222, 126;
	sub.s32 	%r223, %r222, %r403;
	shl.b32 	%r224, %r223, 23;
	add.s32 	%r225, %r402, 1;
	shr.u32 	%r226, %r225, 7;
	add.s32 	%r227, %r226, 1;
	shr.u32 	%r228, %r227, 1;
	add.s32 	%r229, %r228, %r224;
	or.b32  	%r230, %r229, %r30;
	mov.b32 	 %f318, %r230;

BB48_19:
	and.b32  	%r231, %r404, 3;
	cvt.rn.f32.s32	%f164, %r231;
	add.f32 	%f165, %f318, 0fC016CBE4;
	fma.rn.f32 	%f319, %f164, 0f3FC90FDB, %f165;
	abs.f32 	%f166, %f319;
	setp.neu.f32	%p18, %f166, 0f7F800000;
	@%p18 bra 	BB48_21;

	mov.f32 	%f167, 0f00000000;
	mul.rn.f32 	%f319, %f319, %f167;

BB48_21:
	mul.f32 	%f168, %f319, 0f3F22F983;
	cvt.rni.s32.f32	%r415, %f168;
	cvt.rn.f32.s32	%f169, %r415;
	neg.f32 	%f170, %f169;
	fma.rn.f32 	%f172, %f170, %f158, %f319;
	fma.rn.f32 	%f174, %f170, %f160, %f172;
	fma.rn.f32 	%f320, %f170, %f162, %f174;
	abs.f32 	%f176, %f319;
	setp.leu.f32	%p19, %f176, 0f47CE4780;
	@%p19 bra 	BB48_31;

	mov.b32 	 %r43, %f319;
	shr.u32 	%r44, %r43, 23;
	bfe.u32 	%r235, %r43, 23, 8;
	add.s32 	%r236, %r235, -128;
	shl.b32 	%r237, %r43, 8;
	or.b32  	%r45, %r237, -2147483648;
	shr.u32 	%r46, %r236, 5;
	mov.u32 	%r407, 0;
	mov.u32 	%r406, 6;
	mov.u32 	%r405, __cudart_i2opi_f;
	mov.u32 	%r434, %r1;

BB48_23:
	.pragma "nounroll";
	ld.const.u32 	%r240, [%r405];
	// inline asm
	{
	mad.lo.cc.u32   %r238, %r240, %r45, %r407;
	madc.hi.u32     %r239, %r240, %r45,  0;
	}
	// inline asm
	mov.u32 	%r407, %r239;
	st.local.u32 	[%r434], %r238;
	add.s32 	%r434, %r434, 4;
	add.s32 	%r405, %r405, 4;
	add.s32 	%r406, %r406, -1;
	setp.ne.s32	%p20, %r406, 0;
	@%p20 bra 	BB48_23;

	and.b32  	%r55, %r43, -2147483648;
	mov.u32 	%r243, 4;
	sub.s32 	%r244, %r243, %r46;
	shl.b32 	%r245, %r244, 2;
	add.s32 	%r246, %r245, %r1;
	st.local.u32 	[%r1+24], %r239;
	ld.local.u32 	%r408, [%r246+8];
	ld.local.u32 	%r409, [%r246+4];
	and.b32  	%r59, %r44, 31;
	setp.eq.s32	%p21, %r59, 0;
	@%p21 bra 	BB48_26;

	mov.u32 	%r247, 32;
	sub.s32 	%r248, %r247, %r59;
	shr.u32 	%r249, %r409, %r248;
	shl.b32 	%r250, %r408, %r59;
	add.s32 	%r408, %r249, %r250;
	add.s32 	%r389, %r246, 8;
	ld.local.u32 	%r251, [%r389+-8];
	shr.u32 	%r252, %r251, %r248;
	shl.b32 	%r253, %r409, %r59;
	add.s32 	%r409, %r252, %r253;

BB48_26:
	shr.u32 	%r254, %r409, 30;
	shl.b32 	%r255, %r408, 2;
	add.s32 	%r410, %r254, %r255;
	shl.b32 	%r65, %r409, 2;
	shr.u32 	%r256, %r410, 31;
	shr.u32 	%r257, %r408, 30;
	add.s32 	%r66, %r256, %r257;
	setp.eq.s32	%p22, %r256, 0;
	mov.u32 	%r411, %r55;
	mov.u32 	%r412, %r65;
	@%p22 bra 	BB48_28;

	not.b32 	%r258, %r410;
	neg.s32 	%r67, %r65;
	setp.eq.s32	%p23, %r65, 0;
	selp.u32	%r259, 1, 0, %p23;
	add.s32 	%r410, %r259, %r258;
	xor.b32  	%r69, %r55, -2147483648;
	mov.u32 	%r411, %r69;
	mov.u32 	%r412, %r67;

BB48_28:
	mov.u32 	%r71, %r411;
	neg.s32 	%r260, %r66;
	setp.eq.s32	%p24, %r55, 0;
	selp.b32	%r415, %r66, %r260, %p24;
	clz.b32 	%r414, %r410;
	setp.eq.s32	%p25, %r414, 0;
	shl.b32 	%r261, %r410, %r414;
	mov.u32 	%r262, 32;
	sub.s32 	%r263, %r262, %r414;
	shr.u32 	%r264, %r412, %r263;
	add.s32 	%r265, %r264, %r261;
	selp.b32	%r75, %r410, %r265, %p25;
	mov.u32 	%r266, -921707870;
	mul.hi.u32 	%r413, %r75, %r266;
	setp.lt.s32	%p26, %r413, 1;
	@%p26 bra 	BB48_30;

	mul.lo.s32 	%r267, %r75, -921707870;
	shr.u32 	%r268, %r267, 31;
	shl.b32 	%r269, %r413, 1;
	add.s32 	%r413, %r268, %r269;
	add.s32 	%r414, %r414, 1;

BB48_30:
	mov.u32 	%r270, 126;
	sub.s32 	%r271, %r270, %r414;
	shl.b32 	%r272, %r271, 23;
	add.s32 	%r273, %r413, 1;
	shr.u32 	%r274, %r273, 7;
	add.s32 	%r275, %r274, 1;
	shr.u32 	%r276, %r275, 1;
	add.s32 	%r277, %r276, %r272;
	or.b32  	%r278, %r277, %r71;
	mov.b32 	 %f320, %r278;

BB48_31:
	mul.rn.f32 	%f20, %f320, %f320;
	add.s32 	%r82, %r415, 1;
	and.b32  	%r83, %r82, 1;
	setp.eq.s32	%p27, %r83, 0;
	@%p27 bra 	BB48_33;

	mov.f32 	%f177, 0fBAB6061A;
	mov.f32 	%f178, 0f37CCF5CE;
	fma.rn.f32 	%f321, %f178, %f20, %f177;
	bra.uni 	BB48_34;

BB48_7:
	add.f32 	%f101, %f7, 0fC0753AAC;
	add.f32 	%f102, %f101, 0f33A5090F;
	mov.f32 	%f103, 0f2B81BF42;
	mov.f32 	%f104, 0f29AF3463;
	fma.rn.f32 	%f105, %f104, %f102, %f103;
	mov.f32 	%f106, 0fADE21EC1;
	fma.rn.f32 	%f107, %f105, %f102, %f106;
	mov.f32 	%f108, 0fAF5DDEFF;
	fma.rn.f32 	%f109, %f107, %f102, %f108;
	mov.f32 	%f110, 0f319B0C9D;
	fma.rn.f32 	%f111, %f109, %f102, %f110;
	mov.f32 	%f112, 0f32E81173;
	fma.rn.f32 	%f113, %f111, %f102, %f112;
	mov.f32 	%f114, 0fB50F8DC8;
	fma.rn.f32 	%f115, %f113, %f102, %f114;
	mov.f32 	%f116, 0fB61E653D;
	fma.rn.f32 	%f117, %f115, %f102, %f116;
	mov.f32 	%f118, 0f382CD9C5;
	fma.rn.f32 	%f119, %f117, %f102, %f118;
	mov.f32 	%f120, 0f38F9EB10;
	fma.rn.f32 	%f121, %f119, %f102, %f120;
	mov.f32 	%f122, 0fBAECEB9C;
	fma.rn.f32 	%f123, %f121, %f102, %f122;
	mov.f32 	%f124, 0fBB276FFD;
	fma.rn.f32 	%f125, %f123, %f102, %f124;
	mov.f32 	%f126, 0f3D073993;
	fma.rn.f32 	%f127, %f125, %f102, %f126;
	add.f32 	%f128, %f7, 0fC0E07FB0;
	add.f32 	%f129, %f128, 0f3444B8DB;
	mul.f32 	%f130, %f129, %f127;
	mul.f32 	%f131, %f102, %f130;
	mul.f32 	%f324, %f7, %f131;
	bra.uni 	BB48_42;

BB48_46:
	add.f32 	%f219, %f2, 0fC0ADBFF2;
	add.f32 	%f220, %f219, 0fB4687B03;
	mov.f32 	%f221, 0fB508A416;
	mov.f32 	%f222, 0f32BE57D0;
	fma.rn.f32 	%f223, %f222, %f220, %f221;
	mov.f32 	%f224, 0fB63F8A14;
	fma.rn.f32 	%f225, %f223, %f220, %f224;
	mov.f32 	%f226, 0f38427E02;
	fma.rn.f32 	%f227, %f225, %f220, %f226;
	mov.f32 	%f228, 0f3919BB1C;
	fma.rn.f32 	%f229, %f227, %f220, %f228;
	mov.f32 	%f230, 0fBB0DF1FD;
	fma.rn.f32 	%f231, %f229, %f220, %f230;
	mov.f32 	%f232, 0fBB885189;
	fma.rn.f32 	%f233, %f231, %f220, %f232;
	mov.f32 	%f234, 0f3D50AEC1;
	fma.rn.f32 	%f235, %f233, %f220, %f234;
	mov.f32 	%f236, 0f3D005CFC;
	fma.rn.f32 	%f237, %f235, %f220, %f236;
	mov.f32 	%f238, 0fBEAE3E2B;
	fma.rn.f32 	%f239, %f237, %f220, %f238;
	mul.f32 	%f331, %f220, %f239;
	bra.uni 	BB48_84;

BB48_48:
	add.f32 	%f240, %f2, 0fC109893D;
	add.f32 	%f241, %f240, 0fB4E6169B;
	mov.f32 	%f242, 0f3602902E;
	mov.f32 	%f243, 0f350CF383;
	fma.rn.f32 	%f244, %f243, %f241, %f242;
	mov.f32 	%f245, 0fB8375F71;
	fma.rn.f32 	%f246, %f244, %f241, %f245;
	mov.f32 	%f247, 0fB8D9FAA8;
	fma.rn.f32 	%f248, %f246, %f241, %f247;
	mov.f32 	%f249, 0f3B03D19A;
	fma.rn.f32 	%f250, %f248, %f241, %f249;
	mov.f32 	%f251, 0f3B1E736D;
	fma.rn.f32 	%f252, %f250, %f241, %f251;
	mov.f32 	%f253, 0fBD31CAE5;
	fma.rn.f32 	%f254, %f252, %f241, %f253;
	mov.f32 	%f255, 0fBC8159B6;
	fma.rn.f32 	%f256, %f254, %f241, %f255;
	mov.f32 	%f257, 0f3E8AFCCA;
	fma.rn.f32 	%f258, %f256, %f241, %f257;
	mul.f32 	%f331, %f241, %f258;
	bra.uni 	BB48_84;

BB48_33:
	mov.f32 	%f179, 0f3C08839E;
	mov.f32 	%f180, 0fB94CA1F9;
	fma.rn.f32 	%f321, %f180, %f20, %f179;

BB48_34:
	@%p27 bra 	BB48_36;

	mov.f32 	%f181, 0f3D2AAAA5;
	fma.rn.f32 	%f182, %f321, %f20, %f181;
	mov.f32 	%f183, 0fBF000000;
	fma.rn.f32 	%f322, %f182, %f20, %f183;
	bra.uni 	BB48_37;

BB48_36:
	mov.f32 	%f184, 0fBE2AAAA3;
	fma.rn.f32 	%f185, %f321, %f20, %f184;
	mov.f32 	%f186, 0f00000000;
	fma.rn.f32 	%f322, %f185, %f20, %f186;

BB48_37:
	fma.rn.f32 	%f323, %f322, %f320, %f320;
	@%p27 bra 	BB48_39;

	fma.rn.f32 	%f323, %f322, %f20, %f144;

BB48_39:
	and.b32  	%r279, %r82, 2;
	setp.eq.s32	%p30, %r279, 0;
	@%p30 bra 	BB48_41;

	mov.f32 	%f188, 0f00000000;
	mov.f32 	%f189, 0fBF800000;
	fma.rn.f32 	%f323, %f323, %f189, %f188;

BB48_41:
	mul.f32 	%f324, %f10, %f323;

BB48_42:
	neg.f32 	%f190, %f324;
	setp.lt.f32	%p31, %f2, 0f00000000;
	selp.f32	%f191, %f190, %f324, %p31;
	mov.b32 	 %r280, %f2;
	and.b32  	%r281, %r280, -2147483648;
	mov.b32 	 %r282, %f191;
	and.b32  	%r283, %r282, 2147483647;
	or.b32  	%r284, %r283, %r281;
	mov.b32 	 %f192, %r284;
	setp.lt.f32	%p32, %f7, 0f0DA24260;
	selp.f32	%f193, %f192, %f191, %p32;
	mov.f32 	%f194, 0fBF800000;
	div.rn.f32 	%f195, %f194, %f2;
	fma.rn.f32 	%f196, %f317, %f193, %f195;
	mul.f32 	%f197, %f196, 0f3F22F983;
	fma.rn.f32 	%f331, %f2, %f3, %f197;

BB48_84:
	setp.geu.f32	%p58, %f1, 0f00000000;
	@%p58 bra 	BB48_86;

	mov.f32 	%f316, 0fBF800000;
	sqrt.rn.f32 	%f331, %f316;

BB48_86:
	cvta.to.global.u32 	%r385, %r169;
	add.s32 	%r387, %r385, %r177;
	st.global.f32 	[%r387], %f331;

BB48_87:
	ret;

BB48_74:
	mov.f32 	%f304, 0f3C08839E;
	mov.f32 	%f305, 0fB94CA1F9;
	fma.rn.f32 	%f328, %f305, %f49, %f304;

BB48_75:
	@%p54 bra 	BB48_77;

	mov.f32 	%f306, 0f3D2AAAA5;
	fma.rn.f32 	%f307, %f328, %f49, %f306;
	mov.f32 	%f308, 0fBF000000;
	fma.rn.f32 	%f329, %f307, %f49, %f308;
	bra.uni 	BB48_78;

BB48_77:
	mov.f32 	%f309, 0fBE2AAAA3;
	fma.rn.f32 	%f310, %f328, %f49, %f309;
	mov.f32 	%f311, 0f00000000;
	fma.rn.f32 	%f329, %f310, %f49, %f311;

BB48_78:
	fma.rn.f32 	%f330, %f329, %f327, %f327;
	@%p54 bra 	BB48_80;

	fma.rn.f32 	%f330, %f329, %f49, %f269;

BB48_80:
	and.b32  	%r380, %r167, 2;
	setp.eq.s32	%p57, %r380, 0;
	@%p57 bra 	BB48_82;

	mov.f32 	%f313, 0f00000000;
	mov.f32 	%f314, 0fBF800000;
	fma.rn.f32 	%f330, %f330, %f314, %f313;

BB48_82:
	mul.f32 	%f331, %f39, %f330;
	bra.uni 	BB48_84;
}


